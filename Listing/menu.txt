; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\menu.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\menu.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\menu.crf --no_multibyte_chars ..\APP\menu.c]
                          THUMB

                          AREA ||i.CreateWindow||, CODE, READONLY, ALIGN=2

                  CreateWindow PROC
;;;491    
;;;492    WM_HWIN CreateWindow(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;493      if(page_sw == face_graph || page_sw == face_menu)
000002  4c24              LDR      r4,|L1.148|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d00f              BEQ      |L1.42|
00000a  7820              LDRB     r0,[r4,#0]  ; page_sw
00000c  2802              CMP      r0,#2
00000e  d00c              BEQ      |L1.42|
;;;494      {      
;;;495      }else{
;;;496    	  GPIO_SetBits(GPIOA,GPIO_Pin_15);//µç×Ó¸ºÔØOFF
000010  f44f4100          MOV      r1,#0x8000
000014  4820              LDR      r0,|L1.152|
000016  f7fffffe          BL       GPIO_SetBits
;;;497    	  GPIO_ResetBits(GPIOC,GPIO_Pin_1);//¹Ø±ÕµçÔ´Êä³ö
00001a  2102              MOVS     r1,#2
00001c  481f              LDR      r0,|L1.156|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;498    	  Delay_ms(500);
000022  f44f70fa          MOV      r0,#0x1f4
000026  f7fffffe          BL       Delay_ms
                  |L1.42|
;;;499    	  //GPIO_SetBits(GPIOC,GPIO_Pin_13);//¹Ø±ÕµçÔ´Êä³ö¼ÌµçÆ
;;;500    //      IO_OFF();
;;;501    	  
;;;502      }
;;;503      page_sw = face_menu;
00002a  2002              MOVS     r0,#2
00002c  7020              STRB     r0,[r4,#0]
;;;504      track = face_menu;
00002e  491c              LDR      r1,|L1.160|
000030  7008              STRB     r0,[r1,#0]
;;;505      set_sw = set_10;
000032  491c              LDR      r1,|L1.164|
000034  2009              MOVS     r0,#9
000036  7008              STRB     r0,[r1,#0]
;;;506      SET_Voltage = pow_v;
000038  481b              LDR      r0,|L1.168|
00003a  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
00003e  6041              STR      r1,[r0,#4]  ; Run_Control
;;;507      SET_Current = pow_c;
000040  f8d010a0          LDR      r1,[r0,#0xa0]  ; Run_Control
000044  6081              STR      r1,[r0,#8]  ; Run_Control
;;;508      pow_cutoffc = (float)set_pow_cutoffc/1000;
000046  4819              LDR      r0,|L1.172|
000048  eddf0a19          VLDR     s1,|L1.176|
00004c  4d19              LDR      r5,|L1.180|
00004e  ed900a05          VLDR     s0,[r0,#0x14]
000052  eeb80ac0          VCVT.F32.S32 s0,s0
000056  ee801a20          VDIV.F32 s2,s0,s1
00005a  ed851a02          VSTR     s2,[r5,#8]
;;;509      pass = 0;
00005e  4816              LDR      r0,|L1.184|
000060  2400              MOVS     r4,#0
000062  7004              STRB     r4,[r0,#0]
;;;510      mode_sw = mode_pow;
000064  4915              LDR      r1,|L1.188|
000066  2003              MOVS     r0,#3
000068  7008              STRB     r0,[r1,#0]
;;;511    //  USART_SendData(USART3,1);//连接电源
;;;512      TM1650_SET_LED(0x68,0x70);
00006a  2170              MOVS     r1,#0x70
00006c  2068              MOVS     r0,#0x68
00006e  f7fffffe          BL       TM1650_SET_LED
;;;513      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000072  f44f5180          MOV      r1,#0x1000
000076  4812              LDR      r0,|L1.192|
000078  f7fffffe          BL       GPIO_ResetBits
;;;514      hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
00007c  f7fffffe          BL       WM_GetDesktopWindow
000080  4603              MOV      r3,r0
000082  9400              STR      r4,[sp,#0]
000084  4a0f              LDR      r2,|L1.196|
000086  2113              MOVS     r1,#0x13
000088  480f              LDR      r0,|L1.200|
00008a  9401              STR      r4,[sp,#4]
00008c  f7fffffe          BL       GUI_CreateDialogBox
000090  6068              STR      r0,[r5,#4]  ; hWinWind
;;;515      return hWinWind;
;;;516    }
000092  bd7c              POP      {r2-r6,pc}
;;;517    
                          ENDP

                  |L1.148|
                          DCD      page_sw
                  |L1.152|
                          DCD      0x40020000
                  |L1.156|
                          DCD      0x40020800
                  |L1.160|
                          DCD      track
                  |L1.164|
                          DCD      set_sw
                  |L1.168|
                          DCD      Run_Control
                  |L1.172|
                          DCD      InFlashSave
                  |L1.176|
0000b0  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.180|
                          DCD      ||.data||
                  |L1.184|
                          DCD      pass
                  |L1.188|
                          DCD      mode_sw
                  |L1.192|
                          DCD      0x40020c00
                  |L1.196|
                          DCD      _cbDialog
                  |L1.200|
                          DCD      ||.constdata||

                          AREA ||i.DEL_POW||, CODE, READONLY, ALIGN=2

                  DEL_POW PROC
;;;790    }
;;;791    void DEL_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;792    {
;;;793    	switch(set_sw){
000004  482c              LDR      r0,|L2.184|
000006  7800              LDRB     r0,[r0,#0]  ; set_sw
;;;794    		case set_18:
;;;795            {
;;;796    			WM_HWIN hItem;
;;;797    //            WM_InvalidateWindow(hWinWind);
;;;798                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000008  4a2c              LDR      r2,|L2.188|
;;;799    			if(bit > 1)
;;;800    			{
;;;801    				bit --;
;;;802    				set_limit[bit-1] = '\0';
00000a  4f2d              LDR      r7,|L2.192|
00000c  2400              MOVS     r4,#0
00000e  4d2d              LDR      r5,|L2.196|
;;;803    			}
;;;804    			if(bit == dot_flag)
000010  4e2d              LDR      r6,|L2.200|
000012  2811              CMP      r0,#0x11              ;793
000014  d01c              BEQ      |L2.80|
000016  2812              CMP      r0,#0x12              ;793
000018  d033              BEQ      |L2.130|
00001a  2858              CMP      r0,#0x58              ;793
00001c  d14a              BNE      |L2.180|
;;;805    			{
;;;806    				dot_flag = 0;
;;;807    			}
;;;808    			TEXT_SetText(hItem,set_limit);
;;;809    		}break;
;;;810    		case set_19:
;;;811            {
;;;812    			WM_HWIN hItem;
;;;813    //            WM_InvalidateWindow(hWinWind);
;;;814                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;815    			if(bit > 1)
;;;816    			{
;;;817    				bit --;
;;;818    				set_limit[bit-1] = '\0';
;;;819    			}
;;;820    			if(bit == dot_flag)
;;;821    			{
;;;822    				dot_flag = 0;
;;;823    			}
;;;824    			TEXT_SetText(hItem,set_limit);
;;;825    		}break;
;;;826    		case set_89:
;;;827            {
;;;828                WM_HWIN hItem;
;;;829    //            WM_InvalidateWindow(hWinWind);
;;;830                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00001e  f640112e          MOV      r1,#0x92e
000022  6850              LDR      r0,[r2,#4]  ; hWinWind
000024  f7fffffe          BL       WM_GetDialogItem
;;;831    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;832    			{
;;;833    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;834    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;835    			}
;;;836    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;837    			{
;;;838    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;839    			}
;;;840    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491d              LDR      r1,|L2.192|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f6400166          MOV      r1,#0x866             ;798
000054  6850              LDR      r0,[r2,#4]            ;798  ; hWinWind
000056  f7fffffe          BL       WM_GetDialogItem
00005a  7829              LDRB     r1,[r5,#0]            ;799  ; bit
00005c  2901              CMP      r1,#1                 ;799
00005e  d906              BLS      |L2.110|
000060  7829              LDRB     r1,[r5,#0]            ;801  ; bit
000062  1e49              SUBS     r1,r1,#1              ;801
000064  7029              STRB     r1,[r5,#0]            ;801
000066  7829              LDRB     r1,[r5,#0]            ;802  ; bit
000068  4439              ADD      r1,r1,r7              ;802
00006a  f8014c01          STRB     r4,[r1,#-1]           ;802
                  |L2.110|
00006e  7829              LDRB     r1,[r5,#0]            ;804  ; bit
000070  7832              LDRB     r2,[r6,#0]            ;804  ; dot_flag
000072  4291              CMP      r1,r2                 ;804
000074  d100              BNE      |L2.120|
000076  7034              STRB     r4,[r6,#0]            ;806
                  |L2.120|
000078  e8bd41f0          POP      {r4-r8,lr}            ;808
00007c  4910              LDR      r1,|L2.192|
00007e  f7ffbffe          B.W      TEXT_SetText
                  |L2.130|
000082  f6400167          MOV      r1,#0x867             ;814
000086  6850              LDR      r0,[r2,#4]            ;814  ; hWinWind
000088  f7fffffe          BL       WM_GetDialogItem
00008c  7829              LDRB     r1,[r5,#0]            ;815  ; bit
00008e  2901              CMP      r1,#1                 ;815
000090  d906              BLS      |L2.160|
000092  7829              LDRB     r1,[r5,#0]            ;817  ; bit
000094  1e49              SUBS     r1,r1,#1              ;817
000096  7029              STRB     r1,[r5,#0]            ;817
000098  7829              LDRB     r1,[r5,#0]            ;818  ; bit
00009a  4439              ADD      r1,r1,r7              ;818
00009c  f8014c01          STRB     r4,[r1,#-1]           ;818
                  |L2.160|
0000a0  7829              LDRB     r1,[r5,#0]            ;820  ; bit
0000a2  7832              LDRB     r2,[r6,#0]            ;820  ; dot_flag
0000a4  4291              CMP      r1,r2                 ;820
0000a6  d100              BNE      |L2.170|
0000a8  7034              STRB     r4,[r6,#0]            ;822
                  |L2.170|
0000aa  e8bd41f0          POP      {r4-r8,lr}            ;824
0000ae  4904              LDR      r1,|L2.192|
0000b0  f7ffbffe          B.W      TEXT_SetText
                  |L2.180|
;;;841    		}break;
;;;842    	}
;;;843    }
0000b4  e8bd81f0          POP      {r4-r8,pc}
;;;844    
                          ENDP

                  |L2.184|
                          DCD      set_sw
                  |L2.188|
                          DCD      ||.data||
                  |L2.192|
                          DCD      set_limit
                  |L2.196|
                          DCD      bit
                  |L2.200|
                          DCD      dot_flag

                          AREA ||i.INPUT_POW||, CODE, READONLY, ALIGN=2

                  INPUT_POW PROC
;;;847    void INPUT_POW(char* num);            
;;;848    void INPUT_POW(char* num){ 
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;849    	u8 i;
;;;850        switch(set_sw){
000006  4841              LDR      r0,|L3.268|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;851    		case set_18:
;;;852            {
;;;853                WM_HWIN hItem;
;;;854    //            WM_InvalidateWindow(hWinWind);
;;;855                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00000a  4b41              LDR      r3,|L3.272|
;;;856    			if(bit < 6)
;;;857    			{
;;;858    				strcat(set_limit,num);
;;;859    			}
;;;860    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4c41              LDR      r4,|L3.276|
00000e  4d42              LDR      r5,|L3.280|
000010  2a11              CMP      r2,#0x11              ;850
000012  d01c              BEQ      |L3.78|
000014  2a12              CMP      r2,#0x12              ;850
000016  d040              BEQ      |L3.154|
000018  2a58              CMP      r2,#0x58              ;850
00001a  d174              BNE      |L3.262|
;;;861    			{
;;;862    				
;;;863    			}else{			
;;;864    				
;;;865    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;866    				{
;;;867    					dot_flag = bit;
;;;868    				}
;;;869    				bit ++;
;;;870    			}
;;;871    			TEXT_SetText(hItem,set_limit);
;;;872    //            switch(bit){
;;;873    //                case 1:
;;;874    //                {
;;;875    //					for(i=0;i<6;i++)
;;;876    //					{
;;;877    //						set_limit[i] = '\0';
;;;878    //					}
;;;879    //                    pow_v = atoi(num) * 100;
;;;880    //                    strcat(set_limit,num);            
;;;881    //                    TEXT_SetText(hItem,set_limit);
;;;882    //                    bit = 2;
;;;883    //                    break;
;;;884    //                }
;;;885    //                case 2:
;;;886    //                {
;;;887    //                    strcat(set_limit,num);
;;;888    //					if(set_limit[bit-1] == 0x62){
;;;889    //						set_limit[bit-1] = '\0';
;;;890    //						set_limit[bit-2] = '\0';
;;;891    //						bit -= 1;
;;;892    //						pow_v = pow_v - atoi(num) * 100;
;;;893    //						TEXT_SetText(hItem,set_limit);
;;;894    //						break;
;;;895    //					}
;;;896    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;897    //                    {
;;;898    //                        dot_flag = 1;
;;;899    //                    }else{
;;;900    //                        pow_v = pow_v * 10 + atoi(num) * 100;
;;;901    //                    }           
;;;902    //                    TEXT_SetText(hItem,set_limit);
;;;903    //                    bit = 3;
;;;904    //                    break;
;;;905    //                }
;;;906    //                case 3:
;;;907    //                {
;;;908    //                    strcat(set_limit,num);
;;;909    //					if(set_limit[bit-1] == 0x62){
;;;910    //						set_limit[bit-1] = '\0';
;;;911    //						set_limit[bit-2] = '\0';
;;;912    //						bit -= 1;
;;;913    //						TEXT_SetText(hItem,set_limit);
;;;914    //						break;
;;;915    //					}
;;;916    //                    if(dot_flag == 0)
;;;917    //                    {
;;;918    //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;919    //                        {                            
;;;920    //                            dot_flag = 2;
;;;921    //                        }else{
;;;922    //                            pow_v = /*3000*/ 6200;
;;;923    //                        }
;;;924    //                    }else{
;;;925    //						pow_v = pow_v + atoi(num) * 10;
;;;926    //                    }
;;;927    //                    TEXT_SetText(hItem,set_limit);                  
;;;928    //                    bit = 4;
;;;929    //                    break;
;;;930    //                }
;;;931    //                case 4:
;;;932    //                {
;;;933    //                    strcat(set_limit,num);
;;;934    //					if(set_limit[bit-1] == 0x62){
;;;935    //						set_limit[bit-1] = '\0';
;;;936    //						set_limit[bit-2] = '\0';
;;;937    //						bit -= 1;
;;;938    //						TEXT_SetText(hItem,set_limit);
;;;939    //						pow_v = pow_v - atoi(num) * 10;
;;;940    //						break;
;;;941    //					}
;;;942    //                    if(dot_flag == 0)
;;;943    //                    {
;;;944    //                        pow_v = /*3000*/ 6200;
;;;945    //                    }else if(dot_flag == 2){
;;;946    //                        pow_v = pow_v + atoi(num) * 10;
;;;947    //                    }else{
;;;948    //                        pow_v = pow_v + atoi(num);
;;;949    //                    }
;;;950    //                    TEXT_SetText(hItem,set_limit);                   
;;;951    //                    bit = 5;
;;;952    //                    break;
;;;953    //                }
;;;954    //                case 5:
;;;955    //                {
;;;956    //                    strcat(set_limit,num);
;;;957    //					if(set_limit[bit-1] == 0x62){
;;;958    //						set_limit[bit-1] = '\0';
;;;959    //						set_limit[bit-2] = '\0';
;;;960    //						bit -= 1;
;;;961    //						TEXT_SetText(hItem,set_limit);
;;;962    //						break;
;;;963    //					}
;;;964    //                    if(dot_flag == 0)
;;;965    //                    {
;;;966    //                        pow_v = /*3000*/ 6200;
;;;967    //                    }else if(dot_flag == 1){
;;;968    //                        pow_v = pow_v;
;;;969    //                    }else{
;;;970    //                        pow_v = pow_v + atoi(num);
;;;971    //                    }
;;;972    //                    TEXT_SetText(hItem,set_limit);                   
;;;973    //                    bit = 1;
;;;974    //                    break;
;;;975    //                }
;;;976    //            }
;;;977                break;
;;;978            }
;;;979            case set_19:
;;;980            {
;;;981                WM_HWIN hItem;
;;;982    //            WM_InvalidateWindow(hWinWind);
;;;983                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;984    			if(bit < 7)
;;;985    			{
;;;986    				strcat(set_limit,num);
;;;987    			}
;;;988    			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;989    			{
;;;990    				
;;;991    			}else{			
;;;992    				
;;;993    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;994    				{
;;;995    					dot_flag = bit;
;;;996    				}
;;;997    				bit ++;
;;;998    			}
;;;999    			TEXT_SetText(hItem,set_limit);
;;;1000   //            switch(bit){
;;;1001   //                case 1:
;;;1002   //                {
;;;1003   //					for(i=0;i<6;i++)
;;;1004   //					{
;;;1005   //						set_limit[i] = '\0';
;;;1006   //					}
;;;1007   //                    pow_c = atoi(num) * 1000;
;;;1008   //                    strcat(set_limit,num);            
;;;1009   //                    TEXT_SetText(hItem,set_limit);
;;;1010   //                    bit = 2;
;;;1011   //                    break;
;;;1012   //                }
;;;1013   //                case 2:
;;;1014   //                {
;;;1015   //                    strcat(set_limit,num);            
;;;1016   //                    TEXT_SetText(hItem,set_limit);
;;;1017   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1018   //                    {
;;;1019   //                        dot_flag = 1;
;;;1020   //                    }else{
;;;1021   //                        pow_c = pow_c * 10 + atoi(num) * 1000;
;;;1022   //                    }
;;;1023   //                    bit = 3;
;;;1024   //                    break;
;;;1025   //                }
;;;1026   //                case 3:
;;;1027   //                {
;;;1028   //                    strcat(set_limit,num);
;;;1029   //                    TEXT_SetText(hItem,set_limit);
;;;1030   //                    if(dot_flag == 0)
;;;1031   //                    {
;;;1032   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1033   //                        {                            
;;;1034   //                            dot_flag = 2;
;;;1035   //                        }else{
;;;1036   //                            pow_c = 5000;
;;;1037   //                        }
;;;1038   //                    }else{
;;;1039   //                        pow_c = pow_c + atoi(num) * 100;
;;;1040   //                    }
;;;1041   //                                       
;;;1042   //                    bit = 4;
;;;1043   //                    break;
;;;1044   //                }
;;;1045   //                case 4:
;;;1046   //                {
;;;1047   //                    strcat(set_limit,num);
;;;1048   //                    TEXT_SetText(hItem,set_limit);
;;;1049   //                    if(dot_flag == 0)
;;;1050   //                    {
;;;1051   //                        pow_c = 5000;
;;;1052   //                    }else if(dot_flag == 2){
;;;1053   //                        pow_c = pow_c + atoi(num) * 100;
;;;1054   //                    }else{
;;;1055   //                        pow_c = pow_c + atoi(num) * 10;
;;;1056   //                    }
;;;1057   //                                       
;;;1058   //                    bit = 5;
;;;1059   //                    break;
;;;1060   //                }
;;;1061   //                case 5:
;;;1062   //                {
;;;1063   //                    strcat(set_limit,num);
;;;1064   //                    TEXT_SetText(hItem,set_limit);
;;;1065   //                    if(dot_flag == 0)
;;;1066   //                    {
;;;1067   //                        pow_c = 5000;
;;;1068   //                    }else if(dot_flag == 1){
;;;1069   //                        pow_c = pow_c + atoi(num);
;;;1070   //                    }else{
;;;1071   //                        pow_c = pow_c + atoi(num) * 10;
;;;1072   //                    }
;;;1073   //                                       
;;;1074   //                    bit = 6;
;;;1075   //                    break;
;;;1076   //                }
;;;1077   //                case 6:
;;;1078   //                {
;;;1079   //                    strcat(set_limit,num);
;;;1080   //                    TEXT_SetText(hItem,set_limit);
;;;1081   //                    if(dot_flag == 0)
;;;1082   //                    {
;;;1083   //                        pow_c = 0;
;;;1084   //                    }else if(dot_flag == 2){
;;;1085   //                        pow_c = pow_c + atoi(num);
;;;1086   //                    }                 
;;;1087   //                    bit = 1;
;;;1088   //                    break;
;;;1089   //                }
;;;1090   //            }
;;;1091           }
;;;1092           break;
;;;1093   		case set_89:
;;;1094           {
;;;1095               WM_HWIN hItem;
;;;1096   //            WM_InvalidateWindow(hWinWind);
;;;1097               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00001c  f640112e          MOV      r1,#0x92e
000020  6858              LDR      r0,[r3,#4]  ; hWinWind
000022  f7fffffe          BL       WM_GetDialogItem
000026  4607              MOV      r7,r0
;;;1098   			if(bit < 7)
000028  7828              LDRB     r0,[r5,#0]  ; bit
00002a  2807              CMP      r0,#7
00002c  d203              BCS      |L3.54|
;;;1099   			{
;;;1100   				strcat(set_limit,num);
00002e  4631              MOV      r1,r6
000030  483a              LDR      r0,|L3.284|
000032  f7fffffe          BL       strcat
                  |L3.54|
;;;1101   			}
;;;1102   			if(dot_flag != 0 && strcmp(num,".") == 0)
000036  7820              LDRB     r0,[r4,#0]  ; dot_flag
000038  b128              CBZ      r0,|L3.70|
00003a  a139              ADR      r1,|L3.288|
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       strcmp
000042  2800              CMP      r0,#0
000044  d059              BEQ      |L3.250|
                  |L3.70|
;;;1103   			{
;;;1104   				
;;;1105   			}else{			
;;;1106   				
;;;1107   				if(dot_flag == 0 && strcmp(num,".") == 0)
000046  7820              LDRB     r0,[r4,#0]  ; dot_flag
000048  2800              CMP      r0,#0
00004a  d04c              BEQ      |L3.230|
00004c  e052              B        |L3.244|
                  |L3.78|
00004e  f6400166          MOV      r1,#0x866             ;855
000052  6858              LDR      r0,[r3,#4]            ;855  ; hWinWind
000054  f7fffffe          BL       WM_GetDialogItem
000058  4607              MOV      r7,r0                 ;855
00005a  7828              LDRB     r0,[r5,#0]            ;856  ; bit
00005c  2806              CMP      r0,#6                 ;856
00005e  d203              BCS      |L3.104|
000060  4631              MOV      r1,r6                 ;858
000062  482e              LDR      r0,|L3.284|
000064  f7fffffe          BL       strcat
                  |L3.104|
000068  7820              LDRB     r0,[r4,#0]            ;860  ; dot_flag
00006a  b120              CBZ      r0,|L3.118|
00006c  a12c              ADR      r1,|L3.288|
00006e  4630              MOV      r0,r6                 ;860
000070  f7fffffe          BL       strcmp
000074  b158              CBZ      r0,|L3.142|
                  |L3.118|
000076  7820              LDRB     r0,[r4,#0]            ;865  ; dot_flag
000078  b930              CBNZ     r0,|L3.136|
00007a  a129              ADR      r1,|L3.288|
00007c  4630              MOV      r0,r6                 ;865
00007e  f7fffffe          BL       strcmp
000082  b908              CBNZ     r0,|L3.136|
000084  7828              LDRB     r0,[r5,#0]            ;867  ; bit
000086  7020              STRB     r0,[r4,#0]            ;867
                  |L3.136|
000088  7828              LDRB     r0,[r5,#0]            ;869  ; bit
00008a  1c40              ADDS     r0,r0,#1              ;869
00008c  7028              STRB     r0,[r5,#0]            ;869
                  |L3.142|
00008e  4638              MOV      r0,r7                 ;871
000090  e8bd41f0          POP      {r4-r8,lr}            ;871
000094  4921              LDR      r1,|L3.284|
000096  f7ffbffe          B.W      TEXT_SetText
                  |L3.154|
00009a  f6400167          MOV      r1,#0x867             ;983
00009e  6858              LDR      r0,[r3,#4]            ;983  ; hWinWind
0000a0  f7fffffe          BL       WM_GetDialogItem
0000a4  4607              MOV      r7,r0                 ;983
0000a6  7828              LDRB     r0,[r5,#0]            ;984  ; bit
0000a8  2807              CMP      r0,#7                 ;984
0000aa  d203              BCS      |L3.180|
0000ac  4631              MOV      r1,r6                 ;986
0000ae  481b              LDR      r0,|L3.284|
0000b0  f7fffffe          BL       strcat
                  |L3.180|
0000b4  7820              LDRB     r0,[r4,#0]            ;988  ; dot_flag
0000b6  b120              CBZ      r0,|L3.194|
0000b8  a119              ADR      r1,|L3.288|
0000ba  4630              MOV      r0,r6                 ;988
0000bc  f7fffffe          BL       strcmp
0000c0  b158              CBZ      r0,|L3.218|
                  |L3.194|
0000c2  7820              LDRB     r0,[r4,#0]            ;993  ; dot_flag
0000c4  b930              CBNZ     r0,|L3.212|
0000c6  a116              ADR      r1,|L3.288|
0000c8  4630              MOV      r0,r6                 ;993
0000ca  f7fffffe          BL       strcmp
0000ce  b908              CBNZ     r0,|L3.212|
0000d0  7828              LDRB     r0,[r5,#0]            ;995  ; bit
0000d2  7020              STRB     r0,[r4,#0]            ;995
                  |L3.212|
0000d4  7828              LDRB     r0,[r5,#0]            ;997  ; bit
0000d6  1c40              ADDS     r0,r0,#1              ;997
0000d8  7028              STRB     r0,[r5,#0]            ;997
                  |L3.218|
0000da  4638              MOV      r0,r7                 ;999
0000dc  e8bd41f0          POP      {r4-r8,lr}            ;999
0000e0  490e              LDR      r1,|L3.284|
0000e2  f7ffbffe          B.W      TEXT_SetText
                  |L3.230|
0000e6  a10e              ADR      r1,|L3.288|
0000e8  4630              MOV      r0,r6
0000ea  f7fffffe          BL       strcmp
0000ee  b908              CBNZ     r0,|L3.244|
;;;1108   				{
;;;1109   					dot_flag = bit;
0000f0  7828              LDRB     r0,[r5,#0]  ; bit
0000f2  7020              STRB     r0,[r4,#0]
                  |L3.244|
;;;1110   				}
;;;1111   				bit ++;
0000f4  7828              LDRB     r0,[r5,#0]  ; bit
0000f6  1c40              ADDS     r0,r0,#1
0000f8  7028              STRB     r0,[r5,#0]
                  |L3.250|
;;;1112   			}
;;;1113   			TEXT_SetText(hItem,set_limit);
0000fa  4638              MOV      r0,r7
0000fc  e8bd41f0          POP      {r4-r8,lr}
000100  4906              LDR      r1,|L3.284|
000102  f7ffbffe          B.W      TEXT_SetText
                  |L3.262|
;;;1114   //            switch(bit){
;;;1115   //                case 1:
;;;1116   //                {
;;;1117   //					for(i=0;i<6;i++)
;;;1118   //					{
;;;1119   //						set_limit[i] = '\0';
;;;1120   //					}
;;;1121   //                    set_pow_cutoffc = atoi(num) * 1000;
;;;1122   //                    strcat(set_limit,num);            
;;;1123   //                    TEXT_SetText(hItem,set_limit);
;;;1124   //                    bit = 2;
;;;1125   //                    break;
;;;1126   //                }
;;;1127   //                case 2:
;;;1128   //                {
;;;1129   //                    strcat(set_limit,num);            
;;;1130   //                    TEXT_SetText(hItem,set_limit);
;;;1131   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1132   //                    {
;;;1133   //                        dot_flag = 1;
;;;1134   //                    }else{
;;;1135   //                        set_pow_cutoffc = set_pow_cutoffc * 10 + atoi(num) * 1000;
;;;1136   //                    }
;;;1137   //                    bit = 3;
;;;1138   //                    break;
;;;1139   //                }
;;;1140   //                case 3:
;;;1141   //                {
;;;1142   //                    strcat(set_limit,num);
;;;1143   //                    TEXT_SetText(hItem,set_limit);
;;;1144   //                    if(dot_flag == 0)
;;;1145   //                    {
;;;1146   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1147   //                        {                            
;;;1148   //                            dot_flag = 2;
;;;1149   //                        }else{
;;;1150   //                            set_pow_cutoffc = 5000;
;;;1151   //                        }
;;;1152   //                    }else{
;;;1153   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1154   //                    }
;;;1155   //                                       
;;;1156   //                    bit = 4;
;;;1157   //                    break;
;;;1158   //                }
;;;1159   //                case 4:
;;;1160   //                {
;;;1161   //                    strcat(set_limit,num);
;;;1162   //                    TEXT_SetText(hItem,set_limit);
;;;1163   //                    if(dot_flag == 0)
;;;1164   //                    {
;;;1165   //                        set_pow_cutoffc = 5000;
;;;1166   //                    }else if(dot_flag == 2){
;;;1167   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1168   //                    }else{
;;;1169   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1170   //                    }
;;;1171   //                                       
;;;1172   //                    bit = 5;
;;;1173   //                    break;
;;;1174   //                }
;;;1175   //                case 5:
;;;1176   //                {
;;;1177   //                    strcat(set_limit,num);
;;;1178   //                    TEXT_SetText(hItem,set_limit);
;;;1179   //                    if(dot_flag == 0)
;;;1180   //                    {
;;;1181   //                        set_pow_cutoffc = 5000;
;;;1182   //                    }else if(dot_flag == 1){
;;;1183   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1184   //                    }else{
;;;1185   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1186   //                    }
;;;1187   //                                       
;;;1188   //                    bit = 6;
;;;1189   //                    break;
;;;1190   //                }
;;;1191   //                case 6:
;;;1192   //                {
;;;1193   //                    strcat(set_limit,num);
;;;1194   //                    TEXT_SetText(hItem,set_limit);
;;;1195   //                    if(dot_flag == 0)
;;;1196   //                    {
;;;1197   //                        set_pow_cutoffc = 0;
;;;1198   //                    }else if(dot_flag == 2){
;;;1199   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1200   //                    }                 
;;;1201   //                    bit = 1;
;;;1202   //                    break;
;;;1203   //                }
;;;1204   //            }
;;;1205           }
;;;1206           break;
;;;1207       }    
;;;1208   }
000106  e8bd81f0          POP      {r4-r8,pc}
;;;1209   
                          ENDP

00010a  0000              DCW      0x0000
                  |L3.268|
                          DCD      set_sw
                  |L3.272|
                          DCD      ||.data||
                  |L3.276|
                          DCD      dot_flag
                  |L3.280|
                          DCD      bit
                  |L3.284|
                          DCD      set_limit
                  |L3.288|
000120  2e00              DCB      ".",0
000122  00                DCB      0
000123  00                DCB      0

                          AREA ||i.MENU_OP_DOWN||, CODE, READONLY, ALIGN=2

                  MENU_OP_DOWN PROC
;;;525    void MENU_OP_DOWN(void);
;;;526    void MENU_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;527    {
;;;528        switch(set_sw)
000004  4c25              LDR      r4,|L4.156|
000006  7820              LDRB     r0,[r4,#0]  ; set_sw
;;;529        {
;;;530            case set_10:
;;;531            {
;;;532                WM_HWIN hItem;
;;;533                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
000008  4d25              LDR      r5,|L4.160|
;;;534                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;535                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;536                
;;;537                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;538                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  4e26              LDR      r6,|L4.164|
00000c  f06f4770          MVN      r7,#0xf0000000        ;534
000010  f06f487f          MVN      r8,#0xff000000        ;535
000014  f640093e          MOV      r9,#0x83e             ;537
000018  2809              CMP      r0,#9                 ;528
00001a  d020              BEQ      |L4.94|
00001c  280a              CMP      r0,#0xa               ;528
00001e  d11c              BNE      |L4.90|
;;;539                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;540    
;;;541                set_sw = set_11;
;;;542                break;
;;;543            }
;;;544            case set_11:
;;;545            {
;;;546                WM_HWIN hItem;
;;;547    //            WM_InvalidateWindow(hWinWind);
;;;548                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
000020  4649              MOV      r1,r9
000022  6868              LDR      r0,[r5,#4]  ; hWinWind
000024  f7fffffe          BL       WM_GetDialogItem
000028  4681              MOV      r9,r0
;;;549                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00002a  4639              MOV      r1,r7
00002c  4648              MOV      r0,r9
00002e  f7fffffe          BL       TEXT_SetBkColor
;;;550                TEXT_SetTextColor(hItem, GUI_WHITE);
000032  4641              MOV      r1,r8
000034  4648              MOV      r0,r9
000036  f7fffffe          BL       TEXT_SetTextColor
;;;551                
;;;552                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
00003a  f640113a          MOV      r1,#0x93a
00003e  6868              LDR      r0,[r5,#4]  ; hWinWind
000040  f7fffffe          BL       WM_GetDialogItem
000044  4605              MOV      r5,r0
;;;553                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000046  4631              MOV      r1,r6
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       TEXT_SetBkColor
;;;554                TEXT_SetTextColor(hItem, GUI_BLACK);
00004e  2100              MOVS     r1,#0
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       TEXT_SetTextColor
;;;555    
;;;556                set_sw = set_88;
000056  2057              MOVS     r0,#0x57
000058  7020              STRB     r0,[r4,#0]
                  |L4.90|
;;;557                break;
;;;558            }                     
;;;559            default: break;
;;;560        }
;;;561    }
00005a  e8bd87f0          POP      {r4-r10,pc}
                  |L4.94|
00005e  f640013d          MOV      r1,#0x83d             ;533
000062  6868              LDR      r0,[r5,#4]            ;533  ; hWinWind
000064  f7fffffe          BL       WM_GetDialogItem
000068  4682              MOV      r10,r0                ;533
00006a  4639              MOV      r1,r7                 ;534
00006c  4650              MOV      r0,r10                ;534
00006e  f7fffffe          BL       TEXT_SetBkColor
000072  4641              MOV      r1,r8                 ;535
000074  4650              MOV      r0,r10                ;535
000076  f7fffffe          BL       TEXT_SetTextColor
00007a  4649              MOV      r1,r9                 ;537
00007c  6868              LDR      r0,[r5,#4]            ;537  ; hWinWind
00007e  f7fffffe          BL       WM_GetDialogItem
000082  4605              MOV      r5,r0                 ;537
000084  4631              MOV      r1,r6                 ;538
000086  4628              MOV      r0,r5                 ;538
000088  f7fffffe          BL       TEXT_SetBkColor
00008c  2100              MOVS     r1,#0                 ;539
00008e  4628              MOV      r0,r5                 ;539
000090  f7fffffe          BL       TEXT_SetTextColor
000094  200a              MOVS     r0,#0xa               ;541
000096  7020              STRB     r0,[r4,#0]            ;541
000098  e7df              B        |L4.90|
;;;562    
                          ENDP

00009a  0000              DCW      0x0000
                  |L4.156|
                          DCD      set_sw
                  |L4.160|
                          DCD      ||.data||
                  |L4.164|
                          DCD      0x00bfffff

                          AREA ||i.MENU_OP_UP||, CODE, READONLY, ALIGN=2

                  MENU_OP_UP PROC
;;;563    void MENU_OP_UP(void);
;;;564    void MENU_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;565    {
;;;566        switch(set_sw)
000004  4c25              LDR      r4,|L5.156|
000006  7820              LDRB     r0,[r4,#0]  ; set_sw
;;;567        {
;;;568            case set_11:
;;;569    		{
;;;570    			 WM_HWIN hItem;
;;;571    //                 WM_InvalidateWindow(hWinWind);
;;;572    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
000008  4d25              LDR      r5,|L5.160|
;;;573    			 TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;574    			 TEXT_SetTextColor(hItem, GUI_WHITE);
;;;575    		   
;;;576    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
;;;577    			 TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  4e26              LDR      r6,|L5.164|
00000c  f640093e          MOV      r9,#0x83e             ;572
000010  f06f4770          MVN      r7,#0xf0000000        ;573
000014  f06f487f          MVN      r8,#0xff000000        ;574
000018  280a              CMP      r0,#0xa               ;566
00001a  d020              BEQ      |L5.94|
00001c  2857              CMP      r0,#0x57              ;566
00001e  d11c              BNE      |L5.90|
;;;578    			 TEXT_SetTextColor(hItem, GUI_BLACK);
;;;579    
;;;580    			 set_sw = set_10;
;;;581    			 break;
;;;582    		 } 
;;;583    		case set_88:
;;;584    		{
;;;585    			 WM_HWIN hItem;
;;;586    //                 WM_InvalidateWindow(hWinWind);
;;;587    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000020  f640113a          MOV      r1,#0x93a
000024  6868              LDR      r0,[r5,#4]  ; hWinWind
000026  f7fffffe          BL       WM_GetDialogItem
00002a  4682              MOV      r10,r0
;;;588    			 TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00002c  4639              MOV      r1,r7
00002e  4650              MOV      r0,r10
000030  f7fffffe          BL       TEXT_SetBkColor
;;;589    			 TEXT_SetTextColor(hItem, GUI_WHITE);
000034  4641              MOV      r1,r8
000036  4650              MOV      r0,r10
000038  f7fffffe          BL       TEXT_SetTextColor
;;;590    		   
;;;591    			 hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
00003c  4649              MOV      r1,r9
00003e  6868              LDR      r0,[r5,#4]  ; hWinWind
000040  f7fffffe          BL       WM_GetDialogItem
000044  4605              MOV      r5,r0
;;;592    			 TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000046  4631              MOV      r1,r6
000048  4628              MOV      r0,r5
00004a  f7fffffe          BL       TEXT_SetBkColor
;;;593    			 TEXT_SetTextColor(hItem, GUI_BLACK);
00004e  2100              MOVS     r1,#0
000050  4628              MOV      r0,r5
000052  f7fffffe          BL       TEXT_SetTextColor
;;;594    
;;;595    			 set_sw = set_11;
000056  200a              MOVS     r0,#0xa
000058  7020              STRB     r0,[r4,#0]
                  |L5.90|
;;;596    			 break;
;;;597    		 }                     
;;;598    		 default: break;
;;;599        }
;;;600    }
00005a  e8bd87f0          POP      {r4-r10,pc}
                  |L5.94|
00005e  4649              MOV      r1,r9                 ;572
000060  6868              LDR      r0,[r5,#4]            ;572  ; hWinWind
000062  f7fffffe          BL       WM_GetDialogItem
000066  4681              MOV      r9,r0                 ;572
000068  4639              MOV      r1,r7                 ;573
00006a  4648              MOV      r0,r9                 ;573
00006c  f7fffffe          BL       TEXT_SetBkColor
000070  4641              MOV      r1,r8                 ;574
000072  4648              MOV      r0,r9                 ;574
000074  f7fffffe          BL       TEXT_SetTextColor
000078  f640013d          MOV      r1,#0x83d             ;576
00007c  6868              LDR      r0,[r5,#4]            ;576  ; hWinWind
00007e  f7fffffe          BL       WM_GetDialogItem
000082  4605              MOV      r5,r0                 ;576
000084  4631              MOV      r1,r6                 ;577
000086  4628              MOV      r0,r5                 ;577
000088  f7fffffe          BL       TEXT_SetBkColor
00008c  2100              MOVS     r1,#0                 ;578
00008e  4628              MOV      r0,r5                 ;578
000090  f7fffffe          BL       TEXT_SetTextColor
000094  2009              MOVS     r0,#9                 ;580
000096  7020              STRB     r0,[r4,#0]            ;580
000098  e7df              B        |L5.90|
;;;601    
                          ENDP

00009a  0000              DCW      0x0000
                  |L5.156|
                          DCD      set_sw
                  |L5.160|
                          DCD      ||.data||
                  |L5.164|
                          DCD      0x00bfffff

                          AREA ||i.MENU_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  MENU_SET PROC
;;;603    void MENU_SET(void);
;;;604    void MENU_SET(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;605    {
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;606        vu8 i;
;;;607        char buf[6];    
;;;608    
;;;609        float dis_output_v;
;;;610        float dis_output_c; 
;;;611        
;;;612        if(SET_Voltage > /*3000*/ 6200)
00000a  f8df8404          LDR      r8,|L6.1040|
00000e  f8d80004          LDR      r0,[r8,#4]  ; Run_Control
000012  f6410b38          MOV      r11,#0x1838
000016  4558              CMP      r0,r11
000018  d901              BLS      |L6.30|
;;;613        {
;;;614          SET_Voltage = /*3000*/ 6200;
00001a  f8c8b004          STR      r11,[r8,#4]  ; Run_Control
                  |L6.30|
;;;615        }
;;;616        if(SET_Current > 10000)
00001e  f8d80008          LDR      r0,[r8,#8]  ; Run_Control
000022  f2427610          MOV      r6,#0x2710
000026  42b0              CMP      r0,r6
000028  d901              BLS      |L6.46|
;;;617        {
;;;618          SET_Current = 10000;
00002a  f8c86008          STR      r6,[r8,#8]  ; Run_Control
                  |L6.46|
;;;619        }
;;;620        switch(set_sw){
00002e  4df9              LDR      r5,|L6.1044|
000030  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;621            case set_10:
;;;622            {
;;;623                WM_HWIN hItem;
;;;624    //            WM_InvalidateWindow(hWinWind);
;;;625                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
;;;626                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;627                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;628                       
;;;629                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
;;;630                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;631                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;632                for(i=0;i<6;i++)
;;;633                {
;;;634                    set_limit[i] = '\0';
;;;635                }
;;;636    
;;;637                set_sw = set_18;
;;;638                break;                        
;;;639            }
;;;640            case set_18:
;;;641            {           
;;;642                WM_HWIN hItem;
;;;643    //            WM_InvalidateWindow(hWinWind);
;;;644                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
;;;645                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;646                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;647    			if(dot_flag == 0){
;;;648    				pow_v = atoi(set_limit)*100;					
;;;649    			}else if(dot_flag != 0){
;;;650    				memset(buf, '\0', sizeof(buf));
;;;651    				strncpy(buf,set_limit,dot_flag + 2);
;;;652    				pow_v = atof(buf)*100;
;;;653    			}
;;;654    			if(pow_v > 6200)
;;;655    			{
;;;656    				pow_v = 6200;
;;;657    			}
;;;658                SET_Voltage = pow_v;
;;;659    			load_v = pow_v * 10;
;;;660                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;661                {
;;;662                    SET_Voltage = 0;
;;;663                }
;;;664                dis_output_v = (float)SET_Voltage/100;
;;;665                
;;;666                sprintf(buf,"%.2f",dis_output_v);
;;;667                TEXT_SetText(hItem,buf);
;;;668                
;;;669                                                                         
;;;670                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_33);
;;;671                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;672                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;673                                
;;;674                Write_Limits();
;;;675                set_sw = set_10;
;;;676                bit = 1;
000032  f04f0901          MOV      r9,#1
;;;677                dot_flag = 0;
;;;678                break; 
;;;679             }
;;;680             case set_11:
;;;681             {
;;;682                WM_HWIN hItem;
;;;683    //            WM_InvalidateWindow(hWinWind);
;;;684                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;685                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;686                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;687                                    
;;;688                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;689                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;690                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;691                for(i=0;i<6;i++)
;;;692                {
;;;693                    set_limit[i] = '\0';
;;;694                }
;;;695    
;;;696                set_sw = set_19;
;;;697                break;                        
;;;698             }
;;;699             case set_19:
;;;700             {           
;;;701                WM_HWIN hItem;
;;;702    //            WM_InvalidateWindow(hWinWind);
;;;703                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;704                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;705                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;706    			if(dot_flag == 0){
;;;707    				pow_c = atoi(set_limit)*1000;					
;;;708    			}else if(dot_flag != 0){
;;;709    				memset(buf, '\0', sizeof(buf));
;;;710    				strncpy(buf,set_limit,dot_flag + 3);
;;;711    				pow_c = atof(buf)*1000;
000036  ed9f8bf8          VLDR     d8,|L6.1048|
;;;712    			}
;;;713                  
;;;714                if(pow_c > 10000)
;;;715                {
;;;716                    pow_c = 10000;               
;;;717                }
;;;718    			SET_Current = pow_c;
;;;719                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;720                {
;;;721                    SET_Current = 0;
;;;722                }
;;;723                dis_output_c = (float)SET_Current/1000;
00003a  ed9f9af9          VLDR     s18,|L6.1056|
00003e  f8dfa3e4          LDR      r10,|L6.1060|
000042  48f9              LDR      r0,|L6.1064|
000044  2400              MOVS     r4,#0                 ;625
000046  4ff9              LDR      r7,|L6.1068|
000048  2912              CMP      r1,#0x12              ;620
00004a  d07c              BEQ      |L6.326|
00004c  dc7c              BGT      |L6.328|
00004e  f6400666          MOV      r6,#0x866             ;629
000052  2909              CMP      r1,#9                 ;620
000054  d079              BEQ      |L6.330|
000056  290a              CMP      r1,#0xa               ;620
000058  d078              BEQ      |L6.332|
00005a  2911              CMP      r1,#0x11              ;620
00005c  d177              BNE      |L6.334|
00005e  4682              MOV      r10,r0                ;644
000060  4631              MOV      r1,r6                 ;644
000062  6840              LDR      r0,[r0,#4]            ;644  ; hWinWind
000064  f7fffffe          BL       WM_GetDialogItem
000068  4606              MOV      r6,r0                 ;644
00006a  f06f4170          MVN      r1,#0xf0000000        ;645
00006e  4630              MOV      r0,r6                 ;645
000070  f7fffffe          BL       TEXT_SetBkColor
000074  f06f417f          MVN      r1,#0xff000000        ;646
000078  4630              MOV      r0,r6                 ;646
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  7838              LDRB     r0,[r7,#0]            ;647  ; dot_flag
000080  2800              CMP      r0,#0                 ;647
000082  d065              BEQ      |L6.336|
000084  7838              LDRB     r0,[r7,#0]            ;649  ; dot_flag
000086  b1b0              CBZ      r0,|L6.182|
000088  9400              STR      r4,[sp,#0]            ;650
00008a  9401              STR      r4,[sp,#4]            ;650
00008c  783a              LDRB     r2,[r7,#0]            ;651  ; dot_flag
00008e  49e5              LDR      r1,|L6.1060|
000090  1c92              ADDS     r2,r2,#2              ;651
000092  4668              MOV      r0,sp                 ;651
000094  f7fffffe          BL       strncpy
000098  4668              MOV      r0,sp                 ;652
00009a  f7fffffe          BL       __hardfp_atof
00009e  ed9f1be4          VLDR     d1,|L6.1072|
0000a2  ec510b10          VMOV     r0,r1,d0              ;652
0000a6  ec532b11          VMOV     r2,r3,d1              ;652
0000aa  f7fffffe          BL       __aeabi_dmul
0000ae  f7fffffe          BL       __aeabi_d2uiz
0000b2  f8c80098          STR      r0,[r8,#0x98]         ;652  ; Run_Control
                  |L6.182|
0000b6  f8d80098          LDR      r0,[r8,#0x98]         ;654  ; Run_Control
0000ba  4558              CMP      r0,r11                ;654
0000bc  d901              BLS      |L6.194|
0000be  f8c8b098          STR      r11,[r8,#0x98]        ;656  ; Run_Control
                  |L6.194|
0000c2  f8d80098          LDR      r0,[r8,#0x98]         ;658  ; Run_Control
0000c6  f8c80004          STR      r0,[r8,#4]            ;658  ; Run_Control
0000ca  f8d80098          LDR      r0,[r8,#0x98]         ;659  ; Run_Control
0000ce  eb000080          ADD      r0,r0,r0,LSL #2       ;659
0000d2  0040              LSLS     r0,r0,#1              ;659
0000d4  f8c800a4          STR      r0,[r8,#0xa4]         ;659  ; Run_Control
0000d8  f8d81004          LDR      r1,[r8,#4]            ;660  ; Run_Control
0000dc  2064              MOVS     r0,#0x64              ;660
0000de  fbb1f0f0          UDIV     r0,r1,r0              ;660
0000e2  f8d81008          LDR      r1,[r8,#8]            ;660  ; Run_Control
0000e6  4348              MULS     r0,r1,r0              ;660
0000e8  49d3              LDR      r1,|L6.1080|
0000ea  4288              CMP      r0,r1                 ;660
0000ec  d901              BLS      |L6.242|
0000ee  f8c84004          STR      r4,[r8,#4]            ;662  ; Run_Control
                  |L6.242|
0000f2  f8d80004          LDR      r0,[r8,#4]            ;664  ; Run_Control
0000f6  ee000a10          VMOV     s0,r0                 ;664
0000fa  eef80a40          VCVT.F32.U32 s1,s0                 ;664
0000fe  ed9f1acf          VLDR     s2,|L6.1084|
000102  ee800a81          VDIV.F32 s0,s1,s2              ;664
000106  ee100a10          VMOV     r0,s0                 ;666
00010a  f7fffffe          BL       __aeabi_f2d
00010e  ec410b10          VMOV     d0,r0,r1              ;666
000112  a1cb              ADR      r1,|L6.1088|
000114  ec532b10          VMOV     r2,r3,d0              ;666
000118  4668              MOV      r0,sp                 ;666
00011a  f7fffffe          BL       __2sprintf
00011e  4669              MOV      r1,sp                 ;667
000120  4630              MOV      r0,r6                 ;667
000122  f7fffffe          BL       TEXT_SetText
000126  f640013d          MOV      r1,#0x83d             ;670
00012a  f8da0004          LDR      r0,[r10,#4]           ;670  ; hWinWind
00012e  f7fffffe          BL       WM_GetDialogItem
000132  4606              MOV      r6,r0                 ;670
000134  49c4              LDR      r1,|L6.1096|
000136  4630              MOV      r0,r6                 ;671
000138  f7fffffe          BL       TEXT_SetBkColor
00013c  2100              MOVS     r1,#0                 ;672
00013e  4630              MOV      r0,r6                 ;672
000140  f7fffffe          BL       TEXT_SetTextColor
000144  e005              B        |L6.338|
                  |L6.326|
000146  e0e6              B        |L6.790|
                  |L6.328|
000148  e010              B        |L6.364|
                  |L6.330|
00014a  e07a              B        |L6.578|
                  |L6.332|
00014c  e0b3              B        |L6.694|
                  |L6.334|
00014e  e008              B        |L6.354|
                  |L6.336|
000150  e0a9              B        |L6.678|
                  |L6.338|
000152  f7fffffe          BL       Write_Limits
000156  2009              MOVS     r0,#9                 ;675
000158  7028              STRB     r0,[r5,#0]            ;675
00015a  48bc              LDR      r0,|L6.1100|
00015c  f8809000          STRB     r9,[r0,#0]            ;676
000160  703c              STRB     r4,[r7,#0]            ;677
                  |L6.354|
;;;724                sprintf(buf,"%.3f",dis_output_c);
;;;725                TEXT_SetText(hItem,buf);            
;;;726                       
;;;727                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;728                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;729                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;730                                                     
;;;731                Write_Limits();
;;;732                set_sw = set_11;
;;;733                bit = 1;
;;;734                dot_flag = 0;
;;;735                break; 
;;;736             }
;;;737    		 case set_88:
;;;738             {
;;;739                WM_HWIN hItem;
;;;740    //            WM_InvalidateWindow(hWinWind);
;;;741                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
;;;742                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;743                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;744                                    
;;;745                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;746                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;747                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;748                for(i=0;i<6;i++)
;;;749                {
;;;750                    set_limit[i] = '\0';
;;;751                }
;;;752    
;;;753                set_sw = set_89;
;;;754                break;                        
;;;755             }
;;;756             case set_89:
;;;757             {           
;;;758                WM_HWIN hItem;
;;;759    //            WM_InvalidateWindow(hWinWind);
;;;760                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;761                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;762                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;763    			if(dot_flag == 0){
;;;764    				set_pow_cutoffc = atoi(set_limit)*1000;					
;;;765    			}else if(dot_flag != 0){
;;;766    				memset(buf, '\0', sizeof(buf));
;;;767    				strncpy(buf,set_limit,dot_flag + 3);
;;;768    				set_pow_cutoffc = atof(buf)*1000;
;;;769    			}
;;;770                if(set_pow_cutoffc > 10000)
;;;771                {
;;;772                    set_pow_cutoffc = 10000;               
;;;773                }
;;;774                pow_cutoffc = (float)set_pow_cutoffc/1000;
;;;775                sprintf(buf,"%.3f",pow_cutoffc);
;;;776                TEXT_SetText(hItem,buf);            
;;;777                       
;;;778                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
;;;779                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;780                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;781                                                     
;;;782                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
;;;783                set_sw = set_88;
;;;784                bit = 1;
;;;785                dot_flag = 0;
;;;786                break; 
;;;787             }
;;;788             default:break;
;;;789         }
;;;790    }
000162  b003              ADD      sp,sp,#0xc
000164  ecbd8b04          VPOP     {d8-d9}
000168  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.364|
00016c  f640182e          MOV      r8,#0x92e             ;745
000170  2957              CMP      r1,#0x57              ;620
000172  d07d              BEQ      |L6.624|
000174  2958              CMP      r1,#0x58              ;620
000176  d1f4              BNE      |L6.354|
000178  4682              MOV      r10,r0                ;760
00017a  4641              MOV      r1,r8                 ;760
00017c  6840              LDR      r0,[r0,#4]            ;760  ; hWinWind
00017e  f7fffffe          BL       WM_GetDialogItem
000182  4683              MOV      r11,r0                ;760
000184  f06f4170          MVN      r1,#0xf0000000        ;761
000188  4658              MOV      r0,r11                ;761
00018a  f7fffffe          BL       TEXT_SetBkColor
00018e  f06f417f          MVN      r1,#0xff000000        ;762
000192  4658              MOV      r0,r11                ;762
000194  f7fffffe          BL       TEXT_SetTextColor
000198  7838              LDRB     r0,[r7,#0]            ;763  ; dot_flag
00019a  f8df82b4          LDR      r8,|L6.1104|
00019e  2800              CMP      r0,#0                 ;763
0001a0  d067              BEQ      |L6.626|
0001a2  7838              LDRB     r0,[r7,#0]            ;765  ; dot_flag
0001a4  b1a0              CBZ      r0,|L6.464|
0001a6  9400              STR      r4,[sp,#0]            ;766
0001a8  9401              STR      r4,[sp,#4]            ;766
0001aa  783a              LDRB     r2,[r7,#0]            ;767  ; dot_flag
0001ac  499d              LDR      r1,|L6.1060|
0001ae  1cd2              ADDS     r2,r2,#3              ;767
0001b0  4668              MOV      r0,sp                 ;767
0001b2  f7fffffe          BL       strncpy
0001b6  4668              MOV      r0,sp                 ;768
0001b8  f7fffffe          BL       __hardfp_atof
0001bc  ec532b18          VMOV     r2,r3,d8              ;768
0001c0  ec510b10          VMOV     r0,r1,d0              ;768
0001c4  f7fffffe          BL       __aeabi_dmul
0001c8  f7fffffe          BL       __aeabi_d2iz
0001cc  f8c80014          STR      r0,[r8,#0x14]         ;768  ; InFlashSave
                  |L6.464|
0001d0  f8d80014          LDR      r0,[r8,#0x14]         ;770  ; InFlashSave
0001d4  42b0              CMP      r0,r6                 ;770
0001d6  dd01              BLE      |L6.476|
0001d8  f8c86014          STR      r6,[r8,#0x14]         ;772  ; InFlashSave
                  |L6.476|
0001dc  ed980a05          VLDR     s0,[r8,#0x14]         ;774
0001e0  eef80ac0          VCVT.F32.S32 s1,s0                 ;774
0001e4  ee800a89          VDIV.F32 s0,s1,s18             ;774
0001e8  ed8a0a02          VSTR     s0,[r10,#8]           ;774
0001ec  ee100a10          VMOV     r0,s0                 ;775
0001f0  f7fffffe          BL       __aeabi_f2d
0001f4  ec410b10          VMOV     d0,r0,r1              ;775
0001f8  a196              ADR      r1,|L6.1108|
0001fa  ec532b10          VMOV     r2,r3,d0              ;775
0001fe  4668              MOV      r0,sp                 ;775
000200  f7fffffe          BL       __2sprintf
000204  4669              MOV      r1,sp                 ;776
000206  4658              MOV      r0,r11                ;776
000208  f7fffffe          BL       TEXT_SetText
00020c  f640113a          MOV      r1,#0x93a             ;778
000210  f8da0004          LDR      r0,[r10,#4]           ;778  ; hWinWind
000214  f7fffffe          BL       WM_GetDialogItem
000218  4606              MOV      r6,r0                 ;778
00021a  498b              LDR      r1,|L6.1096|
00021c  4630              MOV      r0,r6                 ;779
00021e  f7fffffe          BL       TEXT_SetBkColor
000222  2100              MOVS     r1,#0                 ;780
000224  4630              MOV      r0,r6                 ;780
000226  f7fffffe          BL       TEXT_SetTextColor
00022a  4a89              LDR      r2,|L6.1104|
00022c  2128              MOVS     r1,#0x28              ;782
00022e  488b              LDR      r0,|L6.1116|
000230  f7fffffe          BL       Flash_Write32BitDatas
000234  2057              MOVS     r0,#0x57              ;783
000236  7028              STRB     r0,[r5,#0]            ;783
000238  4884              LDR      r0,|L6.1100|
00023a  f8809000          STRB     r9,[r0,#0]            ;784
00023e  703c              STRB     r4,[r7,#0]            ;785
000240  e78f              B        |L6.354|
                  |L6.578|
000242  4607              MOV      r7,r0                 ;625
000244  f640013d          MOV      r1,#0x83d             ;625
000248  6840              LDR      r0,[r0,#4]            ;625  ; hWinWind
00024a  f7fffffe          BL       WM_GetDialogItem
00024e  4680              MOV      r8,r0                 ;625
000250  f06f4170          MVN      r1,#0xf0000000        ;626
000254  4640              MOV      r0,r8                 ;626
000256  f7fffffe          BL       TEXT_SetBkColor
00025a  f06f417f          MVN      r1,#0xff000000        ;627
00025e  4640              MOV      r0,r8                 ;627
000260  f7fffffe          BL       TEXT_SetTextColor
000264  4631              MOV      r1,r6                 ;629
000266  6878              LDR      r0,[r7,#4]            ;629  ; hWinWind
000268  f7fffffe          BL       WM_GetDialogItem
00026c  4606              MOV      r6,r0                 ;629
00026e  e001              B        |L6.628|
                  |L6.624|
000270  e0f6              B        |L6.1120|
                  |L6.626|
000272  e124              B        |L6.1214|
                  |L6.628|
000274  4974              LDR      r1,|L6.1096|
000276  4630              MOV      r0,r6                 ;630
000278  f7fffffe          BL       TEXT_SetBkColor
00027c  2100              MOVS     r1,#0                 ;631
00027e  4630              MOV      r0,r6                 ;631
000280  f7fffffe          BL       TEXT_SetTextColor
000284  9402              STR      r4,[sp,#8]            ;632
000286  e007              B        |L6.664|
                  |L6.648|
000288  f89d0008          LDRB     r0,[sp,#8]            ;634
00028c  f80a4000          STRB     r4,[r10,r0]           ;634
000290  f89d0008          LDRB     r0,[sp,#8]            ;632
000294  1c40              ADDS     r0,r0,#1              ;632
000296  9002              STR      r0,[sp,#8]            ;632
                  |L6.664|
000298  f89d0008          LDRB     r0,[sp,#8]            ;632
00029c  2806              CMP      r0,#6                 ;632
00029e  d3f3              BCC      |L6.648|
0002a0  2011              MOVS     r0,#0x11              ;637
0002a2  7028              STRB     r0,[r5,#0]            ;637
0002a4  e75d              B        |L6.354|
                  |L6.678|
0002a6  485f              LDR      r0,|L6.1060|
0002a8  f7fffffe          BL       atoi
0002ac  2164              MOVS     r1,#0x64              ;648
0002ae  4348              MULS     r0,r1,r0              ;648
0002b0  f8c80098          STR      r0,[r8,#0x98]         ;648  ; Run_Control
0002b4  e6ff              B        |L6.182|
                  |L6.694|
0002b6  4606              MOV      r6,r0                 ;684
0002b8  f640013e          MOV      r1,#0x83e             ;684
0002bc  6840              LDR      r0,[r0,#4]            ;684  ; hWinWind
0002be  f7fffffe          BL       WM_GetDialogItem
0002c2  4607              MOV      r7,r0                 ;684
0002c4  f06f4170          MVN      r1,#0xf0000000        ;685
0002c8  4638              MOV      r0,r7                 ;685
0002ca  f7fffffe          BL       TEXT_SetBkColor
0002ce  f06f417f          MVN      r1,#0xff000000        ;686
0002d2  4638              MOV      r0,r7                 ;686
0002d4  f7fffffe          BL       TEXT_SetTextColor
0002d8  f6400167          MOV      r1,#0x867             ;688
0002dc  6870              LDR      r0,[r6,#4]            ;688  ; hWinWind
0002de  f7fffffe          BL       WM_GetDialogItem
0002e2  4606              MOV      r6,r0                 ;688
0002e4  4958              LDR      r1,|L6.1096|
0002e6  4630              MOV      r0,r6                 ;689
0002e8  f7fffffe          BL       TEXT_SetBkColor
0002ec  2100              MOVS     r1,#0                 ;690
0002ee  4630              MOV      r0,r6                 ;690
0002f0  f7fffffe          BL       TEXT_SetTextColor
0002f4  9402              STR      r4,[sp,#8]            ;691
0002f6  e007              B        |L6.776|
                  |L6.760|
0002f8  f89d0008          LDRB     r0,[sp,#8]            ;693
0002fc  f80a4000          STRB     r4,[r10,r0]           ;693
000300  f89d0008          LDRB     r0,[sp,#8]            ;691
000304  1c40              ADDS     r0,r0,#1              ;691
000306  9002              STR      r0,[sp,#8]            ;691
                  |L6.776|
000308  f89d0008          LDRB     r0,[sp,#8]            ;691
00030c  2806              CMP      r0,#6                 ;691
00030e  d3f3              BCC      |L6.760|
000310  2012              MOVS     r0,#0x12              ;696
000312  7028              STRB     r0,[r5,#0]            ;696
000314  e725              B        |L6.354|
                  |L6.790|
000316  4682              MOV      r10,r0                ;703
000318  f6400167          MOV      r1,#0x867             ;703
00031c  6840              LDR      r0,[r0,#4]            ;703  ; hWinWind
00031e  f7fffffe          BL       WM_GetDialogItem
000322  4683              MOV      r11,r0                ;703
000324  f06f4170          MVN      r1,#0xf0000000        ;704
000328  4658              MOV      r0,r11                ;704
00032a  f7fffffe          BL       TEXT_SetBkColor
00032e  f06f417f          MVN      r1,#0xff000000        ;705
000332  4658              MOV      r0,r11                ;705
000334  f7fffffe          BL       TEXT_SetTextColor
000338  7838              LDRB     r0,[r7,#0]            ;706  ; dot_flag
00033a  b3e0              CBZ      r0,|L6.950|
00033c  7838              LDRB     r0,[r7,#0]            ;708  ; dot_flag
00033e  b1a0              CBZ      r0,|L6.874|
000340  9400              STR      r4,[sp,#0]            ;709
000342  9401              STR      r4,[sp,#4]            ;709
000344  783a              LDRB     r2,[r7,#0]            ;710  ; dot_flag
000346  4937              LDR      r1,|L6.1060|
000348  1cd2              ADDS     r2,r2,#3              ;710
00034a  4668              MOV      r0,sp                 ;710
00034c  f7fffffe          BL       strncpy
000350  4668              MOV      r0,sp                 ;711
000352  f7fffffe          BL       __hardfp_atof
000356  ec532b18          VMOV     r2,r3,d8              ;711
00035a  ec510b10          VMOV     r0,r1,d0              ;711
00035e  f7fffffe          BL       __aeabi_dmul
000362  f7fffffe          BL       __aeabi_d2uiz
000366  f8c800a0          STR      r0,[r8,#0xa0]         ;711  ; Run_Control
                  |L6.874|
00036a  f8d800a0          LDR      r0,[r8,#0xa0]         ;714  ; Run_Control
00036e  42b0              CMP      r0,r6                 ;714
000370  d901              BLS      |L6.886|
000372  f8c860a0          STR      r6,[r8,#0xa0]         ;716  ; Run_Control
                  |L6.886|
000376  f8d800a0          LDR      r0,[r8,#0xa0]         ;718  ; Run_Control
00037a  f8c80008          STR      r0,[r8,#8]            ;718  ; Run_Control
00037e  f8d81004          LDR      r1,[r8,#4]            ;719  ; Run_Control
000382  2064              MOVS     r0,#0x64              ;719
000384  fbb1f0f0          UDIV     r0,r1,r0              ;719
000388  f8d81008          LDR      r1,[r8,#8]            ;719  ; Run_Control
00038c  4348              MULS     r0,r1,r0              ;719
00038e  492a              LDR      r1,|L6.1080|
000390  4288              CMP      r0,r1                 ;719
000392  d901              BLS      |L6.920|
000394  f8c84008          STR      r4,[r8,#8]            ;721  ; Run_Control
                  |L6.920|
000398  f8d80008          LDR      r0,[r8,#8]            ;723  ; Run_Control
00039c  ee000a10          VMOV     s0,r0                 ;723
0003a0  eef80a40          VCVT.F32.U32 s1,s0                 ;723
0003a4  ee800a89          VDIV.F32 s0,s1,s18             ;723
0003a8  ee100a10          VMOV     r0,s0                 ;724
0003ac  f7fffffe          BL       __aeabi_f2d
0003b0  ec410b10          VMOV     d0,r0,r1              ;724
0003b4  e000              B        |L6.952|
                  |L6.950|
0003b6  e021              B        |L6.1020|
                  |L6.952|
0003b8  ec532b10          VMOV     r2,r3,d0              ;724
0003bc  a125              ADR      r1,|L6.1108|
0003be  4668              MOV      r0,sp                 ;724
0003c0  f7fffffe          BL       __2sprintf
0003c4  4669              MOV      r1,sp                 ;725
0003c6  4658              MOV      r0,r11                ;725
0003c8  f7fffffe          BL       TEXT_SetText
0003cc  f640013e          MOV      r1,#0x83e             ;727
0003d0  f8da0004          LDR      r0,[r10,#4]           ;727  ; hWinWind
0003d4  f7fffffe          BL       WM_GetDialogItem
0003d8  4606              MOV      r6,r0                 ;727
0003da  491b              LDR      r1,|L6.1096|
0003dc  4630              MOV      r0,r6                 ;728
0003de  f7fffffe          BL       TEXT_SetBkColor
0003e2  2100              MOVS     r1,#0                 ;729
0003e4  4630              MOV      r0,r6                 ;729
0003e6  f7fffffe          BL       TEXT_SetTextColor
0003ea  f7fffffe          BL       Write_Limits
0003ee  200a              MOVS     r0,#0xa               ;732
0003f0  7028              STRB     r0,[r5,#0]            ;732
0003f2  4816              LDR      r0,|L6.1100|
0003f4  f8809000          STRB     r9,[r0,#0]            ;733
0003f8  703c              STRB     r4,[r7,#0]            ;734
0003fa  e6b2              B        |L6.354|
                  |L6.1020|
0003fc  4809              LDR      r0,|L6.1060|
0003fe  f7fffffe          BL       atoi
000402  f44f717a          MOV      r1,#0x3e8             ;707
000406  4348              MULS     r0,r1,r0              ;707
000408  f8c800a0          STR      r0,[r8,#0xa0]         ;707  ; Run_Control
00040c  e7ad              B        |L6.874|
00040e  0000              DCW      0x0000
                  |L6.1040|
                          DCD      Run_Control
                  |L6.1044|
                          DCD      set_sw
                  |L6.1048|
000418  00000000          DCFD     0x408f400000000000 ; 1000
00041c  408f4000
                  |L6.1056|
000420  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1060|
                          DCD      set_limit
                  |L6.1064|
                          DCD      ||.data||
                  |L6.1068|
                          DCD      dot_flag
                  |L6.1072|
000430  00000000          DCFD     0x4059000000000000 ; 100
000434  40590000
                  |L6.1080|
                          DCD      0x0003d477
                  |L6.1084|
00043c  42c80000          DCFS     0x42c80000 ; 100
                  |L6.1088|
000440  252e3266          DCB      "%.2f",0
000444  00      
000445  00                DCB      0
000446  00                DCB      0
000447  00                DCB      0
                  |L6.1096|
                          DCD      0x00bfffff
                  |L6.1100|
                          DCD      bit
                  |L6.1104|
                          DCD      InFlashSave
                  |L6.1108|
000454  252e3366          DCB      "%.3f",0
000458  00      
000459  00                DCB      0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L6.1116|
                          DCD      0x080e0000
                  |L6.1120|
000460  4606              MOV      r6,r0                 ;741
000462  f640113a          MOV      r1,#0x93a             ;741
000466  6840              LDR      r0,[r0,#4]            ;741  ; hWinWind
000468  f7fffffe          BL       WM_GetDialogItem
00046c  4607              MOV      r7,r0                 ;741
00046e  f06f4170          MVN      r1,#0xf0000000        ;742
000472  4638              MOV      r0,r7                 ;742
000474  f7fffffe          BL       TEXT_SetBkColor
000478  f06f417f          MVN      r1,#0xff000000        ;743
00047c  4638              MOV      r0,r7                 ;743
00047e  f7fffffe          BL       TEXT_SetTextColor
000482  4641              MOV      r1,r8                 ;745
000484  6870              LDR      r0,[r6,#4]            ;745  ; hWinWind
000486  f7fffffe          BL       WM_GetDialogItem
00048a  4606              MOV      r6,r0                 ;745
00048c  4910              LDR      r1,|L6.1232|
00048e  4630              MOV      r0,r6                 ;746
000490  f7fffffe          BL       TEXT_SetBkColor
000494  2100              MOVS     r1,#0                 ;747
000496  4630              MOV      r0,r6                 ;747
000498  f7fffffe          BL       TEXT_SetTextColor
00049c  9402              STR      r4,[sp,#8]            ;748
00049e  e007              B        |L6.1200|
                  |L6.1184|
0004a0  f89d0008          LDRB     r0,[sp,#8]            ;750
0004a4  f80a4000          STRB     r4,[r10,r0]           ;750
0004a8  f89d0008          LDRB     r0,[sp,#8]            ;748
0004ac  1c40              ADDS     r0,r0,#1              ;748
0004ae  9002              STR      r0,[sp,#8]            ;748
                  |L6.1200|
0004b0  f89d0008          LDRB     r0,[sp,#8]            ;748
0004b4  2806              CMP      r0,#6                 ;748
0004b6  d3f3              BCC      |L6.1184|
0004b8  2058              MOVS     r0,#0x58              ;753
0004ba  7028              STRB     r0,[r5,#0]            ;753
0004bc  e651              B        |L6.354|
                  |L6.1214|
0004be  4805              LDR      r0,|L6.1236|
0004c0  f7fffffe          BL       atoi
0004c4  f44f717a          MOV      r1,#0x3e8             ;764
0004c8  4348              MULS     r0,r1,r0              ;764
0004ca  f8c80014          STR      r0,[r8,#0x14]         ;764  ; InFlashSave
0004ce  e67f              B        |L6.464|
;;;791    void DEL_POW(void)
                          ENDP

                  |L6.1232|
                          DCD      0x00bfffff
                  |L6.1236|
                          DCD      set_limit

                          AREA ||i.ResetPow||, CODE, READONLY, ALIGN=2

                  ResetPow PROC
;;;517    
;;;518    WM_HWIN ResetPow(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;519        hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2113              MOVS     r1,#0x13
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; hWinWind
;;;520    //    WM_InvalidateWindow(hWinWind);
;;;521        return hWinWind;
;;;522    }
00001c  bd1c              POP      {r2-r4,pc}
;;;523    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog PROC
;;;82     
;;;83     static void _cbDialog(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;84       WM_HWIN hItem;
;;;85       int     NCode;
;;;86       int     Id;
;;;87       static vu8 status_flash;
;;;88       char buf[5];    
;;;89     
;;;90       float dis_output_v = (float)SET_Voltage/100;
00000c  48fe              LDR      r0,|L8.1032|
00000e  6841              LDR      r1,[r0,#4]  ; Run_Control
000010  ee001a10          VMOV     s0,r1
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf0afc          VLDR     s1,|L8.1036|
00001c  eec09a20          VDIV.F32 s19,s0,s1
;;;91       float dis_output_c = (float)SET_Current/1000;
000020  6880              LDR      r0,[r0,#8]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  eddf0af9          VLDR     s1,|L8.1040|
00002e  ee809a20          VDIV.F32 s18,s0,s1
;;;92       static u8 cdelay;
;;;93     
;;;94       
;;;95       // USER START (Optionally insert additional variables)
;;;96       // USER END
;;;97     
;;;98       switch (pMsg->MsgId) {
000032  6820              LDR      r0,[r4,#0]
;;;99     
;;;100    	case WM_PAINT://无效化重绘
;;;101    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;102            GUI_FillRect(0,25,480,26);//画一条实线
;;;103            GUI_SetColor(GUI_ORANGE);
;;;104            GUI_SetFont(&GUI_Fontsymbol);
;;;105            GUI_UC_SetEncodeUTF8();
;;;106            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;107            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;108            GUI_SetColor(GUI_WHITE);
;;;109            GUI_SetFont(&GUI_FontHZ20S);
;;;110            GUI_UC_SetEncodeUTF8();
;;;111            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明       
;;;112            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;113            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;114    //      GUI_SetFont(&GUI_FontD24x32);//
;;;115    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;116    // 		GUI_DispFloatFix(DISS_POW_Voltage,5,2);//显示电压值
;;;117    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;118    // 		GUI_DispFloatFix(DISS_POW_Current,5,2);//显示电流值
;;;119            GUI_SetFont(&GUI_Font24_1);
;;;120            GUI_DispStringAt("V",435,75);
;;;121            GUI_DispStringAt("A",435,100);
;;;122            GUI_DispStringAt("A",435,150);
;;;123            
;;;124            GUI_SetFont(&GUI_FontEN40);
;;;125            GUI_SetColor(GUI_LIGHTGRAY);
000034  4ef7              LDR      r6,|L8.1044|
000036  f06f497f          MVN      r9,#0xff000000        ;101
;;;126            GUI_DispStringAt("C:", 28, 190);
;;;127            GUI_SetColor(GUI_LIGHTGRAY);
;;;128            GUI_DispStringAt("m", 217, 196);
;;;129            GUI_DispStringAt("AH", 238, 187);
;;;130            
;;;131            GUI_SetColor(GUI_GREEN);
00003a  f44f487f          MOV      r8,#0xff00
00003e  280f              CMP      r0,#0xf               ;98
000040  d015              BEQ      |L8.110|
;;;132            GUI_SetFont(&GUI_Fontunit);
;;;133            GUI_DispStringAt("°",342, 2);
;;;134            GUI_SetFont(&GUI_Font24_1);
;;;135            GUI_DispStringAt("C",350, 2);
;;;136    //        DrawLock();
;;;137    //        GUI_SetColor(GUI_WHITE);
;;;138    //        GUI_SetFont(&GUI_Fontset_font);
;;;139    //        GUI_DispStringAt("过充电压",290, 150);
;;;140    		break;
;;;141        
;;;142    	case WM_TIMER://定时模块消息
;;;143    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime2)
;;;144    	{
;;;145    //        lockstat2 = lockstat1;
;;;146    //        lockstat1 = lock;
;;;147    //        if(lockstat1 != lockstat2)
;;;148    //        {
;;;149    //            WM_InvalidateWindow(hWinWind);
;;;150    //        }
;;;151    //         if(clear_flag2 == 1)
;;;152    //         {
;;;153    		if(lock == 1)
;;;154    		{
;;;155    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;156    			TEXT_SetText(hItem,"锁");
;;;157    		}else{
;;;158    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;159    			TEXT_SetText(hItem,"");
;;;160    		}
;;;161                if(DISS_POW_Voltage < 0.1)
;;;162                {
;;;163                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;164                    sprintf(buf,"%.2f",0.00);       
;;;165                    TEXT_SetText(hItem,buf);
;;;166                }else{
;;;167                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;168                    sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;169                    TEXT_SetText(hItem,buf);
;;;170                }
;;;171    //         }else{
;;;172    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;173    //             sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;174    //             TEXT_SetText(hItem,buf);
;;;175    //         }
;;;176            
;;;177            
;;;178           
;;;179            
;;;180    //        test_pow();
;;;181            if(pow_sw == pow_on)
;;;182            {
;;;183                battery_c = (int)bc_raw;
;;;184                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;185                sprintf(buf,"%05d",battery_c);      
;;;186                TEXT_SetText(hItem,buf);
;;;187                 hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;188                sprintf(buf,"%.3f",DISS_POW_Current);        
;;;189                TEXT_SetText(hItem,buf);
;;;190                if(status_flash == 0){
;;;191                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;192                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;193                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;194                    GUI_UC_SetEncodeUTF8();        
;;;195                    TEXT_SetText(hItem,"充电中");
;;;196                    status_flash = 1;
;;;197                }else{
;;;198                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;199                    TEXT_SetText(hItem,"");
;;;200                    status_flash = 0;
;;;201               }
;;;202               if(pow_cutoffc != 0 && DISS_POW_Current < pow_cutoffc && cdelay > 20)
;;;203               {
;;;204                  GPIO_ResetBits(GPIOC,GPIO_Pin_1);
;;;205                  //GPIO_SetBits(GPIOC,GPIO_Pin_13);
;;;206                  mode_sw = 0;
;;;207                  pow_sw = pow_off;
;;;208                  cdelay = 0;
;;;209               }else{
;;;210                   cdelay++;
;;;211               }
;;;212            }else{
;;;213                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;214                TEXT_SetText(hItem,"");
;;;215                
;;;216                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;217                sprintf(buf,"%.3f",0.000);        
;;;218                TEXT_SetText(hItem,buf);
;;;219                
;;;220                cdelay = 0;
;;;221            }
;;;222    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);       
;;;223    //        sprintf(buf,"%.3f",overchargev);
;;;224    //        TEXT_SetText(hItem,buf);
;;;225            
;;;226            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);       
;;;227            sprintf(buf,"%.1f",temp);
000042  4ff5              LDR      r7,|L8.1048|
000044  f6401a3c          MOV      r10,#0x93c            ;155
000048  ed9f8bf4          VLDR     d8,|L8.1052|
00004c  4df5              LDR      r5,|L8.1060|
00004e  281d              CMP      r0,#0x1d              ;98
000050  d07d              BEQ      |L8.334|
000052  2826              CMP      r0,#0x26              ;98
000054  d07c              BEQ      |L8.336|
000056  f5a07080          SUB      r0,r0,#0x100          ;98
00005a  3813              SUBS     r0,r0,#0x13           ;98
00005c  d07a              BEQ      |L8.340|
;;;228            TEXT_SetText(hItem,buf);
;;;229            
;;;230    		WM_RestartTimer(pMsg->Data.v, 50);//复位定时器数值越大刷新时间越短
;;;231    	}
;;;232    	break;
;;;233      case WM_INIT_DIALOG://重绘外观
;;;234        //
;;;235        // Initialization of 'Window'
;;;236        //
;;;237            hItem = pMsg->hWin;
;;;238            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;239            WM_CreateTimer(hItem,ID_TimerTime2,1000,0);//创建本窗口定时器
;;;240        //
;;;241        // Initialization of 'Button'
;;;242        //
;;;243    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
;;;244    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;245    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;246    // 		GUI_UC_SetEncodeUTF8();
;;;247    // 		BUTTON_SetText(hItem,"充放电");
;;;248        //
;;;249        // Initialization of 'Button'
;;;250        //
;;;251    		
;;;252    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;253    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;254    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;255    		TEXT_SetText(hItem,"");
;;;256    		
;;;257    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
;;;258    ////		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;259    //		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;260    //		GUI_UC_SetEncodeUTF8();
;;;261    //        BUTTON_SetText(hItem, "内阻测试");
;;;262        //
;;;263        // Initialization of 'Button'
;;;264        //
;;;265            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
;;;266    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;267    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;268    		GUI_UC_SetEncodeUTF8();
;;;269            BUTTON_SetText(hItem, "程控负载");
;;;270        //
;;;271        // Initialization of 'Button'
;;;272        //
;;;273            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_3);
;;;274            BUTTON_SetPressed(hItem,1);
;;;275    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;276    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;277    		GUI_UC_SetEncodeUTF8();
;;;278            BUTTON_SetText(hItem, "程控电源");
;;;279        //
;;;280        // Initialization of 'Button'
;;;281        //
;;;282    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_4);
;;;283    ////        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;284    //		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;285    //		GUI_UC_SetEncodeUTF8();
;;;286    //        BUTTON_SetText(hItem, "充放电");
;;;287    //    //
;;;288    //    // Initialization of 'Button'
;;;289    //    //
;;;290    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_5);
;;;291    ////        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;292    //		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;293    //		GUI_UC_SetEncodeUTF8();
;;;294    //        BUTTON_SetText(hItem, "曲线");
;;;295    		
;;;296    		
;;;297    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_9);
;;;298    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;299            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;300    		GUI_UC_SetEncodeUTF8();
;;;301    		TEXT_SetText(hItem,"V:");
;;;302    		
;;;303    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_10);
;;;304    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;305            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;306    		GUI_UC_SetEncodeUTF8();
;;;307    		TEXT_SetText(hItem,"I:");
;;;308            
;;;309            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_15);
;;;310    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;311            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;312    		GUI_UC_SetEncodeUTF8();
;;;313    		TEXT_SetText(hItem,"V");
;;;314    		
;;;315    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_16);
;;;316    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;317            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;318    		GUI_UC_SetEncodeUTF8();
;;;319    		TEXT_SetText(hItem,"A");
;;;320            
;;;321            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_33);
;;;322    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;323            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;324            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;325    		GUI_UC_SetEncodeUTF8();
;;;326    		TEXT_SetText(hItem,"输出电压");        
;;;327            
;;;328            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_34);
;;;329    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;330            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;331    		GUI_UC_SetEncodeUTF8();
;;;332    		TEXT_SetText(hItem,"限制电流");
;;;333    		
;;;334    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_159);
;;;335    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;336            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;337    		GUI_UC_SetEncodeUTF8();
;;;338    		TEXT_SetText(hItem,"截止电流");
;;;339            
;;;340            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_41);
;;;341            sprintf(buf,"%.2f",dis_output_v);
;;;342    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;343            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;344    		GUI_UC_SetEncodeUTF8();        
;;;345    		TEXT_SetText(hItem,buf);
;;;346            
;;;347            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_42);
;;;348            sprintf(buf,"%.3f",dis_output_c);
;;;349    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;350            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;351    		GUI_UC_SetEncodeUTF8();        
;;;352    		TEXT_SetText(hItem,buf);
;;;353            
;;;354            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;355            sprintf(buf,"%.2f",0.00);
;;;356    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;357            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;358    		GUI_UC_SetEncodeUTF8();        
;;;359    		TEXT_SetText(hItem,buf);
;;;360            
;;;361            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;362            sprintf(buf,"%.3f",0.000);
;;;363    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;364            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;365    		GUI_UC_SetEncodeUTF8();        
;;;366    		TEXT_SetText(hItem,buf);
;;;367            
;;;368            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;369            sprintf(buf,"%05d",0);
;;;370            TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;371            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;372            GUI_UC_SetEncodeUTF8();        
;;;373            TEXT_SetText(hItem,buf);
;;;374            
;;;375            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);
;;;376            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;377            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;378            sprintf(buf,"%.1f",temp);
;;;379            TEXT_SetText(hItem,buf);
;;;380            
;;;381            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;382            sprintf(buf,"%.3f",pow_cutoffc);
;;;383    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;384            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;385    		GUI_UC_SetEncodeUTF8();     
;;;386    		TEXT_SetText(hItem,buf);
;;;387            
;;;388        // USER START (Optionally insert additional code for further widget initialization)
;;;389        // USER END
;;;390        break;
;;;391      case WM_NOTIFY_PARENT:
;;;392        Id    = WM_GetId(pMsg->hWinSrc);
;;;393        NCode = pMsg->Data.v;
;;;394        switch(Id) {
;;;395        case ID_BUTTON_0: // Notifications sent by 'Button'
;;;396          switch(NCode) {
;;;397          case WM_NOTIFICATION_CLICKED:
;;;398            // USER START (Optionally insert code for reacting on notification message)
;;;399            // USER END
;;;400            break;
;;;401          case WM_NOTIFICATION_RELEASED:
;;;402            // USER START (Optionally insert code for reacting on notification message)
;;;403            // USER END
;;;404            break;
;;;405          // USER START (Optionally insert additional code for further notification handling)
;;;406          // USER END
;;;407          }
;;;408          break;
;;;409        case ID_BUTTON_1: // Notifications sent by 'Button'
;;;410          switch(NCode) {
;;;411          case WM_NOTIFICATION_CLICKED:
;;;412            // USER START (Optionally insert code for reacting on notification message)
;;;413            // USER END
;;;414            break;
;;;415          case WM_NOTIFICATION_RELEASED:
;;;416    				
;;;417            // USER START (Optionally insert code for reacting on notification message)
;;;418            // USER END
;;;419            break;
;;;420          // USER START (Optionally insert additional code for further notification handling)
;;;421          // USER END
;;;422          }
;;;423          break;
;;;424        case ID_BUTTON_2: // Notifications sent by 'Button'
;;;425          switch(NCode) {
;;;426          case WM_NOTIFICATION_CLICKED:
;;;427            // USER START (Optionally insert code for reacting on notification message)
;;;428            // USER END
;;;429            break;
;;;430          case WM_NOTIFICATION_RELEASED:
;;;431            // USER START (Optionally insert code for reacting on notification message)
;;;432            // USER END
;;;433            break;
;;;434          // USER START (Optionally insert additional code for further notification handling)
;;;435          // USER END
;;;436          }
;;;437          break;
;;;438        case ID_BUTTON_3: // Notifications sent by 'Button'
;;;439          switch(NCode) {
;;;440          case WM_NOTIFICATION_CLICKED:
;;;441            // USER START (Optionally insert code for reacting on notification message)
;;;442            // USER END
;;;443            break;
;;;444          case WM_NOTIFICATION_RELEASED:
;;;445            // USER START (Optionally insert code for reacting on notification message)
;;;446            // USER END
;;;447            break;
;;;448          // USER START (Optionally insert additional code for further notification handling)
;;;449          // USER END
;;;450          }
;;;451          break;
;;;452        case ID_BUTTON_4: // Notifications sent by 'Button'
;;;453          switch(NCode) {
;;;454          case WM_NOTIFICATION_CLICKED:
;;;455            // USER START (Optionally insert code for reacting on notification message)
;;;456            // USER END
;;;457            break;
;;;458          case WM_NOTIFICATION_RELEASED:
;;;459            // USER START (Optionally insert code for reacting on notification message)
;;;460            // USER END
;;;461            break;
;;;462          // USER START (Optionally insert additional code for further notification handling)
;;;463          // USER END
;;;464          }
;;;465          break;
;;;466        case ID_BUTTON_5: // Notifications sent by 'Button'
;;;467          switch(NCode) {
;;;468          case WM_NOTIFICATION_CLICKED:
;;;469            // USER START (Optionally insert code for reacting on notification message)
;;;470            // USER END
;;;471            break;
;;;472          case WM_NOTIFICATION_RELEASED:
;;;473            // USER START (Optionally insert code for reacting on notification message)
;;;474            // USER END
;;;475            break;
;;;476          // USER START (Optionally insert additional code for further notification handling)
;;;477          // USER END
;;;478          }
;;;479          break;
;;;480        // USER START (Optionally insert additional code for further Ids)
;;;481        // USER END
;;;482        }
;;;483        break;
;;;484      // USER START (Optionally insert additional message handling)
;;;485      // USER END
;;;486      default:
;;;487        WM_DefaultProc(pMsg);
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       WM_DefaultProc
                  |L8.100|
;;;488        break;
;;;489      }
;;;490    }
000064  b003              ADD      sp,sp,#0xc
000066  ecbd8b04          VPOP     {d8-d9}
00006a  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.110|
00006e  4648              MOV      r0,r9                 ;101
000070  f7fffffe          BL       GUI_SetColor
000074  231a              MOVS     r3,#0x1a              ;102
000076  f44f72f0          MOV      r2,#0x1e0             ;102
00007a  2119              MOVS     r1,#0x19              ;102
00007c  2000              MOVS     r0,#0                 ;102
00007e  f7fffffe          BL       GUI_FillRect
000082  f24a50ff          MOV      r0,#0xa5ff            ;103
000086  f7fffffe          BL       GUI_SetColor
00008a  48e7              LDR      r0,|L8.1064|
00008c  f7fffffe          BL       GUI_SetFont
000090  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000094  2002              MOVS     r0,#2                 ;106
000096  f7fffffe          BL       GUI_SetTextMode
00009a  2201              MOVS     r2,#1                 ;107
00009c  2105              MOVS     r1,#5                 ;107
00009e  a0e3              ADR      r0,|L8.1068|
0000a0  f7fffffe          BL       GUI_DispStringAt
0000a4  4648              MOV      r0,r9                 ;108
0000a6  f7fffffe          BL       GUI_SetColor
0000aa  48e2              LDR      r0,|L8.1076|
0000ac  f7fffffe          BL       GUI_SetFont
0000b0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000b4  2002              MOVS     r0,#2                 ;111
0000b6  f7fffffe          BL       GUI_SetTextMode
0000ba  2203              MOVS     r2,#3                 ;112
0000bc  2182              MOVS     r1,#0x82              ;112
0000be  a0de              ADR      r0,|L8.1080|
0000c0  f7fffffe          BL       GUI_DispStringAt
0000c4  4648              MOV      r0,r9                 ;113
0000c6  f7fffffe          BL       GUI_SetColor
0000ca  48df              LDR      r0,|L8.1096|
0000cc  f7fffffe          BL       GUI_SetFont
0000d0  f24014b3          MOV      r4,#0x1b3             ;120
0000d4  224b              MOVS     r2,#0x4b              ;120
0000d6  4621              MOV      r1,r4                 ;120
0000d8  a0dc              ADR      r0,|L8.1100|
0000da  f7fffffe          BL       GUI_DispStringAt
0000de  2264              MOVS     r2,#0x64              ;121
0000e0  4621              MOV      r1,r4                 ;121
0000e2  a0db              ADR      r0,|L8.1104|
0000e4  f7fffffe          BL       GUI_DispStringAt
0000e8  2296              MOVS     r2,#0x96              ;122
0000ea  4621              MOV      r1,r4                 ;122
0000ec  a0d8              ADR      r0,|L8.1104|
0000ee  f7fffffe          BL       GUI_DispStringAt
0000f2  48d8              LDR      r0,|L8.1108|
0000f4  f7fffffe          BL       GUI_SetFont
0000f8  4630              MOV      r0,r6                 ;125
0000fa  f7fffffe          BL       GUI_SetColor
0000fe  22be              MOVS     r2,#0xbe              ;126
000100  211c              MOVS     r1,#0x1c              ;126
000102  a0d5              ADR      r0,|L8.1112|
000104  f7fffffe          BL       GUI_DispStringAt
000108  4630              MOV      r0,r6                 ;127
00010a  f7fffffe          BL       GUI_SetColor
00010e  22c4              MOVS     r2,#0xc4              ;128
000110  21d9              MOVS     r1,#0xd9              ;128
000112  a0d2              ADR      r0,|L8.1116|
000114  f7fffffe          BL       GUI_DispStringAt
000118  22bb              MOVS     r2,#0xbb              ;129
00011a  21ee              MOVS     r1,#0xee              ;129
00011c  a0d0              ADR      r0,|L8.1120|
00011e  f7fffffe          BL       GUI_DispStringAt
000122  4640              MOV      r0,r8                 ;131
000124  f7fffffe          BL       GUI_SetColor
000128  48ce              LDR      r0,|L8.1124|
00012a  f7fffffe          BL       GUI_SetFont
00012e  2202              MOVS     r2,#2                 ;133
000130  f44f71ab          MOV      r1,#0x156             ;133
000134  a0cc              ADR      r0,|L8.1128|
000136  f7fffffe          BL       GUI_DispStringAt
00013a  48c3              LDR      r0,|L8.1096|
00013c  f7fffffe          BL       GUI_SetFont
000140  2202              MOVS     r2,#2                 ;135
000142  f44f71af          MOV      r1,#0x15e             ;135
000146  a0c9              ADR      r0,|L8.1132|
000148  f7fffffe          BL       GUI_DispStringAt
00014c  e78a              B        |L8.100|
                  |L8.334|
00014e  e0ed              B        |L8.812|
                  |L8.336|
000150  e309              B        |L8.1894|
000152  e7ff              B        |L8.340|
                  |L8.340|
000154  68e0              LDR      r0,[r4,#0xc]          ;143
000156  f7fffffe          BL       WM_GetTimerId
00015a  2803              CMP      r0,#3                 ;143
00015c  d182              BNE      |L8.100|
00015e  48c4              LDR      r0,|L8.1136|
000160  7800              LDRB     r0,[r0,#0]            ;153  ; lock
000162  2801              CMP      r0,#1                 ;153
000164  d01c              BEQ      |L8.416|
000166  4651              MOV      r1,r10                ;158
000168  6860              LDR      r0,[r4,#4]            ;158
00016a  f7fffffe          BL       WM_GetDialogItem
00016e  a1b5              ADR      r1,|L8.1092|
000170  f7fffffe          BL       TEXT_SetText
                  |L8.372|
000174  4ebf              LDR      r6,|L8.1140|
000176  49c0              LDR      r1,|L8.1144|
000178  6830              LDR      r0,[r6,#0]            ;161  ; DISS_POW_Voltage
00017a  4288              CMP      r0,r1                 ;161
00017c  da18              BGE      |L8.432|
00017e  f6400193          MOV      r1,#0x893             ;163
000182  6860              LDR      r0,[r4,#4]            ;163
000184  f7fffffe          BL       WM_GetDialogItem
000188  4606              MOV      r6,r0                 ;163
00018a  ec532b18          VMOV     r2,r3,d8              ;164
00018e  a1bb              ADR      r1,|L8.1148|
000190  a801              ADD      r0,sp,#4              ;164
000192  f7fffffe          BL       __2sprintf
000196  a901              ADD      r1,sp,#4              ;165
000198  4630              MOV      r0,r6                 ;165
00019a  f7fffffe          BL       TEXT_SetText
00019e  e01c              B        |L8.474|
                  |L8.416|
0001a0  4651              MOV      r1,r10                ;155
0001a2  6860              LDR      r0,[r4,#4]            ;155
0001a4  f7fffffe          BL       WM_GetDialogItem
0001a8  a1b6              ADR      r1,|L8.1156|
0001aa  f7fffffe          BL       TEXT_SetText
0001ae  e7e1              B        |L8.372|
                  |L8.432|
0001b0  f6400193          MOV      r1,#0x893             ;167
0001b4  6860              LDR      r0,[r4,#4]            ;167
0001b6  f7fffffe          BL       WM_GetDialogItem
0001ba  4680              MOV      r8,r0                 ;167
0001bc  6830              LDR      r0,[r6,#0]            ;168  ; DISS_POW_Voltage
0001be  f7fffffe          BL       __aeabi_f2d
0001c2  ec410b10          VMOV     d0,r0,r1              ;168
0001c6  a1ad              ADR      r1,|L8.1148|
0001c8  ec532b10          VMOV     r2,r3,d0              ;168
0001cc  a801              ADD      r0,sp,#4              ;168
0001ce  f7fffffe          BL       __2sprintf
0001d2  a901              ADD      r1,sp,#4              ;169
0001d4  4640              MOV      r0,r8                 ;169
0001d6  f7fffffe          BL       TEXT_SetText
                  |L8.474|
0001da  7828              LDRB     r0,[r5,#0]            ;181  ; pow_sw
0001dc  2600              MOVS     r6,#0                 ;191
0001de  f6400a95          MOV      r10,#0x895            ;191
0001e2  2801              CMP      r0,#1                 ;181
0001e4  d031              BEQ      |L8.586|
0001e6  4651              MOV      r1,r10                ;213
0001e8  6860              LDR      r0,[r4,#4]            ;213
0001ea  f7fffffe          BL       WM_GetDialogItem
0001ee  a195              ADR      r1,|L8.1092|
0001f0  f7fffffe          BL       TEXT_SetText
0001f4  f6400194          MOV      r1,#0x894             ;216
0001f8  6860              LDR      r0,[r4,#4]            ;216
0001fa  f7fffffe          BL       WM_GetDialogItem
0001fe  4680              MOV      r8,r0                 ;216
000200  ec532b18          VMOV     r2,r3,d8              ;217
000204  a1a0              ADR      r1,|L8.1160|
000206  a801              ADD      r0,sp,#4              ;217
000208  f7fffffe          BL       __2sprintf
00020c  a901              ADD      r1,sp,#4              ;218
00020e  4640              MOV      r0,r8                 ;218
000210  f7fffffe          BL       TEXT_SetText
000214  70ae              STRB     r6,[r5,#2]            ;220
                  |L8.534|
000216  f640110c          MOV      r1,#0x90c             ;226
00021a  6860              LDR      r0,[r4,#4]            ;226
00021c  f7fffffe          BL       WM_GetDialogItem
000220  4605              MOV      r5,r0                 ;226
000222  6838              LDR      r0,[r7,#0]            ;227  ; temp
000224  f7fffffe          BL       __aeabi_f2d
000228  ec410b10          VMOV     d0,r0,r1              ;227
00022c  a198              ADR      r1,|L8.1168|
00022e  ec532b10          VMOV     r2,r3,d0              ;227
000232  a801              ADD      r0,sp,#4              ;227
000234  f7fffffe          BL       __2sprintf
000238  a901              ADD      r1,sp,#4              ;228
00023a  4628              MOV      r0,r5                 ;228
00023c  f7fffffe          BL       TEXT_SetText
000240  2132              MOVS     r1,#0x32              ;230
000242  68e0              LDR      r0,[r4,#0xc]          ;230
000244  f7fffffe          BL       WM_RestartTimer
000248  e70c              B        |L8.100|
                  |L8.586|
00024a  4893              LDR      r0,|L8.1176|
00024c  f8df824c          LDR      r8,|L8.1180|
000250  ed900a00          VLDR     s0,[r0,#0]            ;183
000254  eebd0ac0          VCVT.S32.F32 s0,s0                 ;183
000258  ee100a10          VMOV     r0,s0                 ;183
00025c  f8a80000          STRH     r0,[r8,#0]            ;183
000260  f640110b          MOV      r1,#0x90b             ;184
000264  6860              LDR      r0,[r4,#4]            ;184
000266  f7fffffe          BL       WM_GetDialogItem
00026a  4681              MOV      r9,r0                 ;184
00026c  f8b82000          LDRH     r2,[r8,#0]            ;185  ; battery_c
000270  a18b              ADR      r1,|L8.1184|
000272  a801              ADD      r0,sp,#4              ;185
000274  f7fffffe          BL       __2sprintf
000278  a901              ADD      r1,sp,#4              ;186
00027a  4648              MOV      r0,r9                 ;186
00027c  f7fffffe          BL       TEXT_SetText
000280  f6400194          MOV      r1,#0x894             ;187
000284  6860              LDR      r0,[r4,#4]            ;187
000286  f7fffffe          BL       WM_GetDialogItem
00028a  4681              MOV      r9,r0                 ;187
00028c  f8df8218          LDR      r8,|L8.1192|
000290  f8d80000          LDR      r0,[r8,#0]            ;188  ; DISS_POW_Current
000294  f7fffffe          BL       __aeabi_f2d
000298  ec410b10          VMOV     d0,r0,r1              ;188
00029c  a17a              ADR      r1,|L8.1160|
00029e  ec532b10          VMOV     r2,r3,d0              ;188
0002a2  a801              ADD      r0,sp,#4              ;188
0002a4  f7fffffe          BL       __2sprintf
0002a8  a901              ADD      r1,sp,#4              ;189
0002aa  4648              MOV      r0,r9                 ;189
0002ac  f7fffffe          BL       TEXT_SetText
0002b0  7868              LDRB     r0,[r5,#1]            ;190  ; status_flash
0002b2  b308              CBZ      r0,|L8.760|
0002b4  4651              MOV      r1,r10                ;198
0002b6  6860              LDR      r0,[r4,#4]            ;198
0002b8  f7fffffe          BL       WM_GetDialogItem
0002bc  a161              ADR      r1,|L8.1092|
0002be  f7fffffe          BL       TEXT_SetText
0002c2  706e              STRB     r6,[r5,#1]            ;200
                  |L8.708|
0002c4  ed950a02          VLDR     s0,[r5,#8]            ;202
0002c8  eeb50ac0          VCMPE.F32 s0,#0.0               ;202
0002cc  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;202
0002d0  d028              BEQ      |L8.804|
0002d2  edd80a00          VLDR     s1,[r8,#0]            ;202
0002d6  eef40ac0          VCMPE.F32 s1,s0                 ;202
0002da  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;202
0002de  d221              BCS      |L8.804|
0002e0  78a8              LDRB     r0,[r5,#2]            ;202  ; cdelay
0002e2  2814              CMP      r0,#0x14              ;202
0002e4  d91e              BLS      |L8.804|
0002e6  2102              MOVS     r1,#2                 ;204
0002e8  4870              LDR      r0,|L8.1196|
0002ea  f7fffffe          BL       GPIO_ResetBits
0002ee  4870              LDR      r0,|L8.1200|
0002f0  7006              STRB     r6,[r0,#0]            ;206
0002f2  702e              STRB     r6,[r5,#0]            ;207
0002f4  70ae              STRB     r6,[r5,#2]            ;208
0002f6  e78e              B        |L8.534|
                  |L8.760|
0002f8  4651              MOV      r1,r10                ;191
0002fa  6860              LDR      r0,[r4,#4]            ;191
0002fc  f7fffffe          BL       WM_GetDialogItem
000300  4681              MOV      r9,r0                 ;191
000302  21ff              MOVS     r1,#0xff              ;192
000304  4648              MOV      r0,r9                 ;192
000306  f7fffffe          BL       TEXT_SetTextColor
00030a  496a              LDR      r1,|L8.1204|
00030c  4648              MOV      r0,r9                 ;193
00030e  f7fffffe          BL       TEXT_SetFont
000312  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000316  a168              ADR      r1,|L8.1208|
000318  4648              MOV      r0,r9                 ;195
00031a  f7fffffe          BL       TEXT_SetText
00031e  2001              MOVS     r0,#1                 ;196
000320  7068              STRB     r0,[r5,#1]            ;196
000322  e7cf              B        |L8.708|
                  |L8.804|
000324  78a8              LDRB     r0,[r5,#2]            ;210  ; cdelay
000326  1c40              ADDS     r0,r0,#1              ;210
000328  70a8              STRB     r0,[r5,#2]            ;210
00032a  e774              B        |L8.534|
                  |L8.812|
00032c  f8d4b004          LDR      r11,[r4,#4]           ;237
000330  2100              MOVS     r1,#0                 ;238
000332  4658              MOV      r0,r11                ;238
000334  f7fffffe          BL       WINDOW_SetBkColor
000338  2300              MOVS     r3,#0                 ;239
00033a  f44f727a          MOV      r2,#0x3e8             ;239
00033e  2103              MOVS     r1,#3                 ;239
000340  4658              MOV      r0,r11                ;239
000342  f7fffffe          BL       WM_CreateTimer
000346  4651              MOV      r1,r10                ;252
000348  6860              LDR      r0,[r4,#4]            ;252
00034a  f7fffffe          BL       WM_GetDialogItem
00034e  4682              MOV      r10,r0                ;252
000350  21ff              MOVS     r1,#0xff              ;253
000352  4650              MOV      r0,r10                ;253
000354  f7fffffe          BL       TEXT_SetTextColor
000358  495a              LDR      r1,|L8.1220|
00035a  4650              MOV      r0,r10                ;254
00035c  f7fffffe          BL       TEXT_SetFont
000360  a138              ADR      r1,|L8.1092|
000362  4650              MOV      r0,r10                ;255
000364  f7fffffe          BL       TEXT_SetText
000368  f6400103          MOV      r1,#0x803             ;265
00036c  6860              LDR      r0,[r4,#4]            ;265
00036e  f7fffffe          BL       WM_GetDialogItem
000372  4682              MOV      r10,r0                ;265
000374  494f              LDR      r1,|L8.1204|
000376  4650              MOV      r0,r10                ;267
000378  f7fffffe          BL       BUTTON_SetFont
00037c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000380  a151              ADR      r1,|L8.1224|
000382  4650              MOV      r0,r10                ;269
000384  f7fffffe          BL       BUTTON_SetText
000388  f6400104          MOV      r1,#0x804             ;273
00038c  6860              LDR      r0,[r4,#4]            ;273
00038e  f7fffffe          BL       WM_GetDialogItem
000392  4682              MOV      r10,r0                ;273
000394  2101              MOVS     r1,#1                 ;274
000396  4650              MOV      r0,r10                ;274
000398  f7fffffe          BL       BUTTON_SetPressed
00039c  4945              LDR      r1,|L8.1204|
00039e  4650              MOV      r0,r10                ;276
0003a0  f7fffffe          BL       BUTTON_SetFont
0003a4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003a8  a14b              ADR      r1,|L8.1240|
0003aa  4650              MOV      r0,r10                ;278
0003ac  f7fffffe          BL       BUTTON_SetText
0003b0  f6400107          MOV      r1,#0x807             ;297
0003b4  6860              LDR      r0,[r4,#4]            ;297
0003b6  f7fffffe          BL       WM_GetDialogItem
0003ba  4682              MOV      r10,r0                ;297
0003bc  4631              MOV      r1,r6                 ;298
0003be  4650              MOV      r0,r10                ;298
0003c0  f7fffffe          BL       TEXT_SetTextColor
0003c4  4923              LDR      r1,|L8.1108|
0003c6  4650              MOV      r0,r10                ;299
0003c8  f7fffffe          BL       TEXT_SetFont
0003cc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003d0  a145              ADR      r1,|L8.1256|
0003d2  4650              MOV      r0,r10                ;301
0003d4  f7fffffe          BL       TEXT_SetText
0003d8  f6400108          MOV      r1,#0x808             ;303
0003dc  6860              LDR      r0,[r4,#4]            ;303
0003de  f7fffffe          BL       WM_GetDialogItem
0003e2  4682              MOV      r10,r0                ;303
0003e4  4631              MOV      r1,r6                 ;304
0003e6  4650              MOV      r0,r10                ;304
0003e8  f7fffffe          BL       TEXT_SetTextColor
0003ec  4919              LDR      r1,|L8.1108|
0003ee  4650              MOV      r0,r10                ;305
0003f0  f7fffffe          BL       TEXT_SetFont
0003f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003f8  a13c              ADR      r1,|L8.1260|
0003fa  4650              MOV      r0,r10                ;307
0003fc  f7fffffe          BL       TEXT_SetText
000400  f44f6102          MOV      r1,#0x820             ;309
000404  6860              LDR      r0,[r4,#4]            ;309
000406  e073              B        |L8.1264|
                  |L8.1032|
                          DCD      Run_Control
                  |L8.1036|
00040c  42c80000          DCFS     0x42c80000 ; 100
                  |L8.1040|
000410  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1044|
                          DCD      0x00d3d3d3
                  |L8.1048|
                          DCD      temp
                  |L8.1052|
00041c  00000000          DCFD     0x0000000000000000 ; 0
000420  00000000
                  |L8.1060|
                          DCD      ||.data||
                  |L8.1064|
                          DCD      GUI_Fontsymbol
                  |L8.1068|
00042c  4a696e6b          DCB      "Jinko",0
000430  6f00    
000432  00                DCB      0
000433  00                DCB      0
                  |L8.1076|
                          DCD      GUI_FontHZ20S
                  |L8.1080|
000438  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
00043c  878fe698
000440  bee7a4ba
                  |L8.1092|
000444  00                DCB      0
000445  00                DCB      0
000446  00                DCB      0
000447  00                DCB      0
                  |L8.1096|
                          DCD      GUI_Font24_1
                  |L8.1100|
00044c  5600              DCB      "V",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L8.1104|
000450  4100              DCB      "A",0
000452  00                DCB      0
000453  00                DCB      0
                  |L8.1108|
                          DCD      GUI_FontEN40
                  |L8.1112|
000458  433a00            DCB      "C:",0
00045b  00                DCB      0
                  |L8.1116|
00045c  6d00              DCB      "m",0
00045e  00                DCB      0
00045f  00                DCB      0
                  |L8.1120|
000460  414800            DCB      "AH",0
000463  00                DCB      0
                  |L8.1124|
                          DCD      GUI_Fontunit
                  |L8.1128|
000468  c2b000            DCB      194,176,0
00046b  00                DCB      0
                  |L8.1132|
00046c  4300              DCB      "C",0
00046e  00                DCB      0
00046f  00                DCB      0
                  |L8.1136|
                          DCD      lock
                  |L8.1140|
                          DCD      DISS_POW_Voltage
                  |L8.1144|
                          DCD      0x3dcccccd
                  |L8.1148|
00047c  252e3266          DCB      "%.2f",0
000480  00      
000481  00                DCB      0
000482  00                DCB      0
000483  00                DCB      0
                  |L8.1156|
000484  e9948100          DCB      233,148,129,0
                  |L8.1160|
000488  252e3366          DCB      "%.3f",0
00048c  00      
00048d  00                DCB      0
00048e  00                DCB      0
00048f  00                DCB      0
                  |L8.1168|
000490  252e3166          DCB      "%.1f",0
000494  00      
000495  00                DCB      0
000496  00                DCB      0
000497  00                DCB      0
                  |L8.1176|
                          DCD      bc_raw
                  |L8.1180|
                          DCD      battery_c
                  |L8.1184|
0004a0  25303564          DCB      "%05d",0
0004a4  00      
0004a5  00                DCB      0
0004a6  00                DCB      0
0004a7  00                DCB      0
                  |L8.1192|
                          DCD      DISS_POW_Current
                  |L8.1196|
                          DCD      0x40020800
                  |L8.1200|
                          DCD      mode_sw
                  |L8.1204|
                          DCD      GUI_FontHZ16
                  |L8.1208|
0004b8  e58585e7          DCB      229,133,133,231,148,181,228,184,173,0
0004bc  94b5e4b8
0004c0  ad00    
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L8.1220|
                          DCD      GUI_FontHZ14
                  |L8.1224|
0004c8  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
0004cc  8ea7e8b4
0004d0  9fe8bdbd
0004d4  00      
0004d5  00                DCB      0
0004d6  00                DCB      0
0004d7  00                DCB      0
                  |L8.1240|
0004d8  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
0004dc  8ea7e794
0004e0  b5e6ba90
0004e4  00      
0004e5  00                DCB      0
0004e6  00                DCB      0
0004e7  00                DCB      0
                  |L8.1256|
0004e8  563a00            DCB      "V:",0
0004eb  00                DCB      0
                  |L8.1260|
0004ec  493a00            DCB      "I:",0
0004ef  00                DCB      0
                  |L8.1264|
0004f0  f7fffffe          BL       WM_GetDialogItem
0004f4  4682              MOV      r10,r0                ;309
0004f6  4631              MOV      r1,r6                 ;310
0004f8  4650              MOV      r0,r10                ;310
0004fa  f7fffffe          BL       TEXT_SetTextColor
0004fe  499c              LDR      r1,|L8.1904|
000500  4650              MOV      r0,r10                ;311
000502  f7fffffe          BL       TEXT_SetFont
000506  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00050a  f2af01c0          ADR      r1,|L8.1100|
00050e  4650              MOV      r0,r10                ;313
000510  f7fffffe          BL       TEXT_SetText
000514  f6400121          MOV      r1,#0x821             ;315
000518  6860              LDR      r0,[r4,#4]            ;315
00051a  f7fffffe          BL       WM_GetDialogItem
00051e  4682              MOV      r10,r0                ;315
000520  4631              MOV      r1,r6                 ;316
000522  4650              MOV      r0,r10                ;316
000524  f7fffffe          BL       TEXT_SetTextColor
000528  4991              LDR      r1,|L8.1904|
00052a  4650              MOV      r0,r10                ;317
00052c  f7fffffe          BL       TEXT_SetFont
000530  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000534  f2af01e8          ADR      r1,|L8.1104|
000538  4650              MOV      r0,r10                ;319
00053a  f7fffffe          BL       TEXT_SetText
00053e  f640013d          MOV      r1,#0x83d             ;321
000542  6860              LDR      r0,[r4,#4]            ;321
000544  f7fffffe          BL       WM_GetDialogItem
000548  4606              MOV      r6,r0                 ;321
00054a  2100              MOVS     r1,#0                 ;322
00054c  4630              MOV      r0,r6                 ;322
00054e  f7fffffe          BL       TEXT_SetTextColor
000552  4988              LDR      r1,|L8.1908|
000554  4630              MOV      r0,r6                 ;323
000556  f7fffffe          BL       TEXT_SetBkColor
00055a  4987              LDR      r1,|L8.1912|
00055c  4630              MOV      r0,r6                 ;324
00055e  f7fffffe          BL       TEXT_SetFont
000562  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000566  a185              ADR      r1,|L8.1916|
000568  4630              MOV      r0,r6                 ;326
00056a  f7fffffe          BL       TEXT_SetText
00056e  f640013e          MOV      r1,#0x83e             ;328
000572  6860              LDR      r0,[r4,#4]            ;328
000574  f7fffffe          BL       WM_GetDialogItem
000578  4682              MOV      r10,r0                ;328
00057a  464e              MOV      r6,r9                 ;329
00057c  4631              MOV      r1,r6                 ;329
00057e  4650              MOV      r0,r10                ;329
000580  f7fffffe          BL       TEXT_SetTextColor
000584  497c              LDR      r1,|L8.1912|
000586  4650              MOV      r0,r10                ;330
000588  f7fffffe          BL       TEXT_SetFont
00058c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000590  a17e              ADR      r1,|L8.1932|
000592  4650              MOV      r0,r10                ;332
000594  f7fffffe          BL       TEXT_SetText
000598  f640113a          MOV      r1,#0x93a             ;334
00059c  6860              LDR      r0,[r4,#4]            ;334
00059e  f7fffffe          BL       WM_GetDialogItem
0005a2  4681              MOV      r9,r0                 ;334
0005a4  4631              MOV      r1,r6                 ;335
0005a6  4648              MOV      r0,r9                 ;335
0005a8  f7fffffe          BL       TEXT_SetTextColor
0005ac  4972              LDR      r1,|L8.1912|
0005ae  4648              MOV      r0,r9                 ;336
0005b0  f7fffffe          BL       TEXT_SetFont
0005b4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005b8  a178              ADR      r1,|L8.1948|
0005ba  4648              MOV      r0,r9                 ;338
0005bc  f7fffffe          BL       TEXT_SetText
0005c0  f6400166          MOV      r1,#0x866             ;340
0005c4  6860              LDR      r0,[r4,#4]            ;340
0005c6  f7fffffe          BL       WM_GetDialogItem
0005ca  4681              MOV      r9,r0                 ;340
0005cc  ee190a90          VMOV     r0,s19                ;341
0005d0  f7fffffe          BL       __aeabi_f2d
0005d4  ec410b10          VMOV     d0,r0,r1              ;341
0005d8  ec532b10          VMOV     r2,r3,d0              ;341
0005dc  f2af1164          ADR      r1,|L8.1148|
0005e0  a801              ADD      r0,sp,#4              ;341
0005e2  f7fffffe          BL       __2sprintf
0005e6  4631              MOV      r1,r6                 ;342
0005e8  4648              MOV      r0,r9                 ;342
0005ea  f7fffffe          BL       TEXT_SetTextColor
0005ee  496f              LDR      r1,|L8.1964|
0005f0  4648              MOV      r0,r9                 ;343
0005f2  f7fffffe          BL       TEXT_SetFont
0005f6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005fa  a901              ADD      r1,sp,#4              ;345
0005fc  4648              MOV      r0,r9                 ;345
0005fe  f7fffffe          BL       TEXT_SetText
000602  f6400167          MOV      r1,#0x867             ;347
000606  6860              LDR      r0,[r4,#4]            ;347
000608  f7fffffe          BL       WM_GetDialogItem
00060c  4681              MOV      r9,r0                 ;347
00060e  ee190a10          VMOV     r0,s18                ;348
000612  f7fffffe          BL       __aeabi_f2d
000616  ec410b10          VMOV     d0,r0,r1              ;348
00061a  ec532b10          VMOV     r2,r3,d0              ;348
00061e  f2af1198          ADR      r1,|L8.1160|
000622  a801              ADD      r0,sp,#4              ;348
000624  f7fffffe          BL       __2sprintf
000628  4631              MOV      r1,r6                 ;349
00062a  4648              MOV      r0,r9                 ;349
00062c  f7fffffe          BL       TEXT_SetTextColor
000630  495e              LDR      r1,|L8.1964|
000632  4648              MOV      r0,r9                 ;350
000634  f7fffffe          BL       TEXT_SetFont
000638  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00063c  a901              ADD      r1,sp,#4              ;352
00063e  4648              MOV      r0,r9                 ;352
000640  f7fffffe          BL       TEXT_SetText
000644  f6400193          MOV      r1,#0x893             ;354
000648  6860              LDR      r0,[r4,#4]            ;354
00064a  f7fffffe          BL       WM_GetDialogItem
00064e  4682              MOV      r10,r0                ;354
000650  ec532b18          VMOV     r2,r3,d8              ;355
000654  f2af11dc          ADR      r1,|L8.1148|
000658  a801              ADD      r0,sp,#4              ;355
00065a  f7fffffe          BL       __2sprintf
00065e  f64f79ff          MOV      r9,#0xffff            ;356
000662  4649              MOV      r1,r9                 ;356
000664  4650              MOV      r0,r10                ;356
000666  f7fffffe          BL       TEXT_SetTextColor
00066a  4951              LDR      r1,|L8.1968|
00066c  4650              MOV      r0,r10                ;357
00066e  f7fffffe          BL       TEXT_SetFont
000672  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000676  a901              ADD      r1,sp,#4              ;359
000678  4650              MOV      r0,r10                ;359
00067a  f7fffffe          BL       TEXT_SetText
00067e  f6400194          MOV      r1,#0x894             ;361
000682  6860              LDR      r0,[r4,#4]            ;361
000684  f7fffffe          BL       WM_GetDialogItem
000688  4682              MOV      r10,r0                ;361
00068a  ec532b18          VMOV     r2,r3,d8              ;362
00068e  f2af2108          ADR      r1,|L8.1160|
000692  a801              ADD      r0,sp,#4              ;362
000694  f7fffffe          BL       __2sprintf
000698  4649              MOV      r1,r9                 ;363
00069a  4650              MOV      r0,r10                ;363
00069c  f7fffffe          BL       TEXT_SetTextColor
0006a0  4943              LDR      r1,|L8.1968|
0006a2  4650              MOV      r0,r10                ;364
0006a4  f7fffffe          BL       TEXT_SetFont
0006a8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006ac  a901              ADD      r1,sp,#4              ;366
0006ae  4650              MOV      r0,r10                ;366
0006b0  f7fffffe          BL       TEXT_SetText
0006b4  f640110b          MOV      r1,#0x90b             ;368
0006b8  6860              LDR      r0,[r4,#4]            ;368
0006ba  f7fffffe          BL       WM_GetDialogItem
0006be  4682              MOV      r10,r0                ;368
0006c0  2200              MOVS     r2,#0                 ;369
0006c2  f2af2124          ADR      r1,|L8.1184|
0006c6  a801              ADD      r0,sp,#4              ;369
0006c8  f7fffffe          BL       __2sprintf
0006cc  4649              MOV      r1,r9                 ;370
0006ce  4650              MOV      r0,r10                ;370
0006d0  f7fffffe          BL       TEXT_SetTextColor
0006d4  4936              LDR      r1,|L8.1968|
0006d6  4650              MOV      r0,r10                ;371
0006d8  f7fffffe          BL       TEXT_SetFont
0006dc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006e0  a901              ADD      r1,sp,#4              ;373
0006e2  4650              MOV      r0,r10                ;373
0006e4  f7fffffe          BL       TEXT_SetText
0006e8  f640110c          MOV      r1,#0x90c             ;375
0006ec  6860              LDR      r0,[r4,#4]            ;375
0006ee  f7fffffe          BL       WM_GetDialogItem
0006f2  4681              MOV      r9,r0                 ;375
0006f4  4641              MOV      r1,r8                 ;376
0006f6  4648              MOV      r0,r9                 ;376
0006f8  f7fffffe          BL       TEXT_SetTextColor
0006fc  492b              LDR      r1,|L8.1964|
0006fe  4648              MOV      r0,r9                 ;377
000700  f7fffffe          BL       TEXT_SetFont
000704  6838              LDR      r0,[r7,#0]            ;378  ; temp
000706  f7fffffe          BL       __aeabi_f2d
00070a  ec410b10          VMOV     d0,r0,r1              ;378
00070e  ec532b10          VMOV     r2,r3,d0              ;378
000712  f2af2184          ADR      r1,|L8.1168|
000716  a801              ADD      r0,sp,#4              ;378
000718  f7fffffe          BL       __2sprintf
00071c  a901              ADD      r1,sp,#4              ;379
00071e  4648              MOV      r0,r9                 ;379
000720  f7fffffe          BL       TEXT_SetText
000724  f640112e          MOV      r1,#0x92e             ;381
000728  6860              LDR      r0,[r4,#4]            ;381
00072a  f7fffffe          BL       WM_GetDialogItem
00072e  4604              MOV      r4,r0                 ;381
000730  68a8              LDR      r0,[r5,#8]            ;382  ; pow_cutoffc
000732  f7fffffe          BL       __aeabi_f2d
000736  ec410b10          VMOV     d0,r0,r1              ;382
00073a  ec532b10          VMOV     r2,r3,d0              ;382
00073e  f2af21b8          ADR      r1,|L8.1160|
000742  a801              ADD      r0,sp,#4              ;382
000744  f7fffffe          BL       __2sprintf
000748  4631              MOV      r1,r6                 ;383
00074a  4620              MOV      r0,r4                 ;383
00074c  f7fffffe          BL       TEXT_SetTextColor
000750  4916              LDR      r1,|L8.1964|
000752  4620              MOV      r0,r4                 ;384
000754  f7fffffe          BL       TEXT_SetFont
000758  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00075c  a901              ADD      r1,sp,#4              ;386
00075e  4620              MOV      r0,r4                 ;386
000760  f7fffffe          BL       TEXT_SetText
000764  e47e              B        |L8.100|
                  |L8.1894|
000766  68a0              LDR      r0,[r4,#8]            ;392
000768  f7fffffe          BL       WM_GetId
00076c  e47a              B        |L8.100|
;;;491    
                          ENDP

00076e  0000              DCW      0x0000
                  |L8.1904|
                          DCD      GUI_FontEN40
                  |L8.1908|
                          DCD      0x00bfffff
                  |L8.1912|
                          DCD      GUI_Fontset_font
                  |L8.1916|
00077c  e8be93e5          DCB      232,190,147,229,135,186,231,148,181,229,142,139,0
000780  87bae794
000784  b5e58e8b
000788  00      
000789  00                DCB      0
00078a  00                DCB      0
00078b  00                DCB      0
                  |L8.1932|
00078c  e99990e5          DCB      233,153,144,229,136,182,231,148,181,230,181,129,0
000790  88b6e794
000794  b5e6b581
000798  00      
000799  00                DCB      0
00079a  00                DCB      0
00079b  00                DCB      0
                  |L8.1948|
00079c  e688aae6          DCB      230,136,170,230,173,162,231,148,181,230,181,129,0
0007a0  ada2e794
0007a4  b5e6b581
0007a8  00      
0007a9  00                DCB      0
0007aa  00                DCB      0
0007ab  00                DCB      0
                  |L8.1964|
                          DCD      GUI_Font24_1
                  |L8.1968|
                          DCD      GUI_FontD24x32

                          AREA ||i.test_pow||, CODE, READONLY, ALIGN=2

                  test_pow PROC
;;;1209   
;;;1210   void test_pow(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1211   {
;;;1212   
;;;1213       if(pow_sw == pow_on && para_set1 == set_1_on)
000002  4834              LDR      r0,|L9.212|
000004  7800              LDRB     r0,[r0,#0]  ; pow_sw
;;;1214       {
;;;1215           if(DISS_POW_Voltage*100 > set_max_v || DISS_POW_Voltage*100 < set_min_v || DISS_POW_Current * 100 > set_max_c || DISS_POW_Current * 100 < set_min_c)
;;;1216           {
;;;1217               if(para_set4 == set_4_on){
;;;1218                   BEEP_Tiggr();
;;;1219               }
;;;1220               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1221               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d34              LDR      r5,|L9.216|
000008  f44f5480          MOV      r4,#0x1000
00000c  2801              CMP      r0,#1                 ;1213
00000e  d103              BNE      |L9.24|
000010  4832              LDR      r0,|L9.220|
000012  7800              LDRB     r0,[r0,#0]            ;1213  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1213
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1222           }else{
;;;1223               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1224               TM1650_SET_LED(0x48,0x71);
;;;1225               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1226           }        
;;;1227       }else
;;;1228       {
;;;1229           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1230           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  482c              LDR      r0,|L9.224|
00002e  eddf0a2d          VLDR     s1,|L9.228|
000032  4a2d              LDR      r2,|L9.232|
000034  ed900a00          VLDR     s0,[r0,#0]            ;1215
000038  6b93              LDR      r3,[r2,#0x38]         ;1215  ; Run_Control
00003a  ee200a20          VMUL.F32 s0,s0,s1              ;1215
00003e  ee013a10          VMOV     s2,r3                 ;1215
000042  eeb81a41          VCVT.F32.U32 s2,s2                 ;1215
000046  eeb40ac1          VCMPE.F32 s0,s2                 ;1215
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1215
00004e  dc22              BGT      |L9.150|
000050  6bd3              LDR      r3,[r2,#0x3c]         ;1215  ; Run_Control
000052  ee013a10          VMOV     s2,r3                 ;1215
000056  eeb81a41          VCVT.F32.U32 s2,s2                 ;1215
00005a  eeb40ac1          VCMPE.F32 s0,s2                 ;1215
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1215
000062  d318              BCC      |L9.150|
000064  4821              LDR      r0,|L9.236|
000066  ed900a00          VLDR     s0,[r0,#0]            ;1215
00006a  6c90              LDR      r0,[r2,#0x48]         ;1215  ; Run_Control
00006c  ee200a20          VMUL.F32 s0,s0,s1              ;1215
000070  ee000a90          VMOV     s1,r0                 ;1215
000074  eef80a60          VCVT.F32.U32 s1,s1                 ;1215
000078  eeb40ae0          VCMPE.F32 s0,s1                 ;1215
00007c  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1215
000080  dc09              BGT      |L9.150|
000082  6cd0              LDR      r0,[r2,#0x4c]         ;1215  ; Run_Control
000084  ee000a90          VMOV     s1,r0                 ;1215
000088  eef80a60          VCVT.F32.U32 s1,s1                 ;1215
00008c  eeb40ae0          VCMPE.F32 s0,s1                 ;1215
000090  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1215
000094  d20f              BCS      |L9.182|
                  |L9.150|
000096  4816              LDR      r0,|L9.240|
000098  7800              LDRB     r0,[r0,#0]            ;1217  ; para_set4
00009a  28ff              CMP      r0,#0xff              ;1217
00009c  d101              BNE      |L9.162|
00009e  f7fffffe          BL       BEEP_Tiggr
                  |L9.162|
0000a2  2170              MOVS     r1,#0x70              ;1220
0000a4  2068              MOVS     r0,#0x68              ;1220
0000a6  f7fffffe          BL       TM1650_SET_LED
0000aa  4621              MOV      r1,r4                 ;1221
0000ac  4628              MOV      r0,r5                 ;1221
0000ae  e8bd4070          POP      {r4-r6,lr}            ;1221
0000b2  f7ffbffe          B.W      GPIO_SetBits
                  |L9.182|
0000b6  4621              MOV      r1,r4                 ;1223
0000b8  4628              MOV      r0,r5                 ;1223
0000ba  f7fffffe          BL       GPIO_ResetBits
0000be  2171              MOVS     r1,#0x71              ;1224
0000c0  2048              MOVS     r0,#0x48              ;1224
0000c2  f7fffffe          BL       TM1650_SET_LED
0000c6  e8bd4070          POP      {r4-r6,lr}            ;1225
0000ca  21f2              MOVS     r1,#0xf2              ;1225
0000cc  2068              MOVS     r0,#0x68              ;1225
0000ce  f7ffbffe          B.W      TM1650_SET_LED
;;;1231       }
;;;1232   }
;;;1233   
                          ENDP

0000d2  0000              DCW      0x0000
                  |L9.212|
                          DCD      ||.data||
                  |L9.216|
                          DCD      0x40020c00
                  |L9.220|
                          DCD      para_set1
                  |L9.224|
                          DCD      DISS_POW_Voltage
                  |L9.228|
0000e4  42c80000          DCFS     0x42c80000 ; 100
                  |L9.232|
                          DCD      Run_Control
                  |L9.236|
                          DCD      DISS_POW_Current
                  |L9.240|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate1
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08000000          DCW      0x0800,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080300a3          DCW      0x0803,0x00a3
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080400f3          DCW      0x0804,0x00f3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00005c  0807001c          DCW      0x0807,0x001c
000060  00320040          DCW      0x0032,0x0040
000064  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000078  0808001c          DCW      0x0808,0x001c
00007c  00780040          DCW      0x0078,0x0040
000080  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000094  082000f0          DCW      0x0820,0x00f0
000098  00320020          DCW      0x0032,0x0020
00009c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  082100f0          DCW      0x0821,0x00f0
0000b4  00790020          DCW      0x0079,0x0020
0000b8  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  083d0122          DCW      0x083d,0x0122
0000d0  004b0050          DCW      0x004b,0x0050
0000d4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  083e0122          DCW      0x083e,0x0122
0000ec  00640050          DCW      0x0064,0x0050
0000f0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  0866017c          DCW      0x0866,0x017c
000108  004b0035          DCW      0x004b,0x0035
00010c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  08670172          DCW      0x0867,0x0172
000124  00640041          DCW      0x0064,0x0041
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  0893005f          DCW      0x0893,0x005f
000140  00300096          DCW      0x0030,0x0096
000144  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  0894005f          DCW      0x0894,0x005f
00015c  00740096          DCW      0x0074,0x0096
000160  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  08950190          DCW      0x0895,0x0190
000178  00040032          DCW      0x0004,0x0032
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090b005f          DCW      0x090b,0x005f
000194  00b80096          DCW      0x00b8,0x0096
000198  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  090c012c          DCW      0x090c,0x012c
0001b0  00020050          DCW      0x0002,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  092e0172          DCW      0x092e,0x0172
0001cc  00960041          DCW      0x0096,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  093a0122          DCW      0x093a,0x0122
0001e8  00960050          DCW      0x0096,0x0050
0001ec  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  093c017c          DCW      0x093c,0x017c
000204  00080014          DCW      0x0008,0x0014
000208  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  pow_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  cdelay
000002  0000              DCB      0x00,0x00
                  hWinWind
                          DCD      0x00000000
                  pow_cutoffc
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\menu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_menu_c_pow_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REVSH|
#line 144
|__asm___6_menu_c_pow_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
