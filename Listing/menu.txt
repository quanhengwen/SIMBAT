; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\menu.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\menu.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\menu.crf --no_multibyte_chars ..\APP\menu.c]
                          THUMB

                          AREA ||i.CreateWindow||, CODE, READONLY, ALIGN=2

                  CreateWindow PROC
;;;547    
;;;548    WM_HWIN CreateWindow(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;549      if(page_sw == face_graph || page_sw == face_menu)
000002  4c2d              LDR      r4,|L1.184|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d00f              BEQ      |L1.42|
00000a  7820              LDRB     r0,[r4,#0]  ; page_sw
00000c  2802              CMP      r0,#2
00000e  d00c              BEQ      |L1.42|
;;;550      {      
;;;551      }else{
;;;552    	  GPIO_SetBits(GPIOA,GPIO_Pin_15);//µç×Ó¸ºÔØOFF
000010  f44f4100          MOV      r1,#0x8000
000014  4829              LDR      r0,|L1.188|
000016  f7fffffe          BL       GPIO_SetBits
;;;553    	  GPIO_ResetBits(GPIOC,GPIO_Pin_1);//¹Ø±ÕµçÔ´Êä³ö
00001a  2102              MOVS     r1,#2
00001c  4828              LDR      r0,|L1.192|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;554    	  Delay_ms(500);
000022  f44f70fa          MOV      r0,#0x1f4
000026  f7fffffe          BL       Delay_ms
                  |L1.42|
;;;555    	  //GPIO_SetBits(GPIOC,GPIO_Pin_13);//¹Ø±ÕµçÔ´Êä³ö¼ÌµçÆ
;;;556    //      IO_OFF();
;;;557    	  
;;;558      }
;;;559      page_sw = face_menu;
00002a  2002              MOVS     r0,#2
00002c  7020              STRB     r0,[r4,#0]
;;;560      track = face_menu;
00002e  4925              LDR      r1,|L1.196|
000030  7008              STRB     r0,[r1,#0]
;;;561      set_sw = set_18;
000032  4925              LDR      r1,|L1.200|
000034  2011              MOVS     r0,#0x11
000036  7008              STRB     r0,[r1,#0]
;;;562      SET_Voltage = pow_v;
000038  4824              LDR      r0,|L1.204|
00003a  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
00003e  6041              STR      r1,[r0,#4]  ; Run_Control
;;;563      SET_Voltage_Laod = pow_v * 10 +20;
000040  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
000044  2214              MOVS     r2,#0x14
000046  eb010181          ADD      r1,r1,r1,LSL #2
00004a  eb020141          ADD      r1,r2,r1,LSL #1
00004e  60c1              STR      r1,[r0,#0xc]  ; Run_Control
;;;564      SET_Current = pow_c;
000050  f8d010a0          LDR      r1,[r0,#0xa0]  ; Run_Control
000054  6081              STR      r1,[r0,#8]  ; Run_Control
;;;565      pow_cutoffc = (float)set_pow_cutoffc/1000;
000056  481e              LDR      r0,|L1.208|
000058  4d1f              LDR      r5,|L1.216|
00005a  ed900a05          VLDR     s0,[r0,#0x14]
00005e  eef80ac0          VCVT.F32.S32 s1,s0
000062  ed9f0a1c          VLDR     s0,|L1.212|
000066  ee801a80          VDIV.F32 s2,s1,s0
00006a  ed851a02          VSTR     s2,[r5,#8]
;;;566      load_cutoffv = (float)set_load_cutoffv/1000;
00006e  edd00a04          VLDR     s1,[r0,#0x10]
000072  481a              LDR      r0,|L1.220|
000074  eef80ae0          VCVT.F32.S32 s1,s1
000078  ee801a80          VDIV.F32 s2,s1,s0
00007c  ed801a00          VSTR     s2,[r0,#0]
;;;567      pass = 0;
000080  4817              LDR      r0,|L1.224|
000082  2400              MOVS     r4,#0
000084  7004              STRB     r4,[r0,#0]
;;;568      mode_sw = mode_pow;
000086  4917              LDR      r1,|L1.228|
000088  2003              MOVS     r0,#3
00008a  7008              STRB     r0,[r1,#0]
;;;569    //  USART_SendData(USART3,1);//连接电源
;;;570      TM1650_SET_LED(0x68,0x70);
00008c  2170              MOVS     r1,#0x70
00008e  2068              MOVS     r0,#0x68
000090  f7fffffe          BL       TM1650_SET_LED
;;;571      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000094  f44f5180          MOV      r1,#0x1000
000098  4813              LDR      r0,|L1.232|
00009a  f7fffffe          BL       GPIO_ResetBits
;;;572      hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
00009e  f7fffffe          BL       WM_GetDesktopWindow
0000a2  4603              MOV      r3,r0
0000a4  9400              STR      r4,[sp,#0]
0000a6  4a11              LDR      r2,|L1.236|
0000a8  2114              MOVS     r1,#0x14
0000aa  4811              LDR      r0,|L1.240|
0000ac  9401              STR      r4,[sp,#4]
0000ae  f7fffffe          BL       GUI_CreateDialogBox
0000b2  6068              STR      r0,[r5,#4]  ; hWinWind
;;;573      return hWinWind;
;;;574    }
0000b4  bd7c              POP      {r2-r6,pc}
;;;575    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L1.184|
                          DCD      page_sw
                  |L1.188|
                          DCD      0x40020000
                  |L1.192|
                          DCD      0x40020800
                  |L1.196|
                          DCD      track
                  |L1.200|
                          DCD      set_sw
                  |L1.204|
                          DCD      Run_Control
                  |L1.208|
                          DCD      InFlashSave
                  |L1.212|
0000d4  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.216|
                          DCD      ||.data||
                  |L1.220|
                          DCD      load_cutoffv
                  |L1.224|
                          DCD      pass
                  |L1.228|
                          DCD      mode_sw
                  |L1.232|
                          DCD      0x40020c00
                  |L1.236|
                          DCD      _cbDialog
                  |L1.240|
                          DCD      ||.constdata||

                          AREA ||i.DEL_POW||, CODE, READONLY, ALIGN=2

                  DEL_POW PROC
;;;799    }
;;;800    void DEL_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;801    {
;;;802    	switch(set_sw){
000004  482b              LDR      r0,|L2.180|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;803    		case set_18:
;;;804            {
;;;805    			WM_HWIN hItem;
;;;806    //            WM_InvalidateWindow(hWinWind);
;;;807                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000008  482b              LDR      r0,|L2.184|
;;;808    			if(bit > 1)
;;;809    			{
;;;810    				bit --;
;;;811    				set_limit[bit-1] = '\0';
00000a  4f2c              LDR      r7,|L2.188|
00000c  2400              MOVS     r4,#0                 ;807
00000e  6840              LDR      r0,[r0,#4]            ;807
000010  4d2b              LDR      r5,|L2.192|
;;;812    			}
;;;813    			if(bit == dot_flag)
000012  4e2c              LDR      r6,|L2.196|
000014  2911              CMP      r1,#0x11              ;802
000016  d01b              BEQ      |L2.80|
000018  2912              CMP      r1,#0x12              ;802
00001a  d031              BEQ      |L2.128|
00001c  2958              CMP      r1,#0x58              ;802
00001e  d147              BNE      |L2.176|
;;;814    			{
;;;815    				dot_flag = 0;
;;;816    			}
;;;817    			TEXT_SetText(hItem,set_limit);
;;;818    		}break;
;;;819    		case set_19:
;;;820            {
;;;821    			WM_HWIN hItem;
;;;822    //            WM_InvalidateWindow(hWinWind);
;;;823                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;824    			if(bit > 1)
;;;825    			{
;;;826    				bit --;
;;;827    				set_limit[bit-1] = '\0';
;;;828    			}
;;;829    			if(bit == dot_flag)
;;;830    			{
;;;831    				dot_flag = 0;
;;;832    			}
;;;833    			TEXT_SetText(hItem,set_limit);
;;;834    		}break;
;;;835    		case set_89:
;;;836            {
;;;837                WM_HWIN hItem;
;;;838    //            WM_InvalidateWindow(hWinWind);
;;;839                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
000020  f640112e          MOV      r1,#0x92e
000024  f7fffffe          BL       WM_GetDialogItem
;;;840    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;841    			{
;;;842    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;843    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;844    			}
;;;845    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;846    			{
;;;847    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;848    			}
;;;849    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491c              LDR      r1,|L2.188|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f6400166          MOV      r1,#0x866             ;807
000054  f7fffffe          BL       WM_GetDialogItem
000058  7829              LDRB     r1,[r5,#0]            ;808  ; bit
00005a  2901              CMP      r1,#1                 ;808
00005c  d906              BLS      |L2.108|
00005e  7829              LDRB     r1,[r5,#0]            ;810  ; bit
000060  1e49              SUBS     r1,r1,#1              ;810
000062  7029              STRB     r1,[r5,#0]            ;810
000064  7829              LDRB     r1,[r5,#0]            ;811  ; bit
000066  4439              ADD      r1,r1,r7              ;811
000068  f8014c01          STRB     r4,[r1,#-1]           ;811
                  |L2.108|
00006c  7829              LDRB     r1,[r5,#0]            ;813  ; bit
00006e  7832              LDRB     r2,[r6,#0]            ;813  ; dot_flag
000070  4291              CMP      r1,r2                 ;813
000072  d100              BNE      |L2.118|
000074  7034              STRB     r4,[r6,#0]            ;815
                  |L2.118|
000076  e8bd41f0          POP      {r4-r8,lr}            ;817
00007a  4910              LDR      r1,|L2.188|
00007c  f7ffbffe          B.W      TEXT_SetText
                  |L2.128|
000080  f6400167          MOV      r1,#0x867             ;823
000084  f7fffffe          BL       WM_GetDialogItem
000088  7829              LDRB     r1,[r5,#0]            ;824  ; bit
00008a  2901              CMP      r1,#1                 ;824
00008c  d906              BLS      |L2.156|
00008e  7829              LDRB     r1,[r5,#0]            ;826  ; bit
000090  1e49              SUBS     r1,r1,#1              ;826
000092  7029              STRB     r1,[r5,#0]            ;826
000094  7829              LDRB     r1,[r5,#0]            ;827  ; bit
000096  4439              ADD      r1,r1,r7              ;827
000098  f8014c01          STRB     r4,[r1,#-1]           ;827
                  |L2.156|
00009c  7829              LDRB     r1,[r5,#0]            ;829  ; bit
00009e  7832              LDRB     r2,[r6,#0]            ;829  ; dot_flag
0000a0  4291              CMP      r1,r2                 ;829
0000a2  d100              BNE      |L2.166|
0000a4  7034              STRB     r4,[r6,#0]            ;831
                  |L2.166|
0000a6  e8bd41f0          POP      {r4-r8,lr}            ;833
0000aa  4904              LDR      r1,|L2.188|
0000ac  f7ffbffe          B.W      TEXT_SetText
                  |L2.176|
;;;850    		}break;
;;;851    	}
;;;852    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;853    
                          ENDP

                  |L2.180|
                          DCD      set_sw
                  |L2.184|
                          DCD      ||.data||
                  |L2.188|
                          DCD      set_limit
                  |L2.192|
                          DCD      bit
                  |L2.196|
                          DCD      dot_flag

                          AREA ||i.DISP_POW||, CODE, READONLY, ALIGN=2

                  DISP_POW PROC
;;;582    
;;;583    void DISP_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;584    {
;;;585    	WM_HWIN hItem;
;;;586    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000004  4d40              LDR      r5,|L3.264|
000006  f6400166          MOV      r1,#0x866
00000a  6868              LDR      r0,[r5,#4]  ; hWinWind
00000c  f7fffffe          BL       WM_GetDialogItem
;;;587    	if(set_sw == set_18)
000010  4c3e              LDR      r4,|L3.268|
000012  7821              LDRB     r1,[r4,#0]  ; set_sw
;;;588    	{
;;;589    		 TEXT_SetBkColor(hItem, GUI_BLUE);
000014  f44f067f          MOV      r6,#0xff0000
;;;590    	}else{
;;;591    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000018  f06f4770          MVN      r7,#0xf0000000
00001c  2911              CMP      r1,#0x11              ;587
00001e  d051              BEQ      |L3.196|
000020  4639              MOV      r1,r7
000022  f7fffffe          BL       TEXT_SetBkColor
                  |L3.38|
;;;592    	}
;;;593    	
;;;594    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
000026  f6400167          MOV      r1,#0x867
00002a  6868              LDR      r0,[r5,#4]  ; hWinWind
00002c  f7fffffe          BL       WM_GetDialogItem
;;;595    	if(set_sw == set_19)
000030  7821              LDRB     r1,[r4,#0]  ; set_sw
000032  2912              CMP      r1,#0x12
000034  d04a              BEQ      |L3.204|
;;;596    	{
;;;597    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;598    	}else{
;;;599    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000036  4639              MOV      r1,r7
000038  f7fffffe          BL       TEXT_SetBkColor
                  |L3.60|
;;;600    	}
;;;601    	
;;;602    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00003c  f640112e          MOV      r1,#0x92e
000040  6868              LDR      r0,[r5,#4]  ; hWinWind
000042  f7fffffe          BL       WM_GetDialogItem
;;;603    	if(set_sw == set_89)
000046  7821              LDRB     r1,[r4,#0]  ; set_sw
000048  2958              CMP      r1,#0x58
00004a  d043              BEQ      |L3.212|
;;;604    	{
;;;605    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;606    	}else{
;;;607    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
00004c  4639              MOV      r1,r7
00004e  f7fffffe          BL       TEXT_SetBkColor
                  |L3.82|
;;;608    	}
;;;609    	
;;;610    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000052  f640113a          MOV      r1,#0x93a
000056  6868              LDR      r0,[r5,#4]  ; hWinWind
000058  f7fffffe          BL       WM_GetDialogItem
;;;611    	if(set_sw == set_90)
00005c  7821              LDRB     r1,[r4,#0]  ; set_sw
00005e  2959              CMP      r1,#0x59
000060  d03c              BEQ      |L3.220|
;;;612    	{
;;;613    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;614    	}else{
;;;615    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000062  4639              MOV      r1,r7
000064  f7fffffe          BL       TEXT_SetBkColor
                  |L3.104|
;;;616    	}
;;;617    	
;;;618    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_1);
000068  f6400102          MOV      r1,#0x802
00006c  6868              LDR      r0,[r5,#4]  ; hWinWind
00006e  f7fffffe          BL       WM_GetDialogItem
;;;619    	if(set_sw == set_18)
000072  7821              LDRB     r1,[r4,#0]  ; set_sw
000074  2911              CMP      r1,#0x11
000076  d035              BEQ      |L3.228|
;;;620    	{
;;;621    		 BUTTON_SetPressed(hItem,1);
;;;622    	}else{
;;;623    		 BUTTON_SetPressed(hItem,0);
000078  2100              MOVS     r1,#0
00007a  f7fffffe          BL       BUTTON_SetPressed
                  |L3.126|
;;;624    	}
;;;625    
;;;626    	
;;;627        hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_2);
00007e  f6400103          MOV      r1,#0x803
000082  6868              LDR      r0,[r5,#4]  ; hWinWind
000084  f7fffffe          BL       WM_GetDialogItem
;;;628        if(set_sw == set_19)
000088  7821              LDRB     r1,[r4,#0]  ; set_sw
00008a  2912              CMP      r1,#0x12
00008c  d02e              BEQ      |L3.236|
;;;629    	{
;;;630    		BUTTON_SetPressed(hItem,1);
;;;631    	}else{
;;;632    		BUTTON_SetPressed(hItem,0);
00008e  2100              MOVS     r1,#0
000090  f7fffffe          BL       BUTTON_SetPressed
                  |L3.148|
;;;633    	}
;;;634    
;;;635    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_3);
000094  f6400104          MOV      r1,#0x804
000098  6868              LDR      r0,[r5,#4]  ; hWinWind
00009a  f7fffffe          BL       WM_GetDialogItem
;;;636    	if(set_sw == set_89)
00009e  7821              LDRB     r1,[r4,#0]  ; set_sw
0000a0  2958              CMP      r1,#0x58
0000a2  d027              BEQ      |L3.244|
;;;637    	{
;;;638    		 BUTTON_SetPressed(hItem,1);
;;;639    	}else{
;;;640    		BUTTON_SetPressed(hItem,0);
0000a4  2100              MOVS     r1,#0
0000a6  f7fffffe          BL       BUTTON_SetPressed
                  |L3.170|
;;;641    	}
;;;642    	
;;;643    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_4);
0000aa  f6400105          MOV      r1,#0x805
0000ae  6868              LDR      r0,[r5,#4]  ; hWinWind
0000b0  f7fffffe          BL       WM_GetDialogItem
;;;644    	if(set_sw == set_90)
0000b4  7821              LDRB     r1,[r4,#0]  ; set_sw
0000b6  2959              CMP      r1,#0x59
0000b8  d020              BEQ      |L3.252|
;;;645    	{
;;;646    		 BUTTON_SetPressed(hItem,1);
;;;647    	}else{
;;;648    		BUTTON_SetPressed(hItem,0);
0000ba  e8bd41f0          POP      {r4-r8,lr}
0000be  2100              MOVS     r1,#0
0000c0  f7ffbffe          B.W      BUTTON_SetPressed
                  |L3.196|
0000c4  4631              MOV      r1,r6                 ;589
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  e7ac              B        |L3.38|
                  |L3.204|
0000cc  4631              MOV      r1,r6                 ;597
0000ce  f7fffffe          BL       TEXT_SetBkColor
0000d2  e7b3              B        |L3.60|
                  |L3.212|
0000d4  4631              MOV      r1,r6                 ;605
0000d6  f7fffffe          BL       TEXT_SetBkColor
0000da  e7ba              B        |L3.82|
                  |L3.220|
0000dc  4631              MOV      r1,r6                 ;613
0000de  f7fffffe          BL       TEXT_SetBkColor
0000e2  e7c1              B        |L3.104|
                  |L3.228|
0000e4  2101              MOVS     r1,#1                 ;621
0000e6  f7fffffe          BL       BUTTON_SetPressed
0000ea  e7c8              B        |L3.126|
                  |L3.236|
0000ec  2101              MOVS     r1,#1                 ;630
0000ee  f7fffffe          BL       BUTTON_SetPressed
0000f2  e7cf              B        |L3.148|
                  |L3.244|
0000f4  2101              MOVS     r1,#1                 ;638
0000f6  f7fffffe          BL       BUTTON_SetPressed
0000fa  e7d6              B        |L3.170|
                  |L3.252|
0000fc  e8bd41f0          POP      {r4-r8,lr}            ;646
000100  2101              MOVS     r1,#1                 ;646
000102  f7ffbffe          B.W      BUTTON_SetPressed
;;;649    	}
;;;650    }
;;;651    
                          ENDP

000106  0000              DCW      0x0000
                  |L3.264|
                          DCD      ||.data||
                  |L3.268|
                          DCD      set_sw

                          AREA ||i.INPUT_POW||, CODE, READONLY, ALIGN=2

                  INPUT_POW PROC
;;;856    void INPUT_POW(char* num);            
;;;857    void INPUT_POW(char* num){ 
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;858    	u8 i;
;;;859        switch(set_sw){
000006  4855              LDR      r0,|L4.348|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;860    		case set_18:
;;;861            {
;;;862                WM_HWIN hItem;
;;;863    //            WM_InvalidateWindow(hWinWind);
;;;864                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00000a  4855              LDR      r0,|L4.352|
;;;865    			if(bit < 6)
;;;866    			{
;;;867    				strcat(set_limit,num);
;;;868    			}
;;;869    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4c55              LDR      r4,|L4.356|
00000e  4d56              LDR      r5,|L4.360|
000010  6840              LDR      r0,[r0,#4]            ;864
000012  2a11              CMP      r2,#0x11              ;859
000014  d01d              BEQ      |L4.82|
000016  2a12              CMP      r2,#0x12              ;859
000018  d040              BEQ      |L4.156|
00001a  2a58              CMP      r2,#0x58              ;859
00001c  d063              BEQ      |L4.230|
00001e  2a59              CMP      r2,#0x59              ;859
000020  d17e              BNE      |L4.288|
;;;870    			{
;;;871    				
;;;872    			}else{			
;;;873    				
;;;874    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;875    				{
;;;876    					dot_flag = bit;
;;;877    				}
;;;878    				bit ++;
;;;879    			}
;;;880    			TEXT_SetText(hItem,set_limit);
;;;881    //            switch(bit){
;;;882    //                case 1:
;;;883    //                {
;;;884    //					for(i=0;i<6;i++)
;;;885    //					{
;;;886    //						set_limit[i] = '\0';
;;;887    //					}
;;;888    //                    pow_v = atoi(num) * 100;
;;;889    //                    strcat(set_limit,num);            
;;;890    //                    TEXT_SetText(hItem,set_limit);
;;;891    //                    bit = 2;
;;;892    //                    break;
;;;893    //                }
;;;894    //                case 2:
;;;895    //                {
;;;896    //                    strcat(set_limit,num);
;;;897    //					if(set_limit[bit-1] == 0x62){
;;;898    //						set_limit[bit-1] = '\0';
;;;899    //						set_limit[bit-2] = '\0';
;;;900    //						bit -= 1;
;;;901    //						pow_v = pow_v - atoi(num) * 100;
;;;902    //						TEXT_SetText(hItem,set_limit);
;;;903    //						break;
;;;904    //					}
;;;905    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;906    //                    {
;;;907    //                        dot_flag = 1;
;;;908    //                    }else{
;;;909    //                        pow_v = pow_v * 10 + atoi(num) * 100;
;;;910    //                    }           
;;;911    //                    TEXT_SetText(hItem,set_limit);
;;;912    //                    bit = 3;
;;;913    //                    break;
;;;914    //                }
;;;915    //                case 3:
;;;916    //                {
;;;917    //                    strcat(set_limit,num);
;;;918    //					if(set_limit[bit-1] == 0x62){
;;;919    //						set_limit[bit-1] = '\0';
;;;920    //						set_limit[bit-2] = '\0';
;;;921    //						bit -= 1;
;;;922    //						TEXT_SetText(hItem,set_limit);
;;;923    //						break;
;;;924    //					}
;;;925    //                    if(dot_flag == 0)
;;;926    //                    {
;;;927    //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;928    //                        {                            
;;;929    //                            dot_flag = 2;
;;;930    //                        }else{
;;;931    //                            pow_v = /*3000*/ 6200;
;;;932    //                        }
;;;933    //                    }else{
;;;934    //						pow_v = pow_v + atoi(num) * 10;
;;;935    //                    }
;;;936    //                    TEXT_SetText(hItem,set_limit);                  
;;;937    //                    bit = 4;
;;;938    //                    break;
;;;939    //                }
;;;940    //                case 4:
;;;941    //                {
;;;942    //                    strcat(set_limit,num);
;;;943    //					if(set_limit[bit-1] == 0x62){
;;;944    //						set_limit[bit-1] = '\0';
;;;945    //						set_limit[bit-2] = '\0';
;;;946    //						bit -= 1;
;;;947    //						TEXT_SetText(hItem,set_limit);
;;;948    //						pow_v = pow_v - atoi(num) * 10;
;;;949    //						break;
;;;950    //					}
;;;951    //                    if(dot_flag == 0)
;;;952    //                    {
;;;953    //                        pow_v = /*3000*/ 6200;
;;;954    //                    }else if(dot_flag == 2){
;;;955    //                        pow_v = pow_v + atoi(num) * 10;
;;;956    //                    }else{
;;;957    //                        pow_v = pow_v + atoi(num);
;;;958    //                    }
;;;959    //                    TEXT_SetText(hItem,set_limit);                   
;;;960    //                    bit = 5;
;;;961    //                    break;
;;;962    //                }
;;;963    //                case 5:
;;;964    //                {
;;;965    //                    strcat(set_limit,num);
;;;966    //					if(set_limit[bit-1] == 0x62){
;;;967    //						set_limit[bit-1] = '\0';
;;;968    //						set_limit[bit-2] = '\0';
;;;969    //						bit -= 1;
;;;970    //						TEXT_SetText(hItem,set_limit);
;;;971    //						break;
;;;972    //					}
;;;973    //                    if(dot_flag == 0)
;;;974    //                    {
;;;975    //                        pow_v = /*3000*/ 6200;
;;;976    //                    }else if(dot_flag == 1){
;;;977    //                        pow_v = pow_v;
;;;978    //                    }else{
;;;979    //                        pow_v = pow_v + atoi(num);
;;;980    //                    }
;;;981    //                    TEXT_SetText(hItem,set_limit);                   
;;;982    //                    bit = 1;
;;;983    //                    break;
;;;984    //                }
;;;985    //            }
;;;986                break;
;;;987            }
;;;988            case set_19:
;;;989            {
;;;990                WM_HWIN hItem;
;;;991    //            WM_InvalidateWindow(hWinWind);
;;;992                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;993    			if(bit < 7)
;;;994    			{
;;;995    				strcat(set_limit,num);
;;;996    			}
;;;997    			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;998    			{
;;;999    				
;;;1000   			}else{			
;;;1001   				
;;;1002   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1003   				{
;;;1004   					dot_flag = bit;
;;;1005   				}
;;;1006   				bit ++;
;;;1007   			}
;;;1008   			TEXT_SetText(hItem,set_limit);
;;;1009   //            switch(bit){
;;;1010   //                case 1:
;;;1011   //                {
;;;1012   //					for(i=0;i<6;i++)
;;;1013   //					{
;;;1014   //						set_limit[i] = '\0';
;;;1015   //					}
;;;1016   //                    pow_c = atoi(num) * 1000;
;;;1017   //                    strcat(set_limit,num);            
;;;1018   //                    TEXT_SetText(hItem,set_limit);
;;;1019   //                    bit = 2;
;;;1020   //                    break;
;;;1021   //                }
;;;1022   //                case 2:
;;;1023   //                {
;;;1024   //                    strcat(set_limit,num);            
;;;1025   //                    TEXT_SetText(hItem,set_limit);
;;;1026   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1027   //                    {
;;;1028   //                        dot_flag = 1;
;;;1029   //                    }else{
;;;1030   //                        pow_c = pow_c * 10 + atoi(num) * 1000;
;;;1031   //                    }
;;;1032   //                    bit = 3;
;;;1033   //                    break;
;;;1034   //                }
;;;1035   //                case 3:
;;;1036   //                {
;;;1037   //                    strcat(set_limit,num);
;;;1038   //                    TEXT_SetText(hItem,set_limit);
;;;1039   //                    if(dot_flag == 0)
;;;1040   //                    {
;;;1041   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1042   //                        {                            
;;;1043   //                            dot_flag = 2;
;;;1044   //                        }else{
;;;1045   //                            pow_c = 5000;
;;;1046   //                        }
;;;1047   //                    }else{
;;;1048   //                        pow_c = pow_c + atoi(num) * 100;
;;;1049   //                    }
;;;1050   //                                       
;;;1051   //                    bit = 4;
;;;1052   //                    break;
;;;1053   //                }
;;;1054   //                case 4:
;;;1055   //                {
;;;1056   //                    strcat(set_limit,num);
;;;1057   //                    TEXT_SetText(hItem,set_limit);
;;;1058   //                    if(dot_flag == 0)
;;;1059   //                    {
;;;1060   //                        pow_c = 5000;
;;;1061   //                    }else if(dot_flag == 2){
;;;1062   //                        pow_c = pow_c + atoi(num) * 100;
;;;1063   //                    }else{
;;;1064   //                        pow_c = pow_c + atoi(num) * 10;
;;;1065   //                    }
;;;1066   //                                       
;;;1067   //                    bit = 5;
;;;1068   //                    break;
;;;1069   //                }
;;;1070   //                case 5:
;;;1071   //                {
;;;1072   //                    strcat(set_limit,num);
;;;1073   //                    TEXT_SetText(hItem,set_limit);
;;;1074   //                    if(dot_flag == 0)
;;;1075   //                    {
;;;1076   //                        pow_c = 5000;
;;;1077   //                    }else if(dot_flag == 1){
;;;1078   //                        pow_c = pow_c + atoi(num);
;;;1079   //                    }else{
;;;1080   //                        pow_c = pow_c + atoi(num) * 10;
;;;1081   //                    }
;;;1082   //                                       
;;;1083   //                    bit = 6;
;;;1084   //                    break;
;;;1085   //                }
;;;1086   //                case 6:
;;;1087   //                {
;;;1088   //                    strcat(set_limit,num);
;;;1089   //                    TEXT_SetText(hItem,set_limit);
;;;1090   //                    if(dot_flag == 0)
;;;1091   //                    {
;;;1092   //                        pow_c = 0;
;;;1093   //                    }else if(dot_flag == 2){
;;;1094   //                        pow_c = pow_c + atoi(num);
;;;1095   //                    }                 
;;;1096   //                    bit = 1;
;;;1097   //                    break;
;;;1098   //                }
;;;1099   //            }
;;;1100           }
;;;1101           break;
;;;1102   		case set_89:
;;;1103           {
;;;1104               WM_HWIN hItem;
;;;1105   //            WM_InvalidateWindow(hWinWind);
;;;1106               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;1107   			if(bit < 7)
;;;1108   			{
;;;1109   				strcat(set_limit,num);
;;;1110   			}
;;;1111   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1112   			{
;;;1113   				
;;;1114   			}else{			
;;;1115   				
;;;1116   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1117   				{
;;;1118   					dot_flag = bit;
;;;1119   				}
;;;1120   				bit ++;
;;;1121   			}
;;;1122   			TEXT_SetText(hItem,set_limit);
;;;1123   //            switch(bit){
;;;1124   //                case 1:
;;;1125   //                {
;;;1126   //					for(i=0;i<6;i++)
;;;1127   //					{
;;;1128   //						set_limit[i] = '\0';
;;;1129   //					}
;;;1130   //                    set_pow_cutoffc = atoi(num) * 1000;
;;;1131   //                    strcat(set_limit,num);            
;;;1132   //                    TEXT_SetText(hItem,set_limit);
;;;1133   //                    bit = 2;
;;;1134   //                    break;
;;;1135   //                }
;;;1136   //                case 2:
;;;1137   //                {
;;;1138   //                    strcat(set_limit,num);            
;;;1139   //                    TEXT_SetText(hItem,set_limit);
;;;1140   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1141   //                    {
;;;1142   //                        dot_flag = 1;
;;;1143   //                    }else{
;;;1144   //                        set_pow_cutoffc = set_pow_cutoffc * 10 + atoi(num) * 1000;
;;;1145   //                    }
;;;1146   //                    bit = 3;
;;;1147   //                    break;
;;;1148   //                }
;;;1149   //                case 3:
;;;1150   //                {
;;;1151   //                    strcat(set_limit,num);
;;;1152   //                    TEXT_SetText(hItem,set_limit);
;;;1153   //                    if(dot_flag == 0)
;;;1154   //                    {
;;;1155   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1156   //                        {                            
;;;1157   //                            dot_flag = 2;
;;;1158   //                        }else{
;;;1159   //                            set_pow_cutoffc = 5000;
;;;1160   //                        }
;;;1161   //                    }else{
;;;1162   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1163   //                    }
;;;1164   //                                       
;;;1165   //                    bit = 4;
;;;1166   //                    break;
;;;1167   //                }
;;;1168   //                case 4:
;;;1169   //                {
;;;1170   //                    strcat(set_limit,num);
;;;1171   //                    TEXT_SetText(hItem,set_limit);
;;;1172   //                    if(dot_flag == 0)
;;;1173   //                    {
;;;1174   //                        set_pow_cutoffc = 5000;
;;;1175   //                    }else if(dot_flag == 2){
;;;1176   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1177   //                    }else{
;;;1178   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1179   //                    }
;;;1180   //                                       
;;;1181   //                    bit = 5;
;;;1182   //                    break;
;;;1183   //                }
;;;1184   //                case 5:
;;;1185   //                {
;;;1186   //                    strcat(set_limit,num);
;;;1187   //                    TEXT_SetText(hItem,set_limit);
;;;1188   //                    if(dot_flag == 0)
;;;1189   //                    {
;;;1190   //                        set_pow_cutoffc = 5000;
;;;1191   //                    }else if(dot_flag == 1){
;;;1192   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1193   //                    }else{
;;;1194   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1195   //                    }
;;;1196   //                                       
;;;1197   //                    bit = 6;
;;;1198   //                    break;
;;;1199   //                }
;;;1200   //                case 6:
;;;1201   //                {
;;;1202   //                    strcat(set_limit,num);
;;;1203   //                    TEXT_SetText(hItem,set_limit);
;;;1204   //                    if(dot_flag == 0)
;;;1205   //                    {
;;;1206   //                        set_pow_cutoffc = 0;
;;;1207   //                    }else if(dot_flag == 2){
;;;1208   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1209   //                    }                 
;;;1210   //                    bit = 1;
;;;1211   //                    break;
;;;1212   //                }
;;;1213   //            }
;;;1214           }
;;;1215           break;
;;;1216   		case set_90:
;;;1217           {
;;;1218               WM_HWIN hItem;
;;;1219   //            WM_InvalidateWindow(hWinWind);
;;;1220               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000022  f640113a          MOV      r1,#0x93a
000026  f7fffffe          BL       WM_GetDialogItem
00002a  4607              MOV      r7,r0
;;;1221   			if(bit < 7)
00002c  7828              LDRB     r0,[r5,#0]  ; bit
00002e  2807              CMP      r0,#7
000030  d203              BCS      |L4.58|
;;;1222   			{
;;;1223   				strcat(set_limit,num);
000032  4631              MOV      r1,r6
000034  484d              LDR      r0,|L4.364|
000036  f7fffffe          BL       strcat
                  |L4.58|
;;;1224   			}
;;;1225   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003a  7820              LDRB     r0,[r4,#0]  ; dot_flag
00003c  b128              CBZ      r0,|L4.74|
00003e  a14c              ADR      r1,|L4.368|
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       strcmp
000046  2800              CMP      r0,#0
000048  d06b              BEQ      |L4.290|
                  |L4.74|
;;;1226   			{
;;;1227   				
;;;1228   			}else{			
;;;1229   				
;;;1230   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004a  7820              LDRB     r0,[r4,#0]  ; dot_flag
00004c  2800              CMP      r0,#0
00004e  d073              BEQ      |L4.312|
000050  e079              B        |L4.326|
                  |L4.82|
000052  f6400166          MOV      r1,#0x866             ;864
000056  f7fffffe          BL       WM_GetDialogItem
00005a  4607              MOV      r7,r0                 ;864
00005c  7828              LDRB     r0,[r5,#0]            ;865  ; bit
00005e  2806              CMP      r0,#6                 ;865
000060  d203              BCS      |L4.106|
000062  4631              MOV      r1,r6                 ;867
000064  4841              LDR      r0,|L4.364|
000066  f7fffffe          BL       strcat
                  |L4.106|
00006a  7820              LDRB     r0,[r4,#0]            ;869  ; dot_flag
00006c  b120              CBZ      r0,|L4.120|
00006e  a140              ADR      r1,|L4.368|
000070  4630              MOV      r0,r6                 ;869
000072  f7fffffe          BL       strcmp
000076  b158              CBZ      r0,|L4.144|
                  |L4.120|
000078  7820              LDRB     r0,[r4,#0]            ;874  ; dot_flag
00007a  b930              CBNZ     r0,|L4.138|
00007c  a13c              ADR      r1,|L4.368|
00007e  4630              MOV      r0,r6                 ;874
000080  f7fffffe          BL       strcmp
000084  b908              CBNZ     r0,|L4.138|
000086  7828              LDRB     r0,[r5,#0]            ;876  ; bit
000088  7020              STRB     r0,[r4,#0]            ;876
                  |L4.138|
00008a  7828              LDRB     r0,[r5,#0]            ;878  ; bit
00008c  1c40              ADDS     r0,r0,#1              ;878
00008e  7028              STRB     r0,[r5,#0]            ;878
                  |L4.144|
000090  4638              MOV      r0,r7                 ;880
000092  e8bd41f0          POP      {r4-r8,lr}            ;880
000096  4935              LDR      r1,|L4.364|
000098  f7ffbffe          B.W      TEXT_SetText
                  |L4.156|
00009c  f6400167          MOV      r1,#0x867             ;992
0000a0  f7fffffe          BL       WM_GetDialogItem
0000a4  4607              MOV      r7,r0                 ;992
0000a6  7828              LDRB     r0,[r5,#0]            ;993  ; bit
0000a8  2807              CMP      r0,#7                 ;993
0000aa  d203              BCS      |L4.180|
0000ac  4631              MOV      r1,r6                 ;995
0000ae  482f              LDR      r0,|L4.364|
0000b0  f7fffffe          BL       strcat
                  |L4.180|
0000b4  7820              LDRB     r0,[r4,#0]            ;997  ; dot_flag
0000b6  b120              CBZ      r0,|L4.194|
0000b8  a12d              ADR      r1,|L4.368|
0000ba  4630              MOV      r0,r6                 ;997
0000bc  f7fffffe          BL       strcmp
0000c0  b158              CBZ      r0,|L4.218|
                  |L4.194|
0000c2  7820              LDRB     r0,[r4,#0]            ;1002  ; dot_flag
0000c4  b930              CBNZ     r0,|L4.212|
0000c6  a12a              ADR      r1,|L4.368|
0000c8  4630              MOV      r0,r6                 ;1002
0000ca  f7fffffe          BL       strcmp
0000ce  b908              CBNZ     r0,|L4.212|
0000d0  7828              LDRB     r0,[r5,#0]            ;1004  ; bit
0000d2  7020              STRB     r0,[r4,#0]            ;1004
                  |L4.212|
0000d4  7828              LDRB     r0,[r5,#0]            ;1006  ; bit
0000d6  1c40              ADDS     r0,r0,#1              ;1006
0000d8  7028              STRB     r0,[r5,#0]            ;1006
                  |L4.218|
0000da  4638              MOV      r0,r7                 ;1008
0000dc  e8bd41f0          POP      {r4-r8,lr}            ;1008
0000e0  4922              LDR      r1,|L4.364|
0000e2  f7ffbffe          B.W      TEXT_SetText
                  |L4.230|
0000e6  f640112e          MOV      r1,#0x92e             ;1106
0000ea  f7fffffe          BL       WM_GetDialogItem
0000ee  4607              MOV      r7,r0                 ;1106
0000f0  7828              LDRB     r0,[r5,#0]            ;1107  ; bit
0000f2  2807              CMP      r0,#7                 ;1107
0000f4  d203              BCS      |L4.254|
0000f6  4631              MOV      r1,r6                 ;1109
0000f8  481c              LDR      r0,|L4.364|
0000fa  f7fffffe          BL       strcat
                  |L4.254|
0000fe  7820              LDRB     r0,[r4,#0]            ;1111  ; dot_flag
000100  b120              CBZ      r0,|L4.268|
000102  a11b              ADR      r1,|L4.368|
000104  4630              MOV      r0,r6                 ;1111
000106  f7fffffe          BL       strcmp
00010a  b178              CBZ      r0,|L4.300|
                  |L4.268|
00010c  7820              LDRB     r0,[r4,#0]            ;1116  ; dot_flag
00010e  b930              CBNZ     r0,|L4.286|
000110  a117              ADR      r1,|L4.368|
000112  4630              MOV      r0,r6                 ;1116
000114  f7fffffe          BL       strcmp
000118  b908              CBNZ     r0,|L4.286|
00011a  7828              LDRB     r0,[r5,#0]            ;1118  ; bit
00011c  7020              STRB     r0,[r4,#0]            ;1118
                  |L4.286|
00011e  e002              B        |L4.294|
                  |L4.288|
000120  e01a              B        |L4.344|
                  |L4.290|
000122  e013              B        |L4.332|
000124  e008              B        |L4.312|
                  |L4.294|
000126  7828              LDRB     r0,[r5,#0]            ;1120  ; bit
000128  1c40              ADDS     r0,r0,#1              ;1120
00012a  7028              STRB     r0,[r5,#0]            ;1120
                  |L4.300|
00012c  4638              MOV      r0,r7                 ;1122
00012e  e8bd41f0          POP      {r4-r8,lr}            ;1122
000132  490e              LDR      r1,|L4.364|
000134  f7ffbffe          B.W      TEXT_SetText
                  |L4.312|
000138  a10d              ADR      r1,|L4.368|
00013a  4630              MOV      r0,r6
00013c  f7fffffe          BL       strcmp
000140  b908              CBNZ     r0,|L4.326|
;;;1231   				{
;;;1232   					dot_flag = bit;
000142  7828              LDRB     r0,[r5,#0]  ; bit
000144  7020              STRB     r0,[r4,#0]
                  |L4.326|
;;;1233   				}
;;;1234   				bit ++;
000146  7828              LDRB     r0,[r5,#0]  ; bit
000148  1c40              ADDS     r0,r0,#1
00014a  7028              STRB     r0,[r5,#0]
                  |L4.332|
;;;1235   			}
;;;1236   			TEXT_SetText(hItem,set_limit);			
00014c  4638              MOV      r0,r7
00014e  e8bd41f0          POP      {r4-r8,lr}
000152  4906              LDR      r1,|L4.364|
000154  f7ffbffe          B.W      TEXT_SetText
                  |L4.344|
;;;1237   		}
;;;1238       }    
;;;1239   }
000158  e8bd81f0          POP      {r4-r8,pc}
;;;1240   
                          ENDP

                  |L4.348|
                          DCD      set_sw
                  |L4.352|
                          DCD      ||.data||
                  |L4.356|
                          DCD      dot_flag
                  |L4.360|
                          DCD      bit
                  |L4.364|
                          DCD      set_limit
                  |L4.368|
000170  2e00              DCB      ".",0
000172  00                DCB      0
000173  00                DCB      0

                          AREA ||i.MENU_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  MENU_SET PROC
;;;653    void MENU_SET(void);
;;;654    void MENU_SET(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;655    {
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;656        vu8 i;
;;;657        char buf[6];    
;;;658    
;;;659        float dis_output_v;
;;;660        float dis_output_c; 
;;;661        
;;;662        if(SET_Voltage > /*3000*/ 6000)
00000a  4dd7              LDR      r5,|L5.872|
00000c  6869              LDR      r1,[r5,#4]  ; Run_Control
00000e  f2417070          MOV      r0,#0x1770
000012  4281              CMP      r1,r0
000014  d900              BLS      |L5.24|
;;;663        {
;;;664          SET_Voltage = /*3000*/ 6000;
000016  6068              STR      r0,[r5,#4]  ; Run_Control
                  |L5.24|
;;;665        }
;;;666        if(SET_Current > 5000)
000018  68a8              LDR      r0,[r5,#8]  ; Run_Control
00001a  f2413a88          MOV      r10,#0x1388
00001e  4550              CMP      r0,r10
000020  d901              BLS      |L5.38|
;;;667        {
;;;668          SET_Current = 5000;
000022  f8c5a008          STR      r10,[r5,#8]  ; Run_Control
                  |L5.38|
;;;669        }
;;;670        switch(set_sw){
000026  48d1              LDR      r0,|L5.876|
000028  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;671    
;;;672            case set_18:
;;;673            {           
;;;674                WM_HWIN hItem;
;;;675    //            WM_InvalidateWindow(hWinWind);
;;;676                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00002a  4ad3              LDR      r2,|L5.888|
;;;677    			if(dot_flag == 0){
;;;678    				pow_v = atoi(set_limit)*100;					
00002c  4ed0              LDR      r6,|L5.880|
;;;679    			}else if(dot_flag != 0){
;;;680    				memset(buf, '\0', sizeof(buf));
;;;681    				strncpy(buf,set_limit,dot_flag + 2);
;;;682    				pow_v = atof(buf)*100;
;;;683    			}
;;;684    			if(pow_v > set_max_v)
;;;685    			{
;;;686    				pow_v = set_max_v;
;;;687    			}
;;;688                SET_Voltage = pow_v;
;;;689                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;690                {
;;;691                    SET_Voltage = 0;
;;;692                }
;;;693    			SET_Voltage_Laod = SET_Voltage * 10 +10;
;;;694                dis_output_v = (float)SET_Voltage/100;
;;;695                
;;;696                sprintf(buf,"%.2f",dis_output_v);
;;;697                TEXT_SetText(hItem,buf);
;;;698                
;;;699                                                                         
;;;700                                
;;;701                Write_Limits();
;;;702                bit = 1;
00002e  2701              MOVS     r7,#1
000030  f8df8340          LDR      r8,|L5.884|
000034  2400              MOVS     r4,#0                 ;676
000036  f8df9344          LDR      r9,|L5.892|
00003a  6850              LDR      r0,[r2,#4]            ;670
00003c  f04f0b64          MOV      r11,#0x64             ;689
000040  2911              CMP      r1,#0x11              ;670
000042  d05f              BEQ      |L5.260|
;;;703                dot_flag = 0;
;;;704    			memset(set_limit, '\0', sizeof(set_limit));
;;;705                break; 
;;;706             }
;;;707             case set_19:
;;;708             {           
;;;709                WM_HWIN hItem;
;;;710    //            WM_InvalidateWindow(hWinWind);
;;;711                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;712    			if(dot_flag == 0){
;;;713    				pow_c = atoi(set_limit)*1000;					
;;;714    			}else if(dot_flag != 0){
;;;715    				memset(buf, '\0', sizeof(buf));
;;;716    				strncpy(buf,set_limit,dot_flag + 3);
;;;717    				pow_c = atof(buf)*1000;
000044  ed9f8bce          VLDR     d8,|L5.896|
;;;718    			}
;;;719                  
;;;720                if(pow_c > set_max_c)
;;;721                {
;;;722                    pow_c = set_max_c;               
;;;723                }
;;;724    			SET_Current = pow_c;
;;;725                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;726                {
;;;727                    SET_Current = 0;
;;;728                }
;;;729                dis_output_c = (float)SET_Current/1000;
000048  ed9f9acf          VLDR     s18,|L5.904|
00004c  2912              CMP      r1,#0x12              ;670
00004e  d07d              BEQ      |L5.332|
;;;730                sprintf(buf,"%.3f",dis_output_c);
;;;731                TEXT_SetText(hItem,buf);            
;;;732                       
;;;733                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;734                                                     
;;;735                Write_Limits();
;;;736                bit = 1;
;;;737                dot_flag = 0;
;;;738    			memset(set_limit, '\0', sizeof(set_limit));
;;;739                break; 
;;;740             }
;;;741             case set_89:
;;;742             {           
;;;743                WM_HWIN hItem;
;;;744    //            WM_InvalidateWindow(hWinWind);
;;;745                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;746    			if(dot_flag == 0){
;;;747    				set_load_cutoffv = atoi(set_limit)*1000;					
000050  4dce              LDR      r5,|L5.908|
000052  2958              CMP      r1,#0x58              ;670
000054  d07b              BEQ      |L5.334|
000056  2959              CMP      r1,#0x59              ;670
000058  d14f              BNE      |L5.250|
;;;748    			}else if(dot_flag != 0){
;;;749    				memset(buf, '\0', sizeof(buf));
;;;750    				strncpy(buf,set_limit,dot_flag + 3);
;;;751    				set_load_cutoffv = atof(buf)*1000;
;;;752    			}
;;;753                if(set_load_cutoffv > 60000)
;;;754                {
;;;755                    set_load_cutoffv = 60000;               
;;;756                }
;;;757                load_cutoffv = (float)set_load_cutoffv/1000;
;;;758                sprintf(buf,"%.3f",load_cutoffv);
;;;759                TEXT_SetText(hItem,buf);            
;;;760                                                     
;;;761                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
;;;762                bit = 1;
;;;763                dot_flag = 0;
;;;764    			memset(set_limit, '\0', sizeof(set_limit));
;;;765                break; 
;;;766             }
;;;767    		 case set_90:
;;;768             {           
;;;769                WM_HWIN hItem;
;;;770    //            WM_InvalidateWindow(hWinWind);
;;;771                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
00005a  f640113a          MOV      r1,#0x93a
00005e  4693              MOV      r11,r2
000060  f7fffffe          BL       WM_GetDialogItem
000064  9000              STR      r0,[sp,#0]
;;;772    			if(dot_flag == 0){
000066  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
00006a  2800              CMP      r0,#0
00006c  d070              BEQ      |L5.336|
;;;773    				set_pow_cutoffc = atoi(set_limit)*1000;					
;;;774    			}else if(dot_flag != 0){
00006e  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
000072  b1a0              CBZ      r0,|L5.158|
;;;775    				memset(buf, '\0', sizeof(buf));
000074  9401              STR      r4,[sp,#4]
000076  9402              STR      r4,[sp,#8]
;;;776    				strncpy(buf,set_limit,dot_flag + 3);
000078  f8992000          LDRB     r2,[r9,#0]  ; dot_flag
00007c  4631              MOV      r1,r6
00007e  1cd2              ADDS     r2,r2,#3
000080  a801              ADD      r0,sp,#4
000082  f7fffffe          BL       strncpy
;;;777    				set_pow_cutoffc = atof(buf)*1000;
000086  a801              ADD      r0,sp,#4
000088  f7fffffe          BL       __hardfp_atof
00008c  ec532b18          VMOV     r2,r3,d8
000090  ec510b10          VMOV     r0,r1,d0
000094  f7fffffe          BL       __aeabi_dmul
000098  f7fffffe          BL       __aeabi_d2iz
00009c  6168              STR      r0,[r5,#0x14]  ; InFlashSave
                  |L5.158|
;;;778    			}
;;;779                  
;;;780                if(set_pow_cutoffc > 5000)
00009e  6968              LDR      r0,[r5,#0x14]  ; InFlashSave
0000a0  4550              CMP      r0,r10
0000a2  dd01              BLE      |L5.168|
;;;781                {
;;;782                    set_pow_cutoffc = 5000;               
0000a4  f8c5a014          STR      r10,[r5,#0x14]  ; InFlashSave
                  |L5.168|
;;;783                }
;;;784    
;;;785                pow_cutoffc = (float)set_pow_cutoffc/1000;
0000a8  ed950a05          VLDR     s0,[r5,#0x14]
0000ac  eef80ac0          VCVT.F32.S32 s1,s0
0000b0  ee800a89          VDIV.F32 s0,s1,s18
0000b4  ed8b0a02          VSTR     s0,[r11,#8]
;;;786                sprintf(buf,"%.3f",pow_cutoffc);
0000b8  ee100a10          VMOV     r0,s0
0000bc  f7fffffe          BL       __aeabi_f2d
0000c0  ec410b10          VMOV     d0,r0,r1
0000c4  a1b2              ADR      r1,|L5.912|
0000c6  ec532b10          VMOV     r2,r3,d0
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       __2sprintf
;;;787                TEXT_SetText(hItem,buf);            
0000d0  a901              ADD      r1,sp,#4
0000d2  9800              LDR      r0,[sp,#0]
0000d4  f7fffffe          BL       TEXT_SetText
;;;788                       
;;;789                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
0000d8  f640013e          MOV      r1,#0x83e
0000dc  f8db0004          LDR      r0,[r11,#4]  ; hWinWind
0000e0  f7fffffe          BL       WM_GetDialogItem
;;;790                                                     
;;;791                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
0000e4  4aa9              LDR      r2,|L5.908|
0000e6  2128              MOVS     r1,#0x28
0000e8  48ab              LDR      r0,|L5.920|
0000ea  f7fffffe          BL       Flash_Write32BitDatas
;;;792                bit = 1;
0000ee  f8887000          STRB     r7,[r8,#0]
;;;793                dot_flag = 0;
0000f2  f8894000          STRB     r4,[r9,#0]
;;;794    			memset(set_limit, '\0', sizeof(set_limit));
0000f6  6034              STR      r4,[r6,#0]  ; set_limit
0000f8  7134              STRB     r4,[r6,#4]
                  |L5.250|
;;;795                break; 
;;;796             }
;;;797             default:break;
;;;798         }
;;;799    }
0000fa  b003              ADD      sp,sp,#0xc
0000fc  ecbd8b04          VPOP     {d8-d9}
000100  e8bd8ff0          POP      {r4-r11,pc}
                  |L5.260|
000104  f6400166          MOV      r1,#0x866             ;676
000108  f7fffffe          BL       WM_GetDialogItem
00010c  4682              MOV      r10,r0                ;676
00010e  f8990000          LDRB     r0,[r9,#0]            ;677  ; dot_flag
000112  b3e8              CBZ      r0,|L5.400|
000114  f8990000          LDRB     r0,[r9,#0]            ;679  ; dot_flag
000118  b1b8              CBZ      r0,|L5.330|
00011a  9401              STR      r4,[sp,#4]            ;680
00011c  9402              STR      r4,[sp,#8]            ;680
00011e  f8992000          LDRB     r2,[r9,#0]            ;681  ; dot_flag
000122  4993              LDR      r1,|L5.880|
000124  1c92              ADDS     r2,r2,#2              ;681
000126  a801              ADD      r0,sp,#4              ;681
000128  f7fffffe          BL       strncpy
00012c  a801              ADD      r0,sp,#4              ;682
00012e  f7fffffe          BL       __hardfp_atof
000132  ed9f1b9a          VLDR     d1,|L5.924|
000136  ec510b10          VMOV     r0,r1,d0              ;682
00013a  ec532b11          VMOV     r2,r3,d1              ;682
00013e  f7fffffe          BL       __aeabi_dmul
000142  f7fffffe          BL       __aeabi_d2uiz
000146  f8c50098          STR      r0,[r5,#0x98]         ;682  ; Run_Control
                  |L5.330|
00014a  e002              B        |L5.338|
                  |L5.332|
00014c  e048              B        |L5.480|
                  |L5.334|
00014e  e0ae              B        |L5.686|
                  |L5.336|
000150  e102              B        |L5.856|
                  |L5.338|
000152  f8d50098          LDR      r0,[r5,#0x98]         ;684  ; Run_Control
000156  6ba9              LDR      r1,[r5,#0x38]         ;684  ; Run_Control
000158  4288              CMP      r0,r1                 ;684
00015a  d902              BLS      |L5.354|
00015c  6ba8              LDR      r0,[r5,#0x38]         ;686  ; Run_Control
00015e  f8c50098          STR      r0,[r5,#0x98]         ;686  ; Run_Control
                  |L5.354|
000162  f8d50098          LDR      r0,[r5,#0x98]         ;688  ; Run_Control
000166  6068              STR      r0,[r5,#4]            ;688  ; Run_Control
000168  6868              LDR      r0,[r5,#4]            ;689  ; Run_Control
00016a  68a9              LDR      r1,[r5,#8]            ;689  ; Run_Control
00016c  fbb0f0fb          UDIV     r0,r0,r11             ;689
000170  4348              MULS     r0,r1,r0              ;689
000172  498c              LDR      r1,|L5.932|
000174  4288              CMP      r0,r1                 ;689
000176  d900              BLS      |L5.378|
000178  606c              STR      r4,[r5,#4]            ;691  ; Run_Control
                  |L5.378|
00017a  6868              LDR      r0,[r5,#4]            ;693  ; Run_Control
00017c  210a              MOVS     r1,#0xa               ;693
00017e  eb000080          ADD      r0,r0,r0,LSL #2       ;693
000182  eb010040          ADD      r0,r1,r0,LSL #1       ;693
000186  60e8              STR      r0,[r5,#0xc]          ;693  ; Run_Control
000188  6868              LDR      r0,[r5,#4]            ;694  ; Run_Control
00018a  ee000a10          VMOV     s0,r0                 ;694
00018e  e000              B        |L5.402|
                  |L5.400|
000190  e01e              B        |L5.464|
                  |L5.402|
000192  eef80a40          VCVT.F32.U32 s1,s0                 ;694
000196  ed9f1a84          VLDR     s2,|L5.936|
00019a  ee800a81          VDIV.F32 s0,s1,s2              ;694
00019e  ee100a10          VMOV     r0,s0                 ;696
0001a2  f7fffffe          BL       __aeabi_f2d
0001a6  ec410b10          VMOV     d0,r0,r1              ;696
0001aa  a180              ADR      r1,|L5.940|
0001ac  ec532b10          VMOV     r2,r3,d0              ;696
0001b0  a801              ADD      r0,sp,#4              ;696
0001b2  f7fffffe          BL       __2sprintf
0001b6  a901              ADD      r1,sp,#4              ;697
0001b8  4650              MOV      r0,r10                ;697
0001ba  f7fffffe          BL       TEXT_SetText
0001be  f7fffffe          BL       Write_Limits
0001c2  f8887000          STRB     r7,[r8,#0]            ;702
0001c6  f8894000          STRB     r4,[r9,#0]            ;703
0001ca  6034              STR      r4,[r6,#0]            ;704  ; set_limit
0001cc  7134              STRB     r4,[r6,#4]            ;704
0001ce  e794              B        |L5.250|
                  |L5.464|
0001d0  4867              LDR      r0,|L5.880|
0001d2  f7fffffe          BL       atoi
0001d6  2164              MOVS     r1,#0x64              ;678
0001d8  4348              MULS     r0,r1,r0              ;678
0001da  f8c50098          STR      r0,[r5,#0x98]         ;678  ; Run_Control
0001de  e7b4              B        |L5.330|
                  |L5.480|
0001e0  f6400167          MOV      r1,#0x867             ;711
0001e4  4692              MOV      r10,r2                ;711
0001e6  f7fffffe          BL       WM_GetDialogItem
0001ea  9000              STR      r0,[sp,#0]            ;711
0001ec  f8990000          LDRB     r0,[r9,#0]            ;712  ; dot_flag
0001f0  b3f0              CBZ      r0,|L5.624|
0001f2  f8990000          LDRB     r0,[r9,#0]            ;714  ; dot_flag
0001f6  b1a8              CBZ      r0,|L5.548|
0001f8  9401              STR      r4,[sp,#4]            ;715
0001fa  9402              STR      r4,[sp,#8]            ;715
0001fc  f8992000          LDRB     r2,[r9,#0]            ;716  ; dot_flag
000200  495b              LDR      r1,|L5.880|
000202  1cd2              ADDS     r2,r2,#3              ;716
000204  a801              ADD      r0,sp,#4              ;716
000206  f7fffffe          BL       strncpy
00020a  a801              ADD      r0,sp,#4              ;717
00020c  f7fffffe          BL       __hardfp_atof
000210  ec532b18          VMOV     r2,r3,d8              ;717
000214  ec510b10          VMOV     r0,r1,d0              ;717
000218  f7fffffe          BL       __aeabi_dmul
00021c  f7fffffe          BL       __aeabi_d2uiz
000220  f8c500a0          STR      r0,[r5,#0xa0]         ;717  ; Run_Control
                  |L5.548|
000224  f8d500a0          LDR      r0,[r5,#0xa0]         ;720  ; Run_Control
000228  6ca9              LDR      r1,[r5,#0x48]         ;720  ; Run_Control
00022a  4288              CMP      r0,r1                 ;720
00022c  d902              BLS      |L5.564|
00022e  6ca8              LDR      r0,[r5,#0x48]         ;722  ; Run_Control
000230  f8c500a0          STR      r0,[r5,#0xa0]         ;722  ; Run_Control
                  |L5.564|
000234  f8d500a0          LDR      r0,[r5,#0xa0]         ;724  ; Run_Control
000238  60a8              STR      r0,[r5,#8]            ;724  ; Run_Control
00023a  6868              LDR      r0,[r5,#4]            ;725  ; Run_Control
00023c  68a9              LDR      r1,[r5,#8]            ;725  ; Run_Control
00023e  fbb0f0fb          UDIV     r0,r0,r11             ;725
000242  4348              MULS     r0,r1,r0              ;725
000244  4957              LDR      r1,|L5.932|
000246  4288              CMP      r0,r1                 ;725
000248  d900              BLS      |L5.588|
00024a  60ac              STR      r4,[r5,#8]            ;727  ; Run_Control
                  |L5.588|
00024c  68a8              LDR      r0,[r5,#8]            ;729  ; Run_Control
00024e  ee000a10          VMOV     s0,r0                 ;729
000252  eef80a40          VCVT.F32.U32 s1,s0                 ;729
000256  ee800a89          VDIV.F32 s0,s1,s18             ;729
00025a  ee100a10          VMOV     r0,s0                 ;730
00025e  f7fffffe          BL       __aeabi_f2d
000262  ec410b10          VMOV     d0,r0,r1              ;730
000266  a14a              ADR      r1,|L5.912|
000268  ec532b10          VMOV     r2,r3,d0              ;730
00026c  a801              ADD      r0,sp,#4              ;730
00026e  e000              B        |L5.626|
                  |L5.624|
000270  e014              B        |L5.668|
                  |L5.626|
000272  f7fffffe          BL       __2sprintf
000276  a901              ADD      r1,sp,#4              ;731
000278  9800              LDR      r0,[sp,#0]            ;731
00027a  f7fffffe          BL       TEXT_SetText
00027e  f640013e          MOV      r1,#0x83e             ;733
000282  f8da0004          LDR      r0,[r10,#4]           ;733  ; hWinWind
000286  f7fffffe          BL       WM_GetDialogItem
00028a  f7fffffe          BL       Write_Limits
00028e  f8887000          STRB     r7,[r8,#0]            ;736
000292  f8894000          STRB     r4,[r9,#0]            ;737
000296  6034              STR      r4,[r6,#0]            ;738  ; set_limit
000298  7134              STRB     r4,[r6,#4]            ;738
00029a  e72e              B        |L5.250|
                  |L5.668|
00029c  4834              LDR      r0,|L5.880|
00029e  f7fffffe          BL       atoi
0002a2  f44f717a          MOV      r1,#0x3e8             ;713
0002a6  4348              MULS     r0,r1,r0              ;713
0002a8  f8c500a0          STR      r0,[r5,#0xa0]         ;713  ; Run_Control
0002ac  e7ba              B        |L5.548|
                  |L5.686|
0002ae  f640112e          MOV      r1,#0x92e             ;745
0002b2  f7fffffe          BL       WM_GetDialogItem
0002b6  4682              MOV      r10,r0                ;745
0002b8  f8990000          LDRB     r0,[r9,#0]            ;746  ; dot_flag
0002bc  b3f0              CBZ      r0,|L5.828|
0002be  f8990000          LDRB     r0,[r9,#0]            ;748  ; dot_flag
0002c2  b1a0              CBZ      r0,|L5.750|
0002c4  9401              STR      r4,[sp,#4]            ;749
0002c6  9402              STR      r4,[sp,#8]            ;749
0002c8  f8992000          LDRB     r2,[r9,#0]            ;750  ; dot_flag
0002cc  4928              LDR      r1,|L5.880|
0002ce  1cd2              ADDS     r2,r2,#3              ;750
0002d0  a801              ADD      r0,sp,#4              ;750
0002d2  f7fffffe          BL       strncpy
0002d6  a801              ADD      r0,sp,#4              ;751
0002d8  f7fffffe          BL       __hardfp_atof
0002dc  ec532b18          VMOV     r2,r3,d8              ;751
0002e0  ec510b10          VMOV     r0,r1,d0              ;751
0002e4  f7fffffe          BL       __aeabi_dmul
0002e8  f7fffffe          BL       __aeabi_d2iz
0002ec  6128              STR      r0,[r5,#0x10]         ;751  ; InFlashSave
                  |L5.750|
0002ee  6929              LDR      r1,[r5,#0x10]         ;753  ; InFlashSave
0002f0  f64e2060          MOV      r0,#0xea60            ;753
0002f4  4281              CMP      r1,r0                 ;753
0002f6  dd00              BLE      |L5.762|
0002f8  6128              STR      r0,[r5,#0x10]         ;755  ; InFlashSave
                  |L5.762|
0002fa  ed950a04          VLDR     s0,[r5,#0x10]         ;757
0002fe  482d              LDR      r0,|L5.948|
000300  eef80ac0          VCVT.F32.S32 s1,s0                 ;757
000304  ee800a89          VDIV.F32 s0,s1,s18             ;757
000308  ed800a00          VSTR     s0,[r0,#0]            ;757
00030c  ee100a10          VMOV     r0,s0                 ;758
000310  f7fffffe          BL       __aeabi_f2d
000314  ec410b10          VMOV     d0,r0,r1              ;758
000318  a11d              ADR      r1,|L5.912|
00031a  ec532b10          VMOV     r2,r3,d0              ;758
00031e  a801              ADD      r0,sp,#4              ;758
000320  f7fffffe          BL       __2sprintf
000324  a901              ADD      r1,sp,#4              ;759
000326  4650              MOV      r0,r10                ;759
000328  f7fffffe          BL       TEXT_SetText
00032c  4a17              LDR      r2,|L5.908|
00032e  2128              MOVS     r1,#0x28              ;761
000330  4819              LDR      r0,|L5.920|
000332  f7fffffe          BL       Flash_Write32BitDatas
000336  f8887000          STRB     r7,[r8,#0]            ;762
00033a  e000              B        |L5.830|
                  |L5.828|
00033c  e004              B        |L5.840|
                  |L5.830|
00033e  f8894000          STRB     r4,[r9,#0]            ;763
000342  6034              STR      r4,[r6,#0]            ;764  ; set_limit
000344  7134              STRB     r4,[r6,#4]            ;764
000346  e6d8              B        |L5.250|
                  |L5.840|
000348  4809              LDR      r0,|L5.880|
00034a  f7fffffe          BL       atoi
00034e  f44f717a          MOV      r1,#0x3e8             ;747
000352  4348              MULS     r0,r1,r0              ;747
000354  6128              STR      r0,[r5,#0x10]         ;747  ; InFlashSave
000356  e7ca              B        |L5.750|
                  |L5.856|
000358  4805              LDR      r0,|L5.880|
00035a  f7fffffe          BL       atoi
00035e  f44f717a          MOV      r1,#0x3e8             ;773
000362  4348              MULS     r0,r1,r0              ;773
000364  6168              STR      r0,[r5,#0x14]         ;773  ; InFlashSave
000366  e69a              B        |L5.158|
;;;800    void DEL_POW(void)
                          ENDP

                  |L5.872|
                          DCD      Run_Control
                  |L5.876|
                          DCD      set_sw
                  |L5.880|
                          DCD      set_limit
                  |L5.884|
                          DCD      bit
                  |L5.888|
                          DCD      ||.data||
                  |L5.892|
                          DCD      dot_flag
                  |L5.896|
000380  00000000          DCFD     0x408f400000000000 ; 1000
000384  408f4000
                  |L5.904|
000388  447a0000          DCFS     0x447a0000 ; 1000
                  |L5.908|
                          DCD      InFlashSave
                  |L5.912|
000390  252e3366          DCB      "%.3f",0
000394  00      
000395  00                DCB      0
000396  00                DCB      0
000397  00                DCB      0
                  |L5.920|
                          DCD      0x080e0000
                  |L5.924|
00039c  00000000          DCFD     0x4059000000000000 ; 100
0003a0  40590000
                  |L5.932|
                          DCD      0x0003d477
                  |L5.936|
0003a8  42c80000          DCFS     0x42c80000 ; 100
                  |L5.940|
0003ac  252e3266          DCB      "%.2f",0
0003b0  00      
0003b1  00                DCB      0
0003b2  00                DCB      0
0003b3  00                DCB      0
                  |L5.948|
                          DCD      load_cutoffv

                          AREA ||i.ResetPow||, CODE, READONLY, ALIGN=2

                  ResetPow PROC
;;;575    
;;;576    WM_HWIN ResetPow(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;577        hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L6.32|
000010  2114              MOVS     r1,#0x14
000012  4804              LDR      r0,|L6.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L6.40|
00001a  6048              STR      r0,[r1,#4]  ; hWinWind
;;;578    //    WM_InvalidateWindow(hWinWind);
;;;579        return hWinWind;
;;;580    }
00001c  bd1c              POP      {r2-r4,pc}
;;;581    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      _cbDialog
                  |L6.36|
                          DCD      ||.constdata||
                  |L6.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  _cbDialog PROC
;;;84     
;;;85     static void _cbDialog(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;86       WM_HWIN hItem;
;;;87       int     NCode;
;;;88       int     Id;
;;;89       static vu8 status_flash;
;;;90       char buf[5];    
;;;91     
;;;92       float dis_output_v = (float)SET_Voltage/100;
00000c  f8df93f8          LDR      r9,|L7.1032|
000010  f8d90004          LDR      r0,[r9,#4]  ; Run_Control
000014  ee000a10          VMOV     s0,r0
000018  eeb80a40          VCVT.F32.U32 s0,s0
00001c  eddf0afb          VLDR     s1,|L7.1036|
000020  eec09a20          VDIV.F32 s19,s0,s1
;;;93       float dis_output_c = (float)SET_Current/1000;
000024  f8d90008          LDR      r0,[r9,#8]  ; Run_Control
000028  ee000a10          VMOV     s0,r0
00002c  eeb80a40          VCVT.F32.U32 s0,s0
000030  eddf0af7          VLDR     s1,|L7.1040|
000034  ee809a20          VDIV.F32 s18,s0,s1
;;;94       static u8 cdelay;
;;;95     
;;;96       
;;;97       // USER START (Optionally insert additional variables)
;;;98       // USER END
;;;99     
;;;100      switch (pMsg->MsgId) {
000038  6820              LDR      r0,[r4,#0]
;;;101    
;;;102    	case WM_PAINT://无效化重绘
;;;103    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;104            GUI_FillRect(0,25,480,26);//画一条实线
;;;105    	    GUI_FillRect(280,26,281,215);//画一条实线
;;;106    		GUI_FillRect(0,215,480,216);//画一条实线
;;;107            GUI_SetColor(GUI_ORANGE);
;;;108            GUI_SetFont(&GUI_Fontsymbol);
;;;109            GUI_UC_SetEncodeUTF8();
;;;110            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;111            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;112            GUI_SetColor(GUI_WHITE);
;;;113            GUI_SetFont(&GUI_FontHZ20S);
;;;114            GUI_UC_SetEncodeUTF8();
;;;115            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明       
;;;116            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;117    		GUI_SetColor(GUI_LIGHTBLUE);
;;;118            GUI_SetFont(&GUI_FontHZ16);
;;;119            GUI_DispStringAt("电压",290, 50-10);
;;;120            GUI_DispStringAt("电流",290, 100-10);
;;;121            GUI_SetColor(GUI_GREEN);//设置前景色为白色
;;;122    //      GUI_SetFont(&GUI_FontD24x32);//
;;;123    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;124    // 		GUI_DispFloatFix(DISS_POW_Voltage,5,2);//显示电压值
;;;125    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;126    // 		GUI_DispFloatFix(DISS_POW_Current,5,2);//显示电流值
;;;127            GUI_SetFont(&GUI_Font24_1);
;;;128            GUI_DispStringAt("V",435,50-10);
;;;129            GUI_DispStringAt("A",435,100-10);
;;;130            GUI_DispStringAt("V",435,150-10);
;;;131            GUI_DispStringAt("A",435,200-10);
;;;132    		GUI_SetColor(GUI_LIGHTBLUE);
;;;133    		GUI_DispStringAt("OVP",290,150-10);
;;;134            GUI_DispStringAt("OCP",290,200-10);
;;;135    		
;;;136    		
;;;137    		
;;;138    		if(set_disp == 0)
;;;139    		{
;;;140    			GUI_SetColor(GUI_LIGHTGRAY);
00003a  4ff6              LDR      r7,|L7.1044|
00003c  f44f467f          MOV      r6,#0xff00            ;121
000040  280f              CMP      r0,#0xf               ;100
000042  d016              BEQ      |L7.114|
;;;141    			GUI_SetFont(&GUI_FontEN40);
;;;142    			GUI_DispStringAt("P:",28,190-20);
;;;143    			GUI_DispStringAt("W",240,190-20);
;;;144    		}else{
;;;145    			GUI_SetColor(GUI_LIGHTGRAY);
;;;146    			GUI_SetFont(&GUI_FontEN40);
;;;147    			GUI_DispStringAt("R:",28,190-20);
;;;148    			GUI_SetFont(&GUI_FontHZ32);
;;;149    			GUI_DispStringAt("Ω",240,190-20);
;;;150    		}
;;;151    		
;;;152    
;;;153    //        GUI_SetFont(&GUI_FontEN40);
;;;154    //        GUI_SetColor(GUI_LIGHTGRAY);
;;;155    //        GUI_DispStringAt("C:", 28, 190);
;;;156    //        GUI_SetColor(GUI_LIGHTGRAY);
;;;157    //        GUI_DispStringAt("m", 217, 196);
;;;158    //        GUI_DispStringAt("AH", 238, 187);
;;;159            
;;;160            GUI_SetColor(GUI_GREEN);
;;;161            GUI_SetFont(&GUI_Fontunit);
;;;162            GUI_DispStringAt("°",342, 2);
;;;163            GUI_SetFont(&GUI_Font24_1);
;;;164            GUI_DispStringAt("C",350, 2);
;;;165    		
;;;166    		
;;;167    //        DrawLock();
;;;168    //        GUI_SetColor(GUI_WHITE);
;;;169    //        GUI_SetFont(&GUI_Fontset_font);
;;;170    //        GUI_DispStringAt("过充电压",290, 150);
;;;171    		break;
;;;172        
;;;173    	case WM_TIMER://定时模块消息
;;;174    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime2)
;;;175    	{
;;;176    //        lockstat2 = lockstat1;
;;;177    //        lockstat1 = lock;
;;;178    //        if(lockstat1 != lockstat2)
;;;179    //        {
;;;180    //            WM_InvalidateWindow(hWinWind);
;;;181    //        }
;;;182    //         if(clear_flag2 == 1)
;;;183    //         {
;;;184    		DIS_POW = DISS_POW_Voltage * DISS_POW_Current;
;;;185    		DIS_R = DISS_POW_Voltage / DISS_POW_Current;
;;;186    		if(lock == 1)
;;;187    		{
;;;188    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;189    			TEXT_SetText(hItem,"锁");
;;;190    		}else{
;;;191    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;192    			TEXT_SetText(hItem,"");
;;;193    		}
;;;194                if(DISS_POW_Voltage < 0.1)
;;;195                {
;;;196                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;197                    sprintf(buf,"%.2f",0.00);       
;;;198                    TEXT_SetText(hItem,buf);
;;;199                }else{
;;;200                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;201                    sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;202                    TEXT_SetText(hItem,buf);
;;;203                }
;;;204    //         }else{
;;;205    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;206    //             sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;207    //             TEXT_SetText(hItem,buf);
;;;208    //         }
;;;209            
;;;210            
;;;211           
;;;212            
;;;213    //        test_pow();
;;;214            if(pow_sw == pow_on)
;;;215            {
;;;216                 hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;217                sprintf(buf,"%.3f",DISS_POW_Current); 
;;;218    			TEXT_SetText(hItem,buf);
;;;219    			
;;;220    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;221    			if(set_disp == 0)
;;;222    			{
;;;223    				sprintf(buf,"%.3f",DIS_POW);
;;;224    			}else{
;;;225    				sprintf(buf,"%.3f",DIS_R);
;;;226    			}
;;;227    			        
;;;228                TEXT_SetText(hItem,buf);			
;;;229                
;;;230                if(status_flash == 0){
;;;231                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;232                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;233                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;234                    GUI_UC_SetEncodeUTF8();        
;;;235                    TEXT_SetText(hItem,"充电中");
;;;236                    status_flash = 1;
;;;237                }else{
;;;238                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;239                    TEXT_SetText(hItem,"");
;;;240                    status_flash = 0;
;;;241               }
;;;242               if(((load_cutoffv != 0 && DISS_POW_Voltage > load_cutoffv) ||(pow_cutoffc != 0 && DISS_POW_Current > pow_cutoffc)) && cdelay > 20)
;;;243               {
;;;244                  GPIO_ResetBits(GPIOC,GPIO_Pin_1);
;;;245    			  GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;246                  //GPIO_SetBits(GPIOC,GPIO_Pin_13);
;;;247                  mode_sw = 0;
;;;248                  pow_sw = pow_off;
;;;249    			  load_sw=load_off;
;;;250                  cdelay = 0;
;;;251               }else{
;;;252                   cdelay++;
;;;253               }
;;;254            }else{
;;;255                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;256                TEXT_SetText(hItem,"");
;;;257                
;;;258                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;259                sprintf(buf,"%.3f",0.000);        
;;;260                TEXT_SetText(hItem,buf);
;;;261                
;;;262    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;263    			sprintf(buf,"%.3f",0.000);        
;;;264                TEXT_SetText(hItem,buf);
;;;265    			
;;;266                cdelay = 0;
;;;267            }
;;;268    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);       
;;;269    //        sprintf(buf,"%.3f",overchargev);
;;;270    //        TEXT_SetText(hItem,buf);
;;;271            
;;;272            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);       
;;;273            sprintf(buf,"%.1f",temp);
000044  f8dfb3d0          LDR      r11,|L7.1048|
000048  ed9f8bf4          VLDR     d8,|L7.1052|
00004c  f8dfa3d4          LDR      r10,|L7.1060|
000050  4df5              LDR      r5,|L7.1064|
000052  281d              CMP      r0,#0x1d              ;100
000054  d07e              BEQ      |L7.340|
000056  2826              CMP      r0,#0x26              ;100
000058  d07d              BEQ      |L7.342|
00005a  f5a07080          SUB      r0,r0,#0x100          ;100
00005e  3813              SUBS     r0,r0,#0x13           ;100
000060  d07a              BEQ      |L7.344|
;;;274            TEXT_SetText(hItem,buf);
;;;275            
;;;276    		WM_RestartTimer(pMsg->Data.v, 20);//复位定时器数值越大刷新时间越短
;;;277    	}
;;;278    	break;
;;;279      case WM_INIT_DIALOG://重绘外观
;;;280        //
;;;281        // Initialization of 'Window'
;;;282        //
;;;283            hItem = pMsg->hWin;
;;;284            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;285            WM_CreateTimer(hItem,ID_TimerTime2,500,0);//创建本窗口定时器
;;;286        //
;;;287        // Initialization of 'Button'
;;;288        //
;;;289    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
;;;290    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;291    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;292    // 		GUI_UC_SetEncodeUTF8();
;;;293    // 		BUTTON_SetText(hItem,"充放电");
;;;294        //
;;;295        // Initialization of 'Button'
;;;296        //
;;;297    		
;;;298    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;299    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;300    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;301    		TEXT_SetText(hItem,"");
;;;302    		
;;;303            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
;;;304    		BUTTON_SetPressed(hItem,1);
;;;305    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;306    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;307    		GUI_UC_SetEncodeUTF8();
;;;308            BUTTON_SetText(hItem, "电压设置");
;;;309        //
;;;310        // Initialization of 'Button'
;;;311        //
;;;312            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
;;;313    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;314    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;315    		GUI_UC_SetEncodeUTF8();
;;;316            BUTTON_SetText(hItem, "电流设置");
;;;317        //
;;;318        // Initialization of 'Button'
;;;319        //
;;;320            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_3);
;;;321            
;;;322    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;323    		BUTTON_SetFont      (hItem,    &GUI_Font24_1);//设定按钮文本字体
;;;324    		GUI_UC_SetEncodeUTF8();
;;;325            BUTTON_SetText(hItem, "OVP");
;;;326        //
;;;327        // Initialization of 'Button'
;;;328        //
;;;329            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_4);
;;;330    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;331    		BUTTON_SetFont      (hItem,    &GUI_Font24_1);//设定按钮文本字体
;;;332    		GUI_UC_SetEncodeUTF8();
;;;333            BUTTON_SetText(hItem, "OCP");
;;;334        //
;;;335        // Initialization of 'Button'
;;;336        //
;;;337            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_5);
;;;338    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;339    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;340    		GUI_UC_SetEncodeUTF8();
;;;341            BUTTON_SetText(hItem, "系统设置");
;;;342    		
;;;343    		
;;;344    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_9);
;;;345    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;346            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;347    		GUI_UC_SetEncodeUTF8();
;;;348    		TEXT_SetText(hItem,"V:");
;;;349    		
;;;350    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_10);
;;;351    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;352            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;353    		GUI_UC_SetEncodeUTF8();
;;;354    		TEXT_SetText(hItem,"I:");
;;;355            
;;;356            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_15);
;;;357    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;358            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;359    		GUI_UC_SetEncodeUTF8();
;;;360    		TEXT_SetText(hItem,"V");
;;;361    		
;;;362    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_16);
;;;363    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;364            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;365    		GUI_UC_SetEncodeUTF8();
;;;366    		TEXT_SetText(hItem,"A");
;;;367            
;;;368    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_33);
;;;369    //		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;370    //        TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;371    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;372    //		GUI_UC_SetEncodeUTF8();
;;;373    //		TEXT_SetText(hItem,"输出电压");        
;;;374    //        
;;;375    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_34);
;;;376    //		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;377    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;378    //		GUI_UC_SetEncodeUTF8();
;;;379    //		TEXT_SetText(hItem,"限制电流");
;;;380    //		
;;;381    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;382            sprintf(buf,"%.3f",pow_cutoffc);
;;;383    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;384            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;385    		GUI_UC_SetEncodeUTF8();     
;;;386    		TEXT_SetText(hItem,buf);
;;;387            
;;;388            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_41);
;;;389    		TEXT_SetBkColor(hItem,GUI_BLUE);
;;;390            sprintf(buf,"%.2f",dis_output_v);
;;;391    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;392            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;393    		GUI_UC_SetEncodeUTF8();        
;;;394    		TEXT_SetText(hItem,buf);
;;;395            
;;;396            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_42);
;;;397            sprintf(buf,"%.3f",dis_output_c);
;;;398    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;399            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;400    		GUI_UC_SetEncodeUTF8();        
;;;401    		TEXT_SetText(hItem,buf);
;;;402            
;;;403            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;404            sprintf(buf,"%.2f",0.00);
;;;405    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;406            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;407    		GUI_UC_SetEncodeUTF8();        
;;;408    		TEXT_SetText(hItem,buf);
;;;409            
;;;410            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;411            sprintf(buf,"%.3f",0.000);
;;;412    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;413            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;414    		GUI_UC_SetEncodeUTF8();        
;;;415    		TEXT_SetText(hItem,buf);
;;;416            
;;;417            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;418            sprintf(buf,"%.3f",0.000);
;;;419            TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;420            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;421            GUI_UC_SetEncodeUTF8();        
;;;422            TEXT_SetText(hItem,buf);
;;;423            
;;;424            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);
;;;425            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;426            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;427            sprintf(buf,"%.1f",temp);
;;;428            TEXT_SetText(hItem,buf);
;;;429            
;;;430            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;431            sprintf(buf,"%.3f",load_cutoffv);
;;;432    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;433            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;434    		GUI_UC_SetEncodeUTF8();     
;;;435    		TEXT_SetText(hItem,buf);
;;;436    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_159);
;;;437            sprintf(buf,"%.3f",pow_cutoffc);
;;;438    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;439            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;440    		GUI_UC_SetEncodeUTF8();     
;;;441    		TEXT_SetText(hItem,buf);
;;;442    		
;;;443            
;;;444        // USER START (Optionally insert additional code for further widget initialization)
;;;445        // USER END
;;;446        break;
;;;447      case WM_NOTIFY_PARENT:
;;;448        Id    = WM_GetId(pMsg->hWinSrc);
;;;449        NCode = pMsg->Data.v;
;;;450        switch(Id) {
;;;451        case ID_BUTTON_0: // Notifications sent by 'Button'
;;;452          switch(NCode) {
;;;453          case WM_NOTIFICATION_CLICKED:
;;;454            // USER START (Optionally insert code for reacting on notification message)
;;;455            // USER END
;;;456            break;
;;;457          case WM_NOTIFICATION_RELEASED:
;;;458            // USER START (Optionally insert code for reacting on notification message)
;;;459            // USER END
;;;460            break;
;;;461          // USER START (Optionally insert additional code for further notification handling)
;;;462          // USER END
;;;463          }
;;;464          break;
;;;465        case ID_BUTTON_1: // Notifications sent by 'Button'
;;;466          switch(NCode) {
;;;467          case WM_NOTIFICATION_CLICKED:
;;;468            // USER START (Optionally insert code for reacting on notification message)
;;;469            // USER END
;;;470            break;
;;;471          case WM_NOTIFICATION_RELEASED:
;;;472    				
;;;473            // USER START (Optionally insert code for reacting on notification message)
;;;474            // USER END
;;;475            break;
;;;476          // USER START (Optionally insert additional code for further notification handling)
;;;477          // USER END
;;;478          }
;;;479          break;
;;;480        case ID_BUTTON_2: // Notifications sent by 'Button'
;;;481          switch(NCode) {
;;;482          case WM_NOTIFICATION_CLICKED:
;;;483            // USER START (Optionally insert code for reacting on notification message)
;;;484            // USER END
;;;485            break;
;;;486          case WM_NOTIFICATION_RELEASED:
;;;487            // USER START (Optionally insert code for reacting on notification message)
;;;488            // USER END
;;;489            break;
;;;490          // USER START (Optionally insert additional code for further notification handling)
;;;491          // USER END
;;;492          }
;;;493          break;
;;;494        case ID_BUTTON_3: // Notifications sent by 'Button'
;;;495          switch(NCode) {
;;;496          case WM_NOTIFICATION_CLICKED:
;;;497            // USER START (Optionally insert code for reacting on notification message)
;;;498            // USER END
;;;499            break;
;;;500          case WM_NOTIFICATION_RELEASED:
;;;501            // USER START (Optionally insert code for reacting on notification message)
;;;502            // USER END
;;;503            break;
;;;504          // USER START (Optionally insert additional code for further notification handling)
;;;505          // USER END
;;;506          }
;;;507          break;
;;;508        case ID_BUTTON_4: // Notifications sent by 'Button'
;;;509          switch(NCode) {
;;;510          case WM_NOTIFICATION_CLICKED:
;;;511            // USER START (Optionally insert code for reacting on notification message)
;;;512            // USER END
;;;513            break;
;;;514          case WM_NOTIFICATION_RELEASED:
;;;515            // USER START (Optionally insert code for reacting on notification message)
;;;516            // USER END
;;;517            break;
;;;518          // USER START (Optionally insert additional code for further notification handling)
;;;519          // USER END
;;;520          }
;;;521          break;
;;;522        case ID_BUTTON_5: // Notifications sent by 'Button'
;;;523          switch(NCode) {
;;;524          case WM_NOTIFICATION_CLICKED:
;;;525            // USER START (Optionally insert code for reacting on notification message)
;;;526            // USER END
;;;527            break;
;;;528          case WM_NOTIFICATION_RELEASED:
;;;529            // USER START (Optionally insert code for reacting on notification message)
;;;530            // USER END
;;;531            break;
;;;532          // USER START (Optionally insert additional code for further notification handling)
;;;533          // USER END
;;;534          }
;;;535          break;
;;;536        // USER START (Optionally insert additional code for further Ids)
;;;537        // USER END
;;;538        }
;;;539        break;
;;;540      // USER START (Optionally insert additional message handling)
;;;541      // USER END
;;;542      default:
;;;543        WM_DefaultProc(pMsg);
000062  4620              MOV      r0,r4
000064  f7fffffe          BL       WM_DefaultProc
                  |L7.104|
;;;544        break;
;;;545      }
;;;546    }
000068  b003              ADD      sp,sp,#0xc
00006a  ecbd8b04          VPOP     {d8-d9}
00006e  e8bd8ff0          POP      {r4-r11,pc}
                  |L7.114|
000072  f06f447f          MVN      r4,#0xff000000        ;103
000076  4620              MOV      r0,r4                 ;103
000078  f7fffffe          BL       GUI_SetColor
00007c  f44f75f0          MOV      r5,#0x1e0             ;104
000080  231a              MOVS     r3,#0x1a              ;104
000082  462a              MOV      r2,r5                 ;104
000084  2119              MOVS     r1,#0x19              ;104
000086  2000              MOVS     r0,#0                 ;104
000088  f7fffffe          BL       GUI_FillRect
00008c  f2401219          MOV      r2,#0x119             ;105
000090  23d7              MOVS     r3,#0xd7              ;105
000092  211a              MOVS     r1,#0x1a              ;105
000094  1e50              SUBS     r0,r2,#1              ;105
000096  f7fffffe          BL       GUI_FillRect
00009a  23d8              MOVS     r3,#0xd8              ;106
00009c  462a              MOV      r2,r5                 ;106
00009e  21d7              MOVS     r1,#0xd7              ;106
0000a0  2000              MOVS     r0,#0                 ;106
0000a2  f7fffffe          BL       GUI_FillRect
0000a6  f24a50ff          MOV      r0,#0xa5ff            ;107
0000aa  f7fffffe          BL       GUI_SetColor
0000ae  48df              LDR      r0,|L7.1068|
0000b0  f7fffffe          BL       GUI_SetFont
0000b4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000b8  2002              MOVS     r0,#2                 ;110
0000ba  f7fffffe          BL       GUI_SetTextMode
0000be  2201              MOVS     r2,#1                 ;111
0000c0  2105              MOVS     r1,#5                 ;111
0000c2  a0db              ADR      r0,|L7.1072|
0000c4  f7fffffe          BL       GUI_DispStringAt
0000c8  4620              MOV      r0,r4                 ;112
0000ca  f7fffffe          BL       GUI_SetColor
0000ce  48da              LDR      r0,|L7.1080|
0000d0  f7fffffe          BL       GUI_SetFont
0000d4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000d8  2002              MOVS     r0,#2                 ;115
0000da  f7fffffe          BL       GUI_SetTextMode
0000de  2203              MOVS     r2,#3                 ;116
0000e0  2182              MOVS     r1,#0x82              ;116
0000e2  a0d6              ADR      r0,|L7.1084|
0000e4  f7fffffe          BL       GUI_DispStringAt
0000e8  4cd8              LDR      r4,|L7.1100|
0000ea  4620              MOV      r0,r4                 ;117
0000ec  f7fffffe          BL       GUI_SetColor
0000f0  48d7              LDR      r0,|L7.1104|
0000f2  f7fffffe          BL       GUI_SetFont
0000f6  f44f7591          MOV      r5,#0x122             ;119
0000fa  2228              MOVS     r2,#0x28              ;119
0000fc  4629              MOV      r1,r5                 ;119
0000fe  a0d5              ADR      r0,|L7.1108|
000100  f7fffffe          BL       GUI_DispStringAt
000104  225a              MOVS     r2,#0x5a              ;120
000106  4629              MOV      r1,r5                 ;120
000108  a0d4              ADR      r0,|L7.1116|
00010a  f7fffffe          BL       GUI_DispStringAt
00010e  4630              MOV      r0,r6                 ;121
000110  f7fffffe          BL       GUI_SetColor
000114  48d3              LDR      r0,|L7.1124|
000116  f7fffffe          BL       GUI_SetFont
00011a  f24018b3          MOV      r8,#0x1b3             ;128
00011e  2228              MOVS     r2,#0x28              ;128
000120  4641              MOV      r1,r8                 ;128
000122  a0d1              ADR      r0,|L7.1128|
000124  f7fffffe          BL       GUI_DispStringAt
000128  225a              MOVS     r2,#0x5a              ;129
00012a  4641              MOV      r1,r8                 ;129
00012c  a0cf              ADR      r0,|L7.1132|
00012e  f7fffffe          BL       GUI_DispStringAt
000132  228c              MOVS     r2,#0x8c              ;130
000134  4641              MOV      r1,r8                 ;130
000136  a0cc              ADR      r0,|L7.1128|
000138  f7fffffe          BL       GUI_DispStringAt
00013c  22be              MOVS     r2,#0xbe              ;131
00013e  4641              MOV      r1,r8                 ;131
000140  a0ca              ADR      r0,|L7.1132|
000142  f7fffffe          BL       GUI_DispStringAt
000146  4620              MOV      r0,r4                 ;132
000148  f7fffffe          BL       GUI_SetColor
00014c  228c              MOVS     r2,#0x8c              ;133
00014e  4629              MOV      r1,r5                 ;133
000150  a0c7              ADR      r0,|L7.1136|
000152  e002              B        |L7.346|
                  |L7.340|
000154  e1db              B        |L7.1294|
                  |L7.342|
000156  e3e9              B        |L7.2348|
                  |L7.344|
000158  e043              B        |L7.482|
                  |L7.346|
00015a  f7fffffe          BL       GUI_DispStringAt
00015e  22be              MOVS     r2,#0xbe              ;134
000160  4629              MOV      r1,r5                 ;134
000162  a0c4              ADR      r0,|L7.1140|
000164  f7fffffe          BL       GUI_DispStringAt
000168  f8d90084          LDR      r0,[r9,#0x84]         ;138  ; Run_Control
00016c  b340              CBZ      r0,|L7.448|
00016e  4638              MOV      r0,r7                 ;145
000170  f7fffffe          BL       GUI_SetColor
000174  48c0              LDR      r0,|L7.1144|
000176  f7fffffe          BL       GUI_SetFont
00017a  22aa              MOVS     r2,#0xaa              ;147
00017c  211c              MOVS     r1,#0x1c              ;147
00017e  a0bf              ADR      r0,|L7.1148|
000180  f7fffffe          BL       GUI_DispStringAt
000184  48be              LDR      r0,|L7.1152|
000186  f7fffffe          BL       GUI_SetFont
00018a  22aa              MOVS     r2,#0xaa              ;149
00018c  21f0              MOVS     r1,#0xf0              ;149
00018e  a0bd              ADR      r0,|L7.1156|
000190  f7fffffe          BL       GUI_DispStringAt
                  |L7.404|
000194  4630              MOV      r0,r6                 ;160
000196  f7fffffe          BL       GUI_SetColor
00019a  48bb              LDR      r0,|L7.1160|
00019c  f7fffffe          BL       GUI_SetFont
0001a0  2202              MOVS     r2,#2                 ;162
0001a2  f44f71ab          MOV      r1,#0x156             ;162
0001a6  a0b9              ADR      r0,|L7.1164|
0001a8  f7fffffe          BL       GUI_DispStringAt
0001ac  48ad              LDR      r0,|L7.1124|
0001ae  f7fffffe          BL       GUI_SetFont
0001b2  2202              MOVS     r2,#2                 ;164
0001b4  f44f71af          MOV      r1,#0x15e             ;164
0001b8  a0b5              ADR      r0,|L7.1168|
0001ba  f7fffffe          BL       GUI_DispStringAt
                  |L7.446|
0001be  e753              B        |L7.104|
                  |L7.448|
0001c0  4638              MOV      r0,r7                 ;140
0001c2  f7fffffe          BL       GUI_SetColor
0001c6  48ac              LDR      r0,|L7.1144|
0001c8  f7fffffe          BL       GUI_SetFont
0001cc  22aa              MOVS     r2,#0xaa              ;142
0001ce  211c              MOVS     r1,#0x1c              ;142
0001d0  a0b0              ADR      r0,|L7.1172|
0001d2  f7fffffe          BL       GUI_DispStringAt
0001d6  22aa              MOVS     r2,#0xaa              ;143
0001d8  21f0              MOVS     r1,#0xf0              ;143
0001da  a0af              ADR      r0,|L7.1176|
0001dc  f7fffffe          BL       GUI_DispStringAt
0001e0  e7d8              B        |L7.404|
                  |L7.482|
0001e2  68e0              LDR      r0,[r4,#0xc]          ;174
0001e4  f7fffffe          BL       WM_GetTimerId
0001e8  2803              CMP      r0,#3                 ;174
0001ea  d1e8              BNE      |L7.446|
0001ec  4fab              LDR      r7,|L7.1180|
0001ee  f8df82b0          LDR      r8,|L7.1184|
0001f2  ed970a00          VLDR     s0,[r7,#0]            ;184
0001f6  edd80a00          VLDR     s1,[r8,#0]            ;184
0001fa  ee201a20          VMUL.F32 s2,s0,s1              ;184
0001fe  ed851a03          VSTR     s2,[r5,#0xc]          ;184
000202  ee801a20          VDIV.F32 s2,s0,s1              ;185
000206  ed851a04          VSTR     s2,[r5,#0x10]         ;185
00020a  48a6              LDR      r0,|L7.1188|
00020c  7800              LDRB     r0,[r0,#0]            ;186  ; lock
00020e  2801              CMP      r0,#1                 ;186
000210  d01c              BEQ      |L7.588|
000212  f640113c          MOV      r1,#0x93c             ;191
000216  6860              LDR      r0,[r4,#4]            ;191
000218  f7fffffe          BL       WM_GetDialogItem
00021c  a18a              ADR      r1,|L7.1096|
00021e  f7fffffe          BL       TEXT_SetText
                  |L7.546|
000222  49a1              LDR      r1,|L7.1192|
000224  6838              LDR      r0,[r7,#0]            ;194  ; DISS_POW_Voltage
000226  4288              CMP      r0,r1                 ;194
000228  da19              BGE      |L7.606|
00022a  f6400193          MOV      r1,#0x893             ;196
00022e  6860              LDR      r0,[r4,#4]            ;196
000230  f7fffffe          BL       WM_GetDialogItem
000234  4606              MOV      r6,r0                 ;196
000236  ec532b18          VMOV     r2,r3,d8              ;197
00023a  a19c              ADR      r1,|L7.1196|
00023c  4668              MOV      r0,sp                 ;197
00023e  f7fffffe          BL       __2sprintf
000242  4669              MOV      r1,sp                 ;198
000244  4630              MOV      r0,r6                 ;198
000246  f7fffffe          BL       TEXT_SetText
00024a  e01d              B        |L7.648|
                  |L7.588|
00024c  f640113c          MOV      r1,#0x93c             ;188
000250  6860              LDR      r0,[r4,#4]            ;188
000252  f7fffffe          BL       WM_GetDialogItem
000256  a197              ADR      r1,|L7.1204|
000258  f7fffffe          BL       TEXT_SetText
00025c  e7e1              B        |L7.546|
                  |L7.606|
00025e  f6400193          MOV      r1,#0x893             ;200
000262  6860              LDR      r0,[r4,#4]            ;200
000264  f7fffffe          BL       WM_GetDialogItem
000268  4606              MOV      r6,r0                 ;200
00026a  6838              LDR      r0,[r7,#0]            ;201  ; DISS_POW_Voltage
00026c  f7fffffe          BL       __aeabi_f2d
000270  ec410b10          VMOV     d0,r0,r1              ;201
000274  a18d              ADR      r1,|L7.1196|
000276  ec532b10          VMOV     r2,r3,d0              ;201
00027a  4668              MOV      r0,sp                 ;201
00027c  f7fffffe          BL       __2sprintf
000280  4669              MOV      r1,sp                 ;202
000282  4630              MOV      r0,r6                 ;202
000284  f7fffffe          BL       TEXT_SetText
                  |L7.648|
000288  7828              LDRB     r0,[r5,#0]            ;214  ; pow_sw
00028a  2600              MOVS     r6,#0                 ;214
00028c  2801              CMP      r0,#1                 ;214
00028e  d043              BEQ      |L7.792|
000290  f6400195          MOV      r1,#0x895             ;255
000294  6860              LDR      r0,[r4,#4]            ;255
000296  f7fffffe          BL       WM_GetDialogItem
00029a  a16b              ADR      r1,|L7.1096|
00029c  f7fffffe          BL       TEXT_SetText
0002a0  f6400194          MOV      r1,#0x894             ;258
0002a4  6860              LDR      r0,[r4,#4]            ;258
0002a6  f7fffffe          BL       WM_GetDialogItem
0002aa  4607              MOV      r7,r0                 ;258
0002ac  ec532b18          VMOV     r2,r3,d8              ;259
0002b0  a181              ADR      r1,|L7.1208|
0002b2  4668              MOV      r0,sp                 ;259
0002b4  f7fffffe          BL       __2sprintf
0002b8  4669              MOV      r1,sp                 ;260
0002ba  4638              MOV      r0,r7                 ;260
0002bc  f7fffffe          BL       TEXT_SetText
0002c0  f640110b          MOV      r1,#0x90b             ;262
0002c4  6860              LDR      r0,[r4,#4]            ;262
0002c6  f7fffffe          BL       WM_GetDialogItem
0002ca  4607              MOV      r7,r0                 ;262
0002cc  ec532b18          VMOV     r2,r3,d8              ;263
0002d0  a179              ADR      r1,|L7.1208|
0002d2  4668              MOV      r0,sp                 ;263
0002d4  f7fffffe          BL       __2sprintf
0002d8  4669              MOV      r1,sp                 ;264
0002da  4638              MOV      r0,r7                 ;264
0002dc  f7fffffe          BL       TEXT_SetText
0002e0  70ae              STRB     r6,[r5,#2]            ;266
                  |L7.738|
0002e2  f640110c          MOV      r1,#0x90c             ;272
0002e6  6860              LDR      r0,[r4,#4]            ;272
0002e8  f7fffffe          BL       WM_GetDialogItem
0002ec  4605              MOV      r5,r0                 ;272
0002ee  f8db0000          LDR      r0,[r11,#0]           ;273  ; temp
0002f2  f7fffffe          BL       __aeabi_f2d
0002f6  ec410b10          VMOV     d0,r0,r1              ;273
0002fa  a171              ADR      r1,|L7.1216|
0002fc  ec532b10          VMOV     r2,r3,d0              ;273
000300  4668              MOV      r0,sp                 ;273
000302  f7fffffe          BL       __2sprintf
000306  4669              MOV      r1,sp                 ;274
000308  4628              MOV      r0,r5                 ;274
00030a  f7fffffe          BL       TEXT_SetText
00030e  2114              MOVS     r1,#0x14              ;276
000310  68e0              LDR      r0,[r4,#0xc]          ;276
000312  f7fffffe          BL       WM_RestartTimer
000316  e6a7              B        |L7.104|
                  |L7.792|
000318  f6400194          MOV      r1,#0x894             ;216
00031c  6860              LDR      r0,[r4,#4]            ;216
00031e  f7fffffe          BL       WM_GetDialogItem
000322  9002              STR      r0,[sp,#8]            ;216
000324  f8d80000          LDR      r0,[r8,#0]            ;217  ; DISS_POW_Current
000328  f7fffffe          BL       __aeabi_f2d
00032c  ec410b10          VMOV     d0,r0,r1              ;217
000330  a161              ADR      r1,|L7.1208|
000332  ec532b10          VMOV     r2,r3,d0              ;217
000336  4668              MOV      r0,sp                 ;217
000338  f7fffffe          BL       __2sprintf
00033c  4669              MOV      r1,sp                 ;218
00033e  9802              LDR      r0,[sp,#8]            ;218
000340  f7fffffe          BL       TEXT_SetText
000344  f640110b          MOV      r1,#0x90b             ;220
000348  6860              LDR      r0,[r4,#4]            ;220
00034a  f7fffffe          BL       WM_GetDialogItem
00034e  9002              STR      r0,[sp,#8]            ;220
000350  f8d90084          LDR      r0,[r9,#0x84]         ;221  ; Run_Control
000354  b3e8              CBZ      r0,|L7.978|
000356  6928              LDR      r0,[r5,#0x10]         ;225  ; DIS_R
000358  f7fffffe          BL       __aeabi_f2d
00035c  ec410b10          VMOV     d0,r0,r1              ;225
000360  a155              ADR      r1,|L7.1208|
000362  ec532b10          VMOV     r2,r3,d0              ;225
000366  4668              MOV      r0,sp                 ;225
000368  f7fffffe          BL       __2sprintf
                  |L7.876|
00036c  4669              MOV      r1,sp                 ;228
00036e  9802              LDR      r0,[sp,#8]            ;228
000370  f7fffffe          BL       TEXT_SetText
000374  7868              LDRB     r0,[r5,#1]            ;230  ; status_flash
000376  b368              CBZ      r0,|L7.980|
000378  f6400195          MOV      r1,#0x895             ;238
00037c  6860              LDR      r0,[r4,#4]            ;238
00037e  f7fffffe          BL       WM_GetDialogItem
000382  a131              ADR      r1,|L7.1096|
000384  f7fffffe          BL       TEXT_SetText
000388  706e              STRB     r6,[r5,#1]            ;240
                  |L7.906|
00038a  ed9a0a00          VLDR     s0,[r10,#0]           ;242
00038e  eeb50ac0          VCMPE.F32 s0,#0.0               ;242
000392  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;242
000396  d006              BEQ      |L7.934|
000398  edd70a00          VLDR     s1,[r7,#0]            ;242
00039c  eef40ac0          VCMPE.F32 s1,s0                 ;242
0003a0  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;242
0003a4  dc0d              BGT      |L7.962|
                  |L7.934|
0003a6  ed950a02          VLDR     s0,[r5,#8]            ;242
0003aa  eeb50ac0          VCMPE.F32 s0,#0.0               ;242
0003ae  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;242
0003b2  d028              BEQ      |L7.1030|
0003b4  edd80a00          VLDR     s1,[r8,#0]            ;242
0003b8  eef40ac0          VCMPE.F32 s1,s0                 ;242
0003bc  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;242
0003c0  dd21              BLE      |L7.1030|
                  |L7.962|
0003c2  78a8              LDRB     r0,[r5,#2]            ;242  ; cdelay
0003c4  2814              CMP      r0,#0x14              ;242
0003c6  d91e              BLS      |L7.1030|
0003c8  2102              MOVS     r1,#2                 ;244
0003ca  483f              LDR      r0,|L7.1224|
0003cc  f7fffffe          BL       GPIO_ResetBits
0003d0  e001              B        |L7.982|
                  |L7.978|
0003d2  e00c              B        |L7.1006|
                  |L7.980|
0003d4  e080              B        |L7.1240|
                  |L7.982|
0003d6  f44f4100          MOV      r1,#0x8000            ;245
0003da  483c              LDR      r0,|L7.1228|
0003dc  f7fffffe          BL       GPIO_SetBits
0003e0  483b              LDR      r0,|L7.1232|
0003e2  7006              STRB     r6,[r0,#0]            ;247
0003e4  702e              STRB     r6,[r5,#0]            ;248
0003e6  483b              LDR      r0,|L7.1236|
0003e8  7006              STRB     r6,[r0,#0]            ;249
0003ea  70ae              STRB     r6,[r5,#2]            ;250
0003ec  e779              B        |L7.738|
                  |L7.1006|
0003ee  68e8              LDR      r0,[r5,#0xc]          ;223  ; DIS_POW
0003f0  f7fffffe          BL       __aeabi_f2d
0003f4  ec410b10          VMOV     d0,r0,r1              ;223
0003f8  a12f              ADR      r1,|L7.1208|
0003fa  ec532b10          VMOV     r2,r3,d0              ;223
0003fe  4668              MOV      r0,sp                 ;223
000400  f7fffffe          BL       __2sprintf
000404  e7b2              B        |L7.876|
                  |L7.1030|
000406  e07e              B        |L7.1286|
                  |L7.1032|
                          DCD      Run_Control
                  |L7.1036|
00040c  42c80000          DCFS     0x42c80000 ; 100
                  |L7.1040|
000410  447a0000          DCFS     0x447a0000 ; 1000
                  |L7.1044|
                          DCD      0x00d3d3d3
                  |L7.1048|
                          DCD      temp
                  |L7.1052|
00041c  00000000          DCFD     0x0000000000000000 ; 0
000420  00000000
                  |L7.1060|
                          DCD      load_cutoffv
                  |L7.1064|
                          DCD      ||.data||
                  |L7.1068|
                          DCD      GUI_Fontsymbol
                  |L7.1072|
000430  4a696e6b          DCB      "Jinko",0
000434  6f00    
000436  00                DCB      0
000437  00                DCB      0
                  |L7.1080|
                          DCD      GUI_FontHZ20S
                  |L7.1084|
00043c  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000440  878fe698
000444  bee7a4ba
                  |L7.1096|
000448  00                DCB      0
000449  00                DCB      0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L7.1100|
                          DCD      0x00ff8080
                  |L7.1104|
                          DCD      GUI_FontHZ16
                  |L7.1108|
000454  e794b5e5          DCB      231,148,181,229,142,139,0
000458  8e8b00  
00045b  00                DCB      0
                  |L7.1116|
00045c  e794b5e6          DCB      231,148,181,230,181,129,0
000460  b58100  
000463  00                DCB      0
                  |L7.1124|
                          DCD      GUI_Font24_1
                  |L7.1128|
000468  5600              DCB      "V",0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L7.1132|
00046c  4100              DCB      "A",0
00046e  00                DCB      0
00046f  00                DCB      0
                  |L7.1136|
000470  4f565000          DCB      "OVP",0
                  |L7.1140|
000474  4f435000          DCB      "OCP",0
                  |L7.1144|
                          DCD      GUI_FontEN40
                  |L7.1148|
00047c  523a00            DCB      "R:",0
00047f  00                DCB      0
                  |L7.1152|
                          DCD      GUI_FontHZ32
                  |L7.1156|
000484  cea900            DCB      206,169,0
000487  00                DCB      0
                  |L7.1160|
                          DCD      GUI_Fontunit
                  |L7.1164|
00048c  c2b000            DCB      194,176,0
00048f  00                DCB      0
                  |L7.1168|
000490  4300              DCB      "C",0
000492  00                DCB      0
000493  00                DCB      0
                  |L7.1172|
000494  503a00            DCB      "P:",0
000497  00                DCB      0
                  |L7.1176|
000498  5700              DCB      "W",0
00049a  00                DCB      0
00049b  00                DCB      0
                  |L7.1180|
                          DCD      DISS_POW_Voltage
                  |L7.1184|
                          DCD      DISS_POW_Current
                  |L7.1188|
                          DCD      lock
                  |L7.1192|
                          DCD      0x3dcccccd
                  |L7.1196|
0004ac  252e3266          DCB      "%.2f",0
0004b0  00      
0004b1  00                DCB      0
0004b2  00                DCB      0
0004b3  00                DCB      0
                  |L7.1204|
0004b4  e9948100          DCB      233,148,129,0
                  |L7.1208|
0004b8  252e3366          DCB      "%.3f",0
0004bc  00      
0004bd  00                DCB      0
0004be  00                DCB      0
0004bf  00                DCB      0
                  |L7.1216|
0004c0  252e3166          DCB      "%.1f",0
0004c4  00      
0004c5  00                DCB      0
0004c6  00                DCB      0
0004c7  00                DCB      0
                  |L7.1224|
                          DCD      0x40020800
                  |L7.1228|
                          DCD      0x40020000
                  |L7.1232|
                          DCD      mode_sw
                  |L7.1236|
                          DCD      load_sw
                  |L7.1240|
0004d8  f6400195          MOV      r1,#0x895             ;231
0004dc  6860              LDR      r0,[r4,#4]            ;231
0004de  f7fffffe          BL       WM_GetDialogItem
0004e2  4681              MOV      r9,r0                 ;231
0004e4  21ff              MOVS     r1,#0xff              ;232
0004e6  4648              MOV      r0,r9                 ;232
0004e8  f7fffffe          BL       TEXT_SetTextColor
0004ec  49f9              LDR      r1,|L7.2260|
0004ee  4648              MOV      r0,r9                 ;233
0004f0  f7fffffe          BL       TEXT_SetFont
0004f4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004f8  a1f7              ADR      r1,|L7.2264|
0004fa  4648              MOV      r0,r9                 ;235
0004fc  f7fffffe          BL       TEXT_SetText
000500  2001              MOVS     r0,#1                 ;236
000502  7068              STRB     r0,[r5,#1]            ;236
000504  e741              B        |L7.906|
                  |L7.1286|
000506  78a8              LDRB     r0,[r5,#2]            ;252  ; cdelay
000508  1c40              ADDS     r0,r0,#1              ;252
00050a  70a8              STRB     r0,[r5,#2]            ;252
00050c  e6e9              B        |L7.738|
                  |L7.1294|
00050e  f8d48004          LDR      r8,[r4,#4]            ;283
000512  2100              MOVS     r1,#0                 ;284
000514  4640              MOV      r0,r8                 ;284
000516  f7fffffe          BL       WINDOW_SetBkColor
00051a  2300              MOVS     r3,#0                 ;285
00051c  f44f72fa          MOV      r2,#0x1f4             ;285
000520  2103              MOVS     r1,#3                 ;285
000522  4640              MOV      r0,r8                 ;285
000524  f7fffffe          BL       WM_CreateTimer
000528  f640113c          MOV      r1,#0x93c             ;298
00052c  6860              LDR      r0,[r4,#4]            ;298
00052e  f7fffffe          BL       WM_GetDialogItem
000532  4680              MOV      r8,r0                 ;298
000534  21ff              MOVS     r1,#0xff              ;299
000536  4640              MOV      r0,r8                 ;299
000538  f7fffffe          BL       TEXT_SetTextColor
00053c  49e9              LDR      r1,|L7.2276|
00053e  4640              MOV      r0,r8                 ;300
000540  f7fffffe          BL       TEXT_SetFont
000544  f2af1100          ADR      r1,|L7.1096|
000548  4640              MOV      r0,r8                 ;301
00054a  f7fffffe          BL       TEXT_SetText
00054e  f6400102          MOV      r1,#0x802             ;303
000552  6860              LDR      r0,[r4,#4]            ;303
000554  f7fffffe          BL       WM_GetDialogItem
000558  4680              MOV      r8,r0                 ;303
00055a  2101              MOVS     r1,#1                 ;304
00055c  4640              MOV      r0,r8                 ;304
00055e  f7fffffe          BL       BUTTON_SetPressed
000562  49dc              LDR      r1,|L7.2260|
000564  4640              MOV      r0,r8                 ;306
000566  f7fffffe          BL       BUTTON_SetFont
00056a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00056e  a1de              ADR      r1,|L7.2280|
000570  4640              MOV      r0,r8                 ;308
000572  f7fffffe          BL       BUTTON_SetText
000576  f6400103          MOV      r1,#0x803             ;312
00057a  6860              LDR      r0,[r4,#4]            ;312
00057c  f7fffffe          BL       WM_GetDialogItem
000580  4680              MOV      r8,r0                 ;312
000582  49d4              LDR      r1,|L7.2260|
000584  4640              MOV      r0,r8                 ;314
000586  f7fffffe          BL       BUTTON_SetFont
00058a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00058e  a1da              ADR      r1,|L7.2296|
000590  4640              MOV      r0,r8                 ;316
000592  f7fffffe          BL       BUTTON_SetText
000596  f6400104          MOV      r1,#0x804             ;320
00059a  6860              LDR      r0,[r4,#4]            ;320
00059c  f7fffffe          BL       WM_GetDialogItem
0005a0  4680              MOV      r8,r0                 ;320
0005a2  49d9              LDR      r1,|L7.2312|
0005a4  4640              MOV      r0,r8                 ;323
0005a6  f7fffffe          BL       BUTTON_SetFont
0005aa  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005ae  f2af1140          ADR      r1,|L7.1136|
0005b2  4640              MOV      r0,r8                 ;325
0005b4  f7fffffe          BL       BUTTON_SetText
0005b8  f6400105          MOV      r1,#0x805             ;329
0005bc  6860              LDR      r0,[r4,#4]            ;329
0005be  f7fffffe          BL       WM_GetDialogItem
0005c2  4680              MOV      r8,r0                 ;329
0005c4  49d0              LDR      r1,|L7.2312|
0005c6  4640              MOV      r0,r8                 ;331
0005c8  f7fffffe          BL       BUTTON_SetFont
0005cc  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005d0  f2af1160          ADR      r1,|L7.1140|
0005d4  4640              MOV      r0,r8                 ;333
0005d6  f7fffffe          BL       BUTTON_SetText
0005da  f6400106          MOV      r1,#0x806             ;337
0005de  6860              LDR      r0,[r4,#4]            ;337
0005e0  f7fffffe          BL       WM_GetDialogItem
0005e4  4680              MOV      r8,r0                 ;337
0005e6  49bb              LDR      r1,|L7.2260|
0005e8  4640              MOV      r0,r8                 ;339
0005ea  f7fffffe          BL       BUTTON_SetFont
0005ee  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005f2  a1c6              ADR      r1,|L7.2316|
0005f4  4640              MOV      r0,r8                 ;341
0005f6  f7fffffe          BL       BUTTON_SetText
0005fa  f6400107          MOV      r1,#0x807             ;344
0005fe  6860              LDR      r0,[r4,#4]            ;344
000600  f7fffffe          BL       WM_GetDialogItem
000604  4680              MOV      r8,r0                 ;344
000606  4639              MOV      r1,r7                 ;345
000608  4640              MOV      r0,r8                 ;345
00060a  f7fffffe          BL       TEXT_SetTextColor
00060e  49c3              LDR      r1,|L7.2332|
000610  4640              MOV      r0,r8                 ;346
000612  f7fffffe          BL       TEXT_SetFont
000616  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00061a  a1c1              ADR      r1,|L7.2336|
00061c  4640              MOV      r0,r8                 ;348
00061e  f7fffffe          BL       TEXT_SetText
000622  f6400108          MOV      r1,#0x808             ;350
000626  6860              LDR      r0,[r4,#4]            ;350
000628  f7fffffe          BL       WM_GetDialogItem
00062c  4680              MOV      r8,r0                 ;350
00062e  4639              MOV      r1,r7                 ;351
000630  4640              MOV      r0,r8                 ;351
000632  f7fffffe          BL       TEXT_SetTextColor
000636  49b9              LDR      r1,|L7.2332|
000638  4640              MOV      r0,r8                 ;352
00063a  f7fffffe          BL       TEXT_SetFont
00063e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000642  a1b8              ADR      r1,|L7.2340|
000644  4640              MOV      r0,r8                 ;354
000646  f7fffffe          BL       TEXT_SetText
00064a  f44f6102          MOV      r1,#0x820             ;356
00064e  6860              LDR      r0,[r4,#4]            ;356
000650  f7fffffe          BL       WM_GetDialogItem
000654  4680              MOV      r8,r0                 ;356
000656  4639              MOV      r1,r7                 ;357
000658  4640              MOV      r0,r8                 ;357
00065a  f7fffffe          BL       TEXT_SetTextColor
00065e  49af              LDR      r1,|L7.2332|
000660  4640              MOV      r0,r8                 ;358
000662  f7fffffe          BL       TEXT_SetFont
000666  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00066a  f2af2104          ADR      r1,|L7.1128|
00066e  4640              MOV      r0,r8                 ;360
000670  f7fffffe          BL       TEXT_SetText
000674  f6400121          MOV      r1,#0x821             ;362
000678  6860              LDR      r0,[r4,#4]            ;362
00067a  f7fffffe          BL       WM_GetDialogItem
00067e  4680              MOV      r8,r0                 ;362
000680  4639              MOV      r1,r7                 ;363
000682  4640              MOV      r0,r8                 ;363
000684  f7fffffe          BL       TEXT_SetTextColor
000688  49a4              LDR      r1,|L7.2332|
00068a  4640              MOV      r0,r8                 ;364
00068c  f7fffffe          BL       TEXT_SetFont
000690  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000694  f2af212c          ADR      r1,|L7.1132|
000698  4640              MOV      r0,r8                 ;366
00069a  f7fffffe          BL       TEXT_SetText
00069e  f640172e          MOV      r7,#0x92e             ;381
0006a2  4639              MOV      r1,r7                 ;381
0006a4  6860              LDR      r0,[r4,#4]            ;381
0006a6  f7fffffe          BL       WM_GetDialogItem
0006aa  4680              MOV      r8,r0                 ;381
0006ac  68a8              LDR      r0,[r5,#8]            ;382  ; pow_cutoffc
0006ae  f7fffffe          BL       __aeabi_f2d
0006b2  ec410b10          VMOV     d0,r0,r1              ;382
0006b6  ec532b10          VMOV     r2,r3,d0              ;382
0006ba  f2af2104          ADR      r1,|L7.1208|
0006be  4668              MOV      r0,sp                 ;382
0006c0  f7fffffe          BL       __2sprintf
0006c4  4631              MOV      r1,r6                 ;383
0006c6  4640              MOV      r0,r8                 ;383
0006c8  f7fffffe          BL       TEXT_SetTextColor
0006cc  498e              LDR      r1,|L7.2312|
0006ce  4640              MOV      r0,r8                 ;384
0006d0  f7fffffe          BL       TEXT_SetFont
0006d4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006d8  4669              MOV      r1,sp                 ;386
0006da  4640              MOV      r0,r8                 ;386
0006dc  f7fffffe          BL       TEXT_SetText
0006e0  f6400166          MOV      r1,#0x866             ;388
0006e4  6860              LDR      r0,[r4,#4]            ;388
0006e6  f7fffffe          BL       WM_GetDialogItem
0006ea  4680              MOV      r8,r0                 ;388
0006ec  f44f017f          MOV      r1,#0xff0000          ;389
0006f0  4640              MOV      r0,r8                 ;389
0006f2  f7fffffe          BL       TEXT_SetBkColor
0006f6  ee190a90          VMOV     r0,s19                ;390
0006fa  f7fffffe          BL       __aeabi_f2d
0006fe  ec410b10          VMOV     d0,r0,r1              ;390
000702  ec532b10          VMOV     r2,r3,d0              ;390
000706  f2af215c          ADR      r1,|L7.1196|
00070a  4668              MOV      r0,sp                 ;390
00070c  f7fffffe          BL       __2sprintf
000710  4631              MOV      r1,r6                 ;391
000712  4640              MOV      r0,r8                 ;391
000714  f7fffffe          BL       TEXT_SetTextColor
000718  497b              LDR      r1,|L7.2312|
00071a  4640              MOV      r0,r8                 ;392
00071c  f7fffffe          BL       TEXT_SetFont
000720  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000724  4669              MOV      r1,sp                 ;394
000726  4640              MOV      r0,r8                 ;394
000728  f7fffffe          BL       TEXT_SetText
00072c  f6400167          MOV      r1,#0x867             ;396
000730  6860              LDR      r0,[r4,#4]            ;396
000732  f7fffffe          BL       WM_GetDialogItem
000736  4680              MOV      r8,r0                 ;396
000738  ee190a10          VMOV     r0,s18                ;397
00073c  f7fffffe          BL       __aeabi_f2d
000740  ec410b10          VMOV     d0,r0,r1              ;397
000744  ec532b10          VMOV     r2,r3,d0              ;397
000748  f2af2194          ADR      r1,|L7.1208|
00074c  4668              MOV      r0,sp                 ;397
00074e  f7fffffe          BL       __2sprintf
000752  4631              MOV      r1,r6                 ;398
000754  4640              MOV      r0,r8                 ;398
000756  f7fffffe          BL       TEXT_SetTextColor
00075a  496b              LDR      r1,|L7.2312|
00075c  4640              MOV      r0,r8                 ;399
00075e  f7fffffe          BL       TEXT_SetFont
000762  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000766  4669              MOV      r1,sp                 ;401
000768  4640              MOV      r0,r8                 ;401
00076a  f7fffffe          BL       TEXT_SetText
00076e  f6400193          MOV      r1,#0x893             ;403
000772  6860              LDR      r0,[r4,#4]            ;403
000774  f7fffffe          BL       WM_GetDialogItem
000778  4681              MOV      r9,r0                 ;403
00077a  ec532b18          VMOV     r2,r3,d8              ;404
00077e  f2af21d4          ADR      r1,|L7.1196|
000782  4668              MOV      r0,sp                 ;404
000784  f7fffffe          BL       __2sprintf
000788  f64f78ff          MOV      r8,#0xffff            ;405
00078c  4641              MOV      r1,r8                 ;405
00078e  4648              MOV      r0,r9                 ;405
000790  f7fffffe          BL       TEXT_SetTextColor
000794  4964              LDR      r1,|L7.2344|
000796  4648              MOV      r0,r9                 ;406
000798  f7fffffe          BL       TEXT_SetFont
00079c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007a0  4669              MOV      r1,sp                 ;408
0007a2  4648              MOV      r0,r9                 ;408
0007a4  f7fffffe          BL       TEXT_SetText
0007a8  f6400194          MOV      r1,#0x894             ;410
0007ac  6860              LDR      r0,[r4,#4]            ;410
0007ae  f7fffffe          BL       WM_GetDialogItem
0007b2  4681              MOV      r9,r0                 ;410
0007b4  ec532b18          VMOV     r2,r3,d8              ;411
0007b8  f2af3104          ADR      r1,|L7.1208|
0007bc  4668              MOV      r0,sp                 ;411
0007be  f7fffffe          BL       __2sprintf
0007c2  4641              MOV      r1,r8                 ;412
0007c4  4648              MOV      r0,r9                 ;412
0007c6  f7fffffe          BL       TEXT_SetTextColor
0007ca  4957              LDR      r1,|L7.2344|
0007cc  4648              MOV      r0,r9                 ;413
0007ce  f7fffffe          BL       TEXT_SetFont
0007d2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d6  4669              MOV      r1,sp                 ;415
0007d8  4648              MOV      r0,r9                 ;415
0007da  f7fffffe          BL       TEXT_SetText
0007de  f640110b          MOV      r1,#0x90b             ;417
0007e2  6860              LDR      r0,[r4,#4]            ;417
0007e4  f7fffffe          BL       WM_GetDialogItem
0007e8  4681              MOV      r9,r0                 ;417
0007ea  ec532b18          VMOV     r2,r3,d8              ;418
0007ee  f2af3138          ADR      r1,|L7.1208|
0007f2  4668              MOV      r0,sp                 ;418
0007f4  f7fffffe          BL       __2sprintf
0007f8  4641              MOV      r1,r8                 ;419
0007fa  4648              MOV      r0,r9                 ;419
0007fc  f7fffffe          BL       TEXT_SetTextColor
000800  4949              LDR      r1,|L7.2344|
000802  4648              MOV      r0,r9                 ;420
000804  f7fffffe          BL       TEXT_SetFont
000808  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00080c  4669              MOV      r1,sp                 ;422
00080e  4648              MOV      r0,r9                 ;422
000810  f7fffffe          BL       TEXT_SetText
000814  f640110c          MOV      r1,#0x90c             ;424
000818  6860              LDR      r0,[r4,#4]            ;424
00081a  f7fffffe          BL       WM_GetDialogItem
00081e  4680              MOV      r8,r0                 ;424
000820  4631              MOV      r1,r6                 ;425
000822  4640              MOV      r0,r8                 ;425
000824  f7fffffe          BL       TEXT_SetTextColor
000828  4937              LDR      r1,|L7.2312|
00082a  4640              MOV      r0,r8                 ;426
00082c  f7fffffe          BL       TEXT_SetFont
000830  f8db0000          LDR      r0,[r11,#0]           ;427  ; temp
000834  f7fffffe          BL       __aeabi_f2d
000838  ec410b10          VMOV     d0,r0,r1              ;427
00083c  ec532b10          VMOV     r2,r3,d0              ;427
000840  f2af3184          ADR      r1,|L7.1216|
000844  4668              MOV      r0,sp                 ;427
000846  f7fffffe          BL       __2sprintf
00084a  4669              MOV      r1,sp                 ;428
00084c  4640              MOV      r0,r8                 ;428
00084e  f7fffffe          BL       TEXT_SetText
000852  4639              MOV      r1,r7                 ;430
000854  6860              LDR      r0,[r4,#4]            ;430
000856  f7fffffe          BL       WM_GetDialogItem
00085a  4607              MOV      r7,r0                 ;430
00085c  f8da0000          LDR      r0,[r10,#0]           ;431  ; load_cutoffv
000860  f7fffffe          BL       __aeabi_f2d
000864  ec410b10          VMOV     d0,r0,r1              ;431
000868  ec532b10          VMOV     r2,r3,d0              ;431
00086c  f2af31b8          ADR      r1,|L7.1208|
000870  4668              MOV      r0,sp                 ;431
000872  f7fffffe          BL       __2sprintf
000876  4631              MOV      r1,r6                 ;432
000878  4638              MOV      r0,r7                 ;432
00087a  f7fffffe          BL       TEXT_SetTextColor
00087e  4922              LDR      r1,|L7.2312|
000880  4638              MOV      r0,r7                 ;433
000882  f7fffffe          BL       TEXT_SetFont
000886  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00088a  4669              MOV      r1,sp                 ;435
00088c  4638              MOV      r0,r7                 ;435
00088e  f7fffffe          BL       TEXT_SetText
000892  f640113a          MOV      r1,#0x93a             ;436
000896  6860              LDR      r0,[r4,#4]            ;436
000898  f7fffffe          BL       WM_GetDialogItem
00089c  4604              MOV      r4,r0                 ;436
00089e  68a8              LDR      r0,[r5,#8]            ;437  ; pow_cutoffc
0008a0  f7fffffe          BL       __aeabi_f2d
0008a4  ec410b10          VMOV     d0,r0,r1              ;437
0008a8  ec532b10          VMOV     r2,r3,d0              ;437
0008ac  f2af31f8          ADR      r1,|L7.1208|
0008b0  4668              MOV      r0,sp                 ;437
0008b2  f7fffffe          BL       __2sprintf
0008b6  4631              MOV      r1,r6                 ;438
0008b8  4620              MOV      r0,r4                 ;438
0008ba  f7fffffe          BL       TEXT_SetTextColor
0008be  4912              LDR      r1,|L7.2312|
0008c0  4620              MOV      r0,r4                 ;439
0008c2  f7fffffe          BL       TEXT_SetFont
0008c6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008ca  4669              MOV      r1,sp                 ;441
0008cc  4620              MOV      r0,r4                 ;441
0008ce  f7fffffe          BL       TEXT_SetText
0008d2  e474              B        |L7.446|
                  |L7.2260|
                          DCD      GUI_FontHZ16
                  |L7.2264|
0008d8  e58585e7          DCB      229,133,133,231,148,181,228,184,173,0
0008dc  94b5e4b8
0008e0  ad00    
0008e2  00                DCB      0
0008e3  00                DCB      0
                  |L7.2276|
                          DCD      GUI_FontHZ14
                  |L7.2280|
0008e8  e794b5e5          DCB      231,148,181,229,142,139,232,174,190,231,189,174,0
0008ec  8e8be8ae
0008f0  bee7bdae
0008f4  00      
0008f5  00                DCB      0
0008f6  00                DCB      0
0008f7  00                DCB      0
                  |L7.2296|
0008f8  e794b5e6          DCB      231,148,181,230,181,129,232,174,190,231,189,174,0
0008fc  b581e8ae
000900  bee7bdae
000904  00      
000905  00                DCB      0
000906  00                DCB      0
000907  00                DCB      0
                  |L7.2312|
                          DCD      GUI_Font24_1
                  |L7.2316|
00090c  e7b3bbe7          DCB      231,179,187,231,187,159,232,174,190,231,189,174,0
000910  bb9fe8ae
000914  bee7bdae
000918  00      
000919  00                DCB      0
00091a  00                DCB      0
00091b  00                DCB      0
                  |L7.2332|
                          DCD      GUI_FontEN40
                  |L7.2336|
000920  563a00            DCB      "V:",0
000923  00                DCB      0
                  |L7.2340|
000924  493a00            DCB      "I:",0
000927  00                DCB      0
                  |L7.2344|
                          DCD      GUI_FontD24x32
                  |L7.2348|
00092c  e7ff              B        |L7.2350|
                  |L7.2350|
00092e  68a0              LDR      r0,[r4,#8]            ;448
000930  f7fffffe          BL       WM_GetId
000934  e443              B        |L7.446|
;;;547    
                          ENDP


                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate1
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08000000          DCW      0x0800,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  08020053          DCW      0x0802,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080300a3          DCW      0x0803,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080400f3          DCW      0x0804,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  08050143          DCW      0x0805,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  08060193          DCW      0x0806,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0807001c          DCW      0x0807,0x001c
0000b4  00280040          DCW      0x0028,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0808001c          DCW      0x0808,0x001c
0000d0  00690040          DCW      0x0069,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  082000f0          DCW      0x0820,0x00f0
0000ec  00280020          DCW      0x0028,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  082100f0          DCW      0x0821,0x00f0
000108  006a0020          DCW      0x006a,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  0866017c          DCW      0x0866,0x017c
000124  00280035          DCW      0x0028,0x0035
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  08670172          DCW      0x0867,0x0172
000140  005a0041          DCW      0x005a,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  0893005f          DCW      0x0893,0x005f
00015c  00260096          DCW      0x0026,0x0096
000160  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  0894005f          DCW      0x0894,0x005f
000178  00670096          DCW      0x0067,0x0096
00017c  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  08950190          DCW      0x0895,0x0190
000194  00040032          DCW      0x0004,0x0032
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  090b005f          DCW      0x090b,0x005f
0001b0  00a80096          DCW      0x00a8,0x0096
0001b4  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  090c012c          DCW      0x090c,0x012c
0001cc  00020050          DCW      0x0002,0x0050
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  092e0172          DCW      0x092e,0x0172
0001e8  008c0041          DCW      0x008c,0x0041
0001ec  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  093a0172          DCW      0x093a,0x0172
000204  00be0041          DCW      0x00be,0x0041
000208  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  093c017c          DCW      0x093c,0x017c
000220  00080014          DCW      0x0008,0x0014
000224  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  pow_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  cdelay
000002  0000              DCB      0x00,0x00
                  hWinWind
                          DCD      0x00000000
                  pow_cutoffc
                          DCD      0x00000000
                  DIS_POW
                          DCD      0x00000000
                  DIS_R
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\menu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_menu_c_pow_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REVSH|
#line 144
|__asm___6_menu_c_pow_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
