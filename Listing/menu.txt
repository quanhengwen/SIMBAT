; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\menu.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\menu.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\menu.crf --no_multibyte_chars ..\APP\menu.c]
                          THUMB

                          AREA ||i.CreateWindow||, CODE, READONLY, ALIGN=2

                  CreateWindow PROC
;;;509    
;;;510    WM_HWIN CreateWindow(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;511      if(page_sw == face_graph || page_sw == face_menu)
000002  4c2d              LDR      r4,|L1.184|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d00f              BEQ      |L1.42|
00000a  7820              LDRB     r0,[r4,#0]  ; page_sw
00000c  2802              CMP      r0,#2
00000e  d00c              BEQ      |L1.42|
;;;512      {      
;;;513      }else{
;;;514    	  GPIO_SetBits(GPIOA,GPIO_Pin_15);//µç×Ó¸ºÔØOFF
000010  f44f4100          MOV      r1,#0x8000
000014  4829              LDR      r0,|L1.188|
000016  f7fffffe          BL       GPIO_SetBits
;;;515    	  GPIO_ResetBits(GPIOC,GPIO_Pin_1);//¹Ø±ÕµçÔ´Êä³ö
00001a  2102              MOVS     r1,#2
00001c  4828              LDR      r0,|L1.192|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;516    	  Delay_ms(500);
000022  f44f70fa          MOV      r0,#0x1f4
000026  f7fffffe          BL       Delay_ms
                  |L1.42|
;;;517    	  //GPIO_SetBits(GPIOC,GPIO_Pin_13);//¹Ø±ÕµçÔ´Êä³ö¼ÌµçÆ
;;;518    //      IO_OFF();
;;;519    	  
;;;520      }
;;;521      page_sw = face_menu;
00002a  2002              MOVS     r0,#2
00002c  7020              STRB     r0,[r4,#0]
;;;522      track = face_menu;
00002e  4925              LDR      r1,|L1.196|
000030  7008              STRB     r0,[r1,#0]
;;;523      set_sw = set_18;
000032  4925              LDR      r1,|L1.200|
000034  2011              MOVS     r0,#0x11
000036  7008              STRB     r0,[r1,#0]
;;;524      SET_Voltage = pow_v;
000038  4824              LDR      r0,|L1.204|
00003a  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
00003e  6041              STR      r1,[r0,#4]  ; Run_Control
;;;525      SET_Voltage_Laod = pow_v * 10 +20;
000040  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
000044  2214              MOVS     r2,#0x14
000046  eb010181          ADD      r1,r1,r1,LSL #2
00004a  eb020141          ADD      r1,r2,r1,LSL #1
00004e  60c1              STR      r1,[r0,#0xc]  ; Run_Control
;;;526      SET_Current = pow_c;
000050  f8d010a0          LDR      r1,[r0,#0xa0]  ; Run_Control
000054  6081              STR      r1,[r0,#8]  ; Run_Control
;;;527      pow_cutoffc = (float)set_pow_cutoffc/1000;
000056  481e              LDR      r0,|L1.208|
000058  4d1f              LDR      r5,|L1.216|
00005a  ed900a05          VLDR     s0,[r0,#0x14]
00005e  eef80ac0          VCVT.F32.S32 s1,s0
000062  ed9f0a1c          VLDR     s0,|L1.212|
000066  ee801a80          VDIV.F32 s2,s1,s0
00006a  ed851a02          VSTR     s2,[r5,#8]
;;;528      load_cutoffv = (float)set_load_cutoffv/1000;
00006e  edd00a04          VLDR     s1,[r0,#0x10]
000072  481a              LDR      r0,|L1.220|
000074  eef80ae0          VCVT.F32.S32 s1,s1
000078  ee801a80          VDIV.F32 s2,s1,s0
00007c  ed801a00          VSTR     s2,[r0,#0]
;;;529      pass = 0;
000080  4817              LDR      r0,|L1.224|
000082  2400              MOVS     r4,#0
000084  7004              STRB     r4,[r0,#0]
;;;530      mode_sw = mode_pow;
000086  4917              LDR      r1,|L1.228|
000088  2003              MOVS     r0,#3
00008a  7008              STRB     r0,[r1,#0]
;;;531    //  USART_SendData(USART3,1);//连接电源
;;;532      TM1650_SET_LED(0x68,0x70);
00008c  2170              MOVS     r1,#0x70
00008e  2068              MOVS     r0,#0x68
000090  f7fffffe          BL       TM1650_SET_LED
;;;533      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000094  f44f5180          MOV      r1,#0x1000
000098  4813              LDR      r0,|L1.232|
00009a  f7fffffe          BL       GPIO_ResetBits
;;;534      hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
00009e  f7fffffe          BL       WM_GetDesktopWindow
0000a2  4603              MOV      r3,r0
0000a4  9400              STR      r4,[sp,#0]
0000a6  4a11              LDR      r2,|L1.236|
0000a8  2113              MOVS     r1,#0x13
0000aa  4811              LDR      r0,|L1.240|
0000ac  9401              STR      r4,[sp,#4]
0000ae  f7fffffe          BL       GUI_CreateDialogBox
0000b2  6068              STR      r0,[r5,#4]  ; hWinWind
;;;535      return hWinWind;
;;;536    }
0000b4  bd7c              POP      {r2-r6,pc}
;;;537    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L1.184|
                          DCD      page_sw
                  |L1.188|
                          DCD      0x40020000
                  |L1.192|
                          DCD      0x40020800
                  |L1.196|
                          DCD      track
                  |L1.200|
                          DCD      set_sw
                  |L1.204|
                          DCD      Run_Control
                  |L1.208|
                          DCD      InFlashSave
                  |L1.212|
0000d4  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.216|
                          DCD      ||.data||
                  |L1.220|
                          DCD      load_cutoffv
                  |L1.224|
                          DCD      pass
                  |L1.228|
                          DCD      mode_sw
                  |L1.232|
                          DCD      0x40020c00
                  |L1.236|
                          DCD      _cbDialog
                  |L1.240|
                          DCD      ||.constdata||

                          AREA ||i.DEL_POW||, CODE, READONLY, ALIGN=2

                  DEL_POW PROC
;;;761    }
;;;762    void DEL_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;763    {
;;;764    	switch(set_sw){
000004  482c              LDR      r0,|L2.184|
000006  7800              LDRB     r0,[r0,#0]  ; set_sw
;;;765    		case set_18:
;;;766            {
;;;767    			WM_HWIN hItem;
;;;768    //            WM_InvalidateWindow(hWinWind);
;;;769                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000008  4a2c              LDR      r2,|L2.188|
;;;770    			if(bit > 1)
;;;771    			{
;;;772    				bit --;
;;;773    				set_limit[bit-1] = '\0';
00000a  4f2d              LDR      r7,|L2.192|
00000c  2400              MOVS     r4,#0
00000e  4d2d              LDR      r5,|L2.196|
;;;774    			}
;;;775    			if(bit == dot_flag)
000010  4e2d              LDR      r6,|L2.200|
000012  2811              CMP      r0,#0x11              ;764
000014  d01c              BEQ      |L2.80|
000016  2812              CMP      r0,#0x12              ;764
000018  d033              BEQ      |L2.130|
00001a  2858              CMP      r0,#0x58              ;764
00001c  d14a              BNE      |L2.180|
;;;776    			{
;;;777    				dot_flag = 0;
;;;778    			}
;;;779    			TEXT_SetText(hItem,set_limit);
;;;780    		}break;
;;;781    		case set_19:
;;;782            {
;;;783    			WM_HWIN hItem;
;;;784    //            WM_InvalidateWindow(hWinWind);
;;;785                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;786    			if(bit > 1)
;;;787    			{
;;;788    				bit --;
;;;789    				set_limit[bit-1] = '\0';
;;;790    			}
;;;791    			if(bit == dot_flag)
;;;792    			{
;;;793    				dot_flag = 0;
;;;794    			}
;;;795    			TEXT_SetText(hItem,set_limit);
;;;796    		}break;
;;;797    		case set_89:
;;;798            {
;;;799                WM_HWIN hItem;
;;;800    //            WM_InvalidateWindow(hWinWind);
;;;801                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00001e  f640112e          MOV      r1,#0x92e
000022  6850              LDR      r0,[r2,#4]  ; hWinWind
000024  f7fffffe          BL       WM_GetDialogItem
;;;802    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;803    			{
;;;804    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;805    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;806    			}
;;;807    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;808    			{
;;;809    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;810    			}
;;;811    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491d              LDR      r1,|L2.192|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f6400166          MOV      r1,#0x866             ;769
000054  6850              LDR      r0,[r2,#4]            ;769  ; hWinWind
000056  f7fffffe          BL       WM_GetDialogItem
00005a  7829              LDRB     r1,[r5,#0]            ;770  ; bit
00005c  2901              CMP      r1,#1                 ;770
00005e  d906              BLS      |L2.110|
000060  7829              LDRB     r1,[r5,#0]            ;772  ; bit
000062  1e49              SUBS     r1,r1,#1              ;772
000064  7029              STRB     r1,[r5,#0]            ;772
000066  7829              LDRB     r1,[r5,#0]            ;773  ; bit
000068  4439              ADD      r1,r1,r7              ;773
00006a  f8014c01          STRB     r4,[r1,#-1]           ;773
                  |L2.110|
00006e  7829              LDRB     r1,[r5,#0]            ;775  ; bit
000070  7832              LDRB     r2,[r6,#0]            ;775  ; dot_flag
000072  4291              CMP      r1,r2                 ;775
000074  d100              BNE      |L2.120|
000076  7034              STRB     r4,[r6,#0]            ;777
                  |L2.120|
000078  e8bd41f0          POP      {r4-r8,lr}            ;779
00007c  4910              LDR      r1,|L2.192|
00007e  f7ffbffe          B.W      TEXT_SetText
                  |L2.130|
000082  f6400167          MOV      r1,#0x867             ;785
000086  6850              LDR      r0,[r2,#4]            ;785  ; hWinWind
000088  f7fffffe          BL       WM_GetDialogItem
00008c  7829              LDRB     r1,[r5,#0]            ;786  ; bit
00008e  2901              CMP      r1,#1                 ;786
000090  d906              BLS      |L2.160|
000092  7829              LDRB     r1,[r5,#0]            ;788  ; bit
000094  1e49              SUBS     r1,r1,#1              ;788
000096  7029              STRB     r1,[r5,#0]            ;788
000098  7829              LDRB     r1,[r5,#0]            ;789  ; bit
00009a  4439              ADD      r1,r1,r7              ;789
00009c  f8014c01          STRB     r4,[r1,#-1]           ;789
                  |L2.160|
0000a0  7829              LDRB     r1,[r5,#0]            ;791  ; bit
0000a2  7832              LDRB     r2,[r6,#0]            ;791  ; dot_flag
0000a4  4291              CMP      r1,r2                 ;791
0000a6  d100              BNE      |L2.170|
0000a8  7034              STRB     r4,[r6,#0]            ;793
                  |L2.170|
0000aa  e8bd41f0          POP      {r4-r8,lr}            ;795
0000ae  4904              LDR      r1,|L2.192|
0000b0  f7ffbffe          B.W      TEXT_SetText
                  |L2.180|
;;;812    		}break;
;;;813    	}
;;;814    }
0000b4  e8bd81f0          POP      {r4-r8,pc}
;;;815    
                          ENDP

                  |L2.184|
                          DCD      set_sw
                  |L2.188|
                          DCD      ||.data||
                  |L2.192|
                          DCD      set_limit
                  |L2.196|
                          DCD      bit
                  |L2.200|
                          DCD      dot_flag

                          AREA ||i.DISP_POW||, CODE, READONLY, ALIGN=2

                  DISP_POW PROC
;;;544    
;;;545    void DISP_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;546    {
;;;547    	WM_HWIN hItem;
;;;548    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000004  4d40              LDR      r5,|L3.264|
000006  f6400166          MOV      r1,#0x866
00000a  6868              LDR      r0,[r5,#4]  ; hWinWind
00000c  f7fffffe          BL       WM_GetDialogItem
;;;549    	if(set_sw == set_18)
000010  4c3e              LDR      r4,|L3.268|
000012  7821              LDRB     r1,[r4,#0]  ; set_sw
;;;550    	{
;;;551    		 TEXT_SetBkColor(hItem, GUI_BLUE);
000014  f44f067f          MOV      r6,#0xff0000
;;;552    	}else{
;;;553    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000018  f06f4770          MVN      r7,#0xf0000000
00001c  2911              CMP      r1,#0x11              ;549
00001e  d051              BEQ      |L3.196|
000020  4639              MOV      r1,r7
000022  f7fffffe          BL       TEXT_SetBkColor
                  |L3.38|
;;;554    	}
;;;555    	
;;;556    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
000026  f6400167          MOV      r1,#0x867
00002a  6868              LDR      r0,[r5,#4]  ; hWinWind
00002c  f7fffffe          BL       WM_GetDialogItem
;;;557    	if(set_sw == set_19)
000030  7821              LDRB     r1,[r4,#0]  ; set_sw
000032  2912              CMP      r1,#0x12
000034  d04a              BEQ      |L3.204|
;;;558    	{
;;;559    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;560    	}else{
;;;561    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000036  4639              MOV      r1,r7
000038  f7fffffe          BL       TEXT_SetBkColor
                  |L3.60|
;;;562    	}
;;;563    	
;;;564    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00003c  f640112e          MOV      r1,#0x92e
000040  6868              LDR      r0,[r5,#4]  ; hWinWind
000042  f7fffffe          BL       WM_GetDialogItem
;;;565    	if(set_sw == set_89)
000046  7821              LDRB     r1,[r4,#0]  ; set_sw
000048  2958              CMP      r1,#0x58
00004a  d043              BEQ      |L3.212|
;;;566    	{
;;;567    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;568    	}else{
;;;569    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
00004c  4639              MOV      r1,r7
00004e  f7fffffe          BL       TEXT_SetBkColor
                  |L3.82|
;;;570    	}
;;;571    	
;;;572    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000052  f640113a          MOV      r1,#0x93a
000056  6868              LDR      r0,[r5,#4]  ; hWinWind
000058  f7fffffe          BL       WM_GetDialogItem
;;;573    	if(set_sw == set_90)
00005c  7821              LDRB     r1,[r4,#0]  ; set_sw
00005e  2959              CMP      r1,#0x59
000060  d03c              BEQ      |L3.220|
;;;574    	{
;;;575    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;576    	}else{
;;;577    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000062  4639              MOV      r1,r7
000064  f7fffffe          BL       TEXT_SetBkColor
                  |L3.104|
;;;578    	}
;;;579    	
;;;580    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_1);
000068  f6400102          MOV      r1,#0x802
00006c  6868              LDR      r0,[r5,#4]  ; hWinWind
00006e  f7fffffe          BL       WM_GetDialogItem
;;;581    	if(set_sw == set_18)
000072  7821              LDRB     r1,[r4,#0]  ; set_sw
000074  2911              CMP      r1,#0x11
000076  d035              BEQ      |L3.228|
;;;582    	{
;;;583    		 BUTTON_SetPressed(hItem,1);
;;;584    	}else{
;;;585    		 BUTTON_SetPressed(hItem,0);
000078  2100              MOVS     r1,#0
00007a  f7fffffe          BL       BUTTON_SetPressed
                  |L3.126|
;;;586    	}
;;;587    
;;;588    	
;;;589        hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_2);
00007e  f6400103          MOV      r1,#0x803
000082  6868              LDR      r0,[r5,#4]  ; hWinWind
000084  f7fffffe          BL       WM_GetDialogItem
;;;590        if(set_sw == set_19)
000088  7821              LDRB     r1,[r4,#0]  ; set_sw
00008a  2912              CMP      r1,#0x12
00008c  d02e              BEQ      |L3.236|
;;;591    	{
;;;592    		BUTTON_SetPressed(hItem,1);
;;;593    	}else{
;;;594    		BUTTON_SetPressed(hItem,0);
00008e  2100              MOVS     r1,#0
000090  f7fffffe          BL       BUTTON_SetPressed
                  |L3.148|
;;;595    	}
;;;596    
;;;597    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_3);
000094  f6400104          MOV      r1,#0x804
000098  6868              LDR      r0,[r5,#4]  ; hWinWind
00009a  f7fffffe          BL       WM_GetDialogItem
;;;598    	if(set_sw == set_89)
00009e  7821              LDRB     r1,[r4,#0]  ; set_sw
0000a0  2958              CMP      r1,#0x58
0000a2  d027              BEQ      |L3.244|
;;;599    	{
;;;600    		 BUTTON_SetPressed(hItem,1);
;;;601    	}else{
;;;602    		BUTTON_SetPressed(hItem,0);
0000a4  2100              MOVS     r1,#0
0000a6  f7fffffe          BL       BUTTON_SetPressed
                  |L3.170|
;;;603    	}
;;;604    	
;;;605    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_4);
0000aa  f6400105          MOV      r1,#0x805
0000ae  6868              LDR      r0,[r5,#4]  ; hWinWind
0000b0  f7fffffe          BL       WM_GetDialogItem
;;;606    	if(set_sw == set_90)
0000b4  7821              LDRB     r1,[r4,#0]  ; set_sw
0000b6  2959              CMP      r1,#0x59
0000b8  d020              BEQ      |L3.252|
;;;607    	{
;;;608    		 BUTTON_SetPressed(hItem,1);
;;;609    	}else{
;;;610    		BUTTON_SetPressed(hItem,0);
0000ba  e8bd41f0          POP      {r4-r8,lr}
0000be  2100              MOVS     r1,#0
0000c0  f7ffbffe          B.W      BUTTON_SetPressed
                  |L3.196|
0000c4  4631              MOV      r1,r6                 ;551
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  e7ac              B        |L3.38|
                  |L3.204|
0000cc  4631              MOV      r1,r6                 ;559
0000ce  f7fffffe          BL       TEXT_SetBkColor
0000d2  e7b3              B        |L3.60|
                  |L3.212|
0000d4  4631              MOV      r1,r6                 ;567
0000d6  f7fffffe          BL       TEXT_SetBkColor
0000da  e7ba              B        |L3.82|
                  |L3.220|
0000dc  4631              MOV      r1,r6                 ;575
0000de  f7fffffe          BL       TEXT_SetBkColor
0000e2  e7c1              B        |L3.104|
                  |L3.228|
0000e4  2101              MOVS     r1,#1                 ;583
0000e6  f7fffffe          BL       BUTTON_SetPressed
0000ea  e7c8              B        |L3.126|
                  |L3.236|
0000ec  2101              MOVS     r1,#1                 ;592
0000ee  f7fffffe          BL       BUTTON_SetPressed
0000f2  e7cf              B        |L3.148|
                  |L3.244|
0000f4  2101              MOVS     r1,#1                 ;600
0000f6  f7fffffe          BL       BUTTON_SetPressed
0000fa  e7d6              B        |L3.170|
                  |L3.252|
0000fc  e8bd41f0          POP      {r4-r8,lr}            ;608
000100  2101              MOVS     r1,#1                 ;608
000102  f7ffbffe          B.W      BUTTON_SetPressed
;;;611    	}
;;;612    }
;;;613    
                          ENDP

000106  0000              DCW      0x0000
                  |L3.264|
                          DCD      ||.data||
                  |L3.268|
                          DCD      set_sw

                          AREA ||i.INPUT_POW||, CODE, READONLY, ALIGN=2

                  INPUT_POW PROC
;;;818    void INPUT_POW(char* num);            
;;;819    void INPUT_POW(char* num){ 
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;820    	u8 i;
;;;821        switch(set_sw){
000006  4857              LDR      r0,|L4.356|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;822    		case set_18:
;;;823            {
;;;824                WM_HWIN hItem;
;;;825    //            WM_InvalidateWindow(hWinWind);
;;;826                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00000a  4b57              LDR      r3,|L4.360|
;;;827    			if(bit < 6)
;;;828    			{
;;;829    				strcat(set_limit,num);
;;;830    			}
;;;831    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4d57              LDR      r5,|L4.364|
00000e  4c58              LDR      r4,|L4.368|
000010  2a11              CMP      r2,#0x11              ;821
000012  d01e              BEQ      |L4.82|
000014  2a12              CMP      r2,#0x12              ;821
000016  d042              BEQ      |L4.158|
000018  2a58              CMP      r2,#0x58              ;821
00001a  d066              BEQ      |L4.234|
00001c  2a59              CMP      r2,#0x59              ;821
00001e  d17d              BNE      |L4.284|
;;;832    			{
;;;833    				
;;;834    			}else{			
;;;835    				
;;;836    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;837    				{
;;;838    					dot_flag = bit;
;;;839    				}
;;;840    				bit ++;
;;;841    			}
;;;842    			TEXT_SetText(hItem,set_limit);
;;;843    //            switch(bit){
;;;844    //                case 1:
;;;845    //                {
;;;846    //					for(i=0;i<6;i++)
;;;847    //					{
;;;848    //						set_limit[i] = '\0';
;;;849    //					}
;;;850    //                    pow_v = atoi(num) * 100;
;;;851    //                    strcat(set_limit,num);            
;;;852    //                    TEXT_SetText(hItem,set_limit);
;;;853    //                    bit = 2;
;;;854    //                    break;
;;;855    //                }
;;;856    //                case 2:
;;;857    //                {
;;;858    //                    strcat(set_limit,num);
;;;859    //					if(set_limit[bit-1] == 0x62){
;;;860    //						set_limit[bit-1] = '\0';
;;;861    //						set_limit[bit-2] = '\0';
;;;862    //						bit -= 1;
;;;863    //						pow_v = pow_v - atoi(num) * 100;
;;;864    //						TEXT_SetText(hItem,set_limit);
;;;865    //						break;
;;;866    //					}
;;;867    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;868    //                    {
;;;869    //                        dot_flag = 1;
;;;870    //                    }else{
;;;871    //                        pow_v = pow_v * 10 + atoi(num) * 100;
;;;872    //                    }           
;;;873    //                    TEXT_SetText(hItem,set_limit);
;;;874    //                    bit = 3;
;;;875    //                    break;
;;;876    //                }
;;;877    //                case 3:
;;;878    //                {
;;;879    //                    strcat(set_limit,num);
;;;880    //					if(set_limit[bit-1] == 0x62){
;;;881    //						set_limit[bit-1] = '\0';
;;;882    //						set_limit[bit-2] = '\0';
;;;883    //						bit -= 1;
;;;884    //						TEXT_SetText(hItem,set_limit);
;;;885    //						break;
;;;886    //					}
;;;887    //                    if(dot_flag == 0)
;;;888    //                    {
;;;889    //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;890    //                        {                            
;;;891    //                            dot_flag = 2;
;;;892    //                        }else{
;;;893    //                            pow_v = /*3000*/ 6200;
;;;894    //                        }
;;;895    //                    }else{
;;;896    //						pow_v = pow_v + atoi(num) * 10;
;;;897    //                    }
;;;898    //                    TEXT_SetText(hItem,set_limit);                  
;;;899    //                    bit = 4;
;;;900    //                    break;
;;;901    //                }
;;;902    //                case 4:
;;;903    //                {
;;;904    //                    strcat(set_limit,num);
;;;905    //					if(set_limit[bit-1] == 0x62){
;;;906    //						set_limit[bit-1] = '\0';
;;;907    //						set_limit[bit-2] = '\0';
;;;908    //						bit -= 1;
;;;909    //						TEXT_SetText(hItem,set_limit);
;;;910    //						pow_v = pow_v - atoi(num) * 10;
;;;911    //						break;
;;;912    //					}
;;;913    //                    if(dot_flag == 0)
;;;914    //                    {
;;;915    //                        pow_v = /*3000*/ 6200;
;;;916    //                    }else if(dot_flag == 2){
;;;917    //                        pow_v = pow_v + atoi(num) * 10;
;;;918    //                    }else{
;;;919    //                        pow_v = pow_v + atoi(num);
;;;920    //                    }
;;;921    //                    TEXT_SetText(hItem,set_limit);                   
;;;922    //                    bit = 5;
;;;923    //                    break;
;;;924    //                }
;;;925    //                case 5:
;;;926    //                {
;;;927    //                    strcat(set_limit,num);
;;;928    //					if(set_limit[bit-1] == 0x62){
;;;929    //						set_limit[bit-1] = '\0';
;;;930    //						set_limit[bit-2] = '\0';
;;;931    //						bit -= 1;
;;;932    //						TEXT_SetText(hItem,set_limit);
;;;933    //						break;
;;;934    //					}
;;;935    //                    if(dot_flag == 0)
;;;936    //                    {
;;;937    //                        pow_v = /*3000*/ 6200;
;;;938    //                    }else if(dot_flag == 1){
;;;939    //                        pow_v = pow_v;
;;;940    //                    }else{
;;;941    //                        pow_v = pow_v + atoi(num);
;;;942    //                    }
;;;943    //                    TEXT_SetText(hItem,set_limit);                   
;;;944    //                    bit = 1;
;;;945    //                    break;
;;;946    //                }
;;;947    //            }
;;;948                break;
;;;949            }
;;;950            case set_19:
;;;951            {
;;;952                WM_HWIN hItem;
;;;953    //            WM_InvalidateWindow(hWinWind);
;;;954                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;955    			if(bit < 7)
;;;956    			{
;;;957    				strcat(set_limit,num);
;;;958    			}
;;;959    			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;960    			{
;;;961    				
;;;962    			}else{			
;;;963    				
;;;964    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;965    				{
;;;966    					dot_flag = bit;
;;;967    				}
;;;968    				bit ++;
;;;969    			}
;;;970    			TEXT_SetText(hItem,set_limit);
;;;971    //            switch(bit){
;;;972    //                case 1:
;;;973    //                {
;;;974    //					for(i=0;i<6;i++)
;;;975    //					{
;;;976    //						set_limit[i] = '\0';
;;;977    //					}
;;;978    //                    pow_c = atoi(num) * 1000;
;;;979    //                    strcat(set_limit,num);            
;;;980    //                    TEXT_SetText(hItem,set_limit);
;;;981    //                    bit = 2;
;;;982    //                    break;
;;;983    //                }
;;;984    //                case 2:
;;;985    //                {
;;;986    //                    strcat(set_limit,num);            
;;;987    //                    TEXT_SetText(hItem,set_limit);
;;;988    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;989    //                    {
;;;990    //                        dot_flag = 1;
;;;991    //                    }else{
;;;992    //                        pow_c = pow_c * 10 + atoi(num) * 1000;
;;;993    //                    }
;;;994    //                    bit = 3;
;;;995    //                    break;
;;;996    //                }
;;;997    //                case 3:
;;;998    //                {
;;;999    //                    strcat(set_limit,num);
;;;1000   //                    TEXT_SetText(hItem,set_limit);
;;;1001   //                    if(dot_flag == 0)
;;;1002   //                    {
;;;1003   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1004   //                        {                            
;;;1005   //                            dot_flag = 2;
;;;1006   //                        }else{
;;;1007   //                            pow_c = 5000;
;;;1008   //                        }
;;;1009   //                    }else{
;;;1010   //                        pow_c = pow_c + atoi(num) * 100;
;;;1011   //                    }
;;;1012   //                                       
;;;1013   //                    bit = 4;
;;;1014   //                    break;
;;;1015   //                }
;;;1016   //                case 4:
;;;1017   //                {
;;;1018   //                    strcat(set_limit,num);
;;;1019   //                    TEXT_SetText(hItem,set_limit);
;;;1020   //                    if(dot_flag == 0)
;;;1021   //                    {
;;;1022   //                        pow_c = 5000;
;;;1023   //                    }else if(dot_flag == 2){
;;;1024   //                        pow_c = pow_c + atoi(num) * 100;
;;;1025   //                    }else{
;;;1026   //                        pow_c = pow_c + atoi(num) * 10;
;;;1027   //                    }
;;;1028   //                                       
;;;1029   //                    bit = 5;
;;;1030   //                    break;
;;;1031   //                }
;;;1032   //                case 5:
;;;1033   //                {
;;;1034   //                    strcat(set_limit,num);
;;;1035   //                    TEXT_SetText(hItem,set_limit);
;;;1036   //                    if(dot_flag == 0)
;;;1037   //                    {
;;;1038   //                        pow_c = 5000;
;;;1039   //                    }else if(dot_flag == 1){
;;;1040   //                        pow_c = pow_c + atoi(num);
;;;1041   //                    }else{
;;;1042   //                        pow_c = pow_c + atoi(num) * 10;
;;;1043   //                    }
;;;1044   //                                       
;;;1045   //                    bit = 6;
;;;1046   //                    break;
;;;1047   //                }
;;;1048   //                case 6:
;;;1049   //                {
;;;1050   //                    strcat(set_limit,num);
;;;1051   //                    TEXT_SetText(hItem,set_limit);
;;;1052   //                    if(dot_flag == 0)
;;;1053   //                    {
;;;1054   //                        pow_c = 0;
;;;1055   //                    }else if(dot_flag == 2){
;;;1056   //                        pow_c = pow_c + atoi(num);
;;;1057   //                    }                 
;;;1058   //                    bit = 1;
;;;1059   //                    break;
;;;1060   //                }
;;;1061   //            }
;;;1062           }
;;;1063           break;
;;;1064   		case set_89:
;;;1065           {
;;;1066               WM_HWIN hItem;
;;;1067   //            WM_InvalidateWindow(hWinWind);
;;;1068               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;1069   			if(bit < 7)
;;;1070   			{
;;;1071   				strcat(set_limit,num);
;;;1072   			}
;;;1073   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1074   			{
;;;1075   				
;;;1076   			}else{			
;;;1077   				
;;;1078   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1079   				{
;;;1080   					dot_flag = bit;
;;;1081   				}
;;;1082   				bit ++;
;;;1083   			}
;;;1084   			TEXT_SetText(hItem,set_limit);
;;;1085   //            switch(bit){
;;;1086   //                case 1:
;;;1087   //                {
;;;1088   //					for(i=0;i<6;i++)
;;;1089   //					{
;;;1090   //						set_limit[i] = '\0';
;;;1091   //					}
;;;1092   //                    set_pow_cutoffc = atoi(num) * 1000;
;;;1093   //                    strcat(set_limit,num);            
;;;1094   //                    TEXT_SetText(hItem,set_limit);
;;;1095   //                    bit = 2;
;;;1096   //                    break;
;;;1097   //                }
;;;1098   //                case 2:
;;;1099   //                {
;;;1100   //                    strcat(set_limit,num);            
;;;1101   //                    TEXT_SetText(hItem,set_limit);
;;;1102   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1103   //                    {
;;;1104   //                        dot_flag = 1;
;;;1105   //                    }else{
;;;1106   //                        set_pow_cutoffc = set_pow_cutoffc * 10 + atoi(num) * 1000;
;;;1107   //                    }
;;;1108   //                    bit = 3;
;;;1109   //                    break;
;;;1110   //                }
;;;1111   //                case 3:
;;;1112   //                {
;;;1113   //                    strcat(set_limit,num);
;;;1114   //                    TEXT_SetText(hItem,set_limit);
;;;1115   //                    if(dot_flag == 0)
;;;1116   //                    {
;;;1117   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1118   //                        {                            
;;;1119   //                            dot_flag = 2;
;;;1120   //                        }else{
;;;1121   //                            set_pow_cutoffc = 5000;
;;;1122   //                        }
;;;1123   //                    }else{
;;;1124   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1125   //                    }
;;;1126   //                                       
;;;1127   //                    bit = 4;
;;;1128   //                    break;
;;;1129   //                }
;;;1130   //                case 4:
;;;1131   //                {
;;;1132   //                    strcat(set_limit,num);
;;;1133   //                    TEXT_SetText(hItem,set_limit);
;;;1134   //                    if(dot_flag == 0)
;;;1135   //                    {
;;;1136   //                        set_pow_cutoffc = 5000;
;;;1137   //                    }else if(dot_flag == 2){
;;;1138   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1139   //                    }else{
;;;1140   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1141   //                    }
;;;1142   //                                       
;;;1143   //                    bit = 5;
;;;1144   //                    break;
;;;1145   //                }
;;;1146   //                case 5:
;;;1147   //                {
;;;1148   //                    strcat(set_limit,num);
;;;1149   //                    TEXT_SetText(hItem,set_limit);
;;;1150   //                    if(dot_flag == 0)
;;;1151   //                    {
;;;1152   //                        set_pow_cutoffc = 5000;
;;;1153   //                    }else if(dot_flag == 1){
;;;1154   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1155   //                    }else{
;;;1156   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1157   //                    }
;;;1158   //                                       
;;;1159   //                    bit = 6;
;;;1160   //                    break;
;;;1161   //                }
;;;1162   //                case 6:
;;;1163   //                {
;;;1164   //                    strcat(set_limit,num);
;;;1165   //                    TEXT_SetText(hItem,set_limit);
;;;1166   //                    if(dot_flag == 0)
;;;1167   //                    {
;;;1168   //                        set_pow_cutoffc = 0;
;;;1169   //                    }else if(dot_flag == 2){
;;;1170   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1171   //                    }                 
;;;1172   //                    bit = 1;
;;;1173   //                    break;
;;;1174   //                }
;;;1175   //            }
;;;1176           }
;;;1177           break;
;;;1178   		case set_90:
;;;1179           {
;;;1180               WM_HWIN hItem;
;;;1181   //            WM_InvalidateWindow(hWinWind);
;;;1182               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000020  f640113a          MOV      r1,#0x93a
000024  6858              LDR      r0,[r3,#4]  ; hWinWind
000026  f7fffffe          BL       WM_GetDialogItem
00002a  4607              MOV      r7,r0
;;;1183   			if(bit < 7)
00002c  7820              LDRB     r0,[r4,#0]  ; bit
00002e  2807              CMP      r0,#7
000030  d203              BCS      |L4.58|
;;;1184   			{
;;;1185   				strcat(set_limit,num);
000032  4631              MOV      r1,r6
000034  484f              LDR      r0,|L4.372|
000036  f7fffffe          BL       strcat
                  |L4.58|
;;;1186   			}
;;;1187   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003a  7828              LDRB     r0,[r5,#0]  ; dot_flag
00003c  b128              CBZ      r0,|L4.74|
00003e  a14e              ADR      r1,|L4.376|
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       strcmp
000046  2800              CMP      r0,#0
000048  d069              BEQ      |L4.286|
                  |L4.74|
;;;1188   			{
;;;1189   				
;;;1190   			}else{			
;;;1191   				
;;;1192   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004a  7828              LDRB     r0,[r5,#0]  ; dot_flag
00004c  2800              CMP      r0,#0
00004e  d076              BEQ      |L4.318|
000050  e07c              B        |L4.332|
                  |L4.82|
000052  f6400166          MOV      r1,#0x866             ;826
000056  6858              LDR      r0,[r3,#4]            ;826  ; hWinWind
000058  f7fffffe          BL       WM_GetDialogItem
00005c  4607              MOV      r7,r0                 ;826
00005e  7820              LDRB     r0,[r4,#0]            ;827  ; bit
000060  2806              CMP      r0,#6                 ;827
000062  d203              BCS      |L4.108|
000064  4631              MOV      r1,r6                 ;829
000066  4843              LDR      r0,|L4.372|
000068  f7fffffe          BL       strcat
                  |L4.108|
00006c  7828              LDRB     r0,[r5,#0]            ;831  ; dot_flag
00006e  b120              CBZ      r0,|L4.122|
000070  a141              ADR      r1,|L4.376|
000072  4630              MOV      r0,r6                 ;831
000074  f7fffffe          BL       strcmp
000078  b158              CBZ      r0,|L4.146|
                  |L4.122|
00007a  7828              LDRB     r0,[r5,#0]            ;836  ; dot_flag
00007c  b930              CBNZ     r0,|L4.140|
00007e  a13e              ADR      r1,|L4.376|
000080  4630              MOV      r0,r6                 ;836
000082  f7fffffe          BL       strcmp
000086  b908              CBNZ     r0,|L4.140|
000088  7820              LDRB     r0,[r4,#0]            ;838  ; bit
00008a  7028              STRB     r0,[r5,#0]            ;838
                  |L4.140|
00008c  7820              LDRB     r0,[r4,#0]            ;840  ; bit
00008e  1c40              ADDS     r0,r0,#1              ;840
000090  7020              STRB     r0,[r4,#0]            ;840
                  |L4.146|
000092  4638              MOV      r0,r7                 ;842
000094  e8bd41f0          POP      {r4-r8,lr}            ;842
000098  4936              LDR      r1,|L4.372|
00009a  f7ffbffe          B.W      TEXT_SetText
                  |L4.158|
00009e  f6400167          MOV      r1,#0x867             ;954
0000a2  6858              LDR      r0,[r3,#4]            ;954  ; hWinWind
0000a4  f7fffffe          BL       WM_GetDialogItem
0000a8  4607              MOV      r7,r0                 ;954
0000aa  7820              LDRB     r0,[r4,#0]            ;955  ; bit
0000ac  2807              CMP      r0,#7                 ;955
0000ae  d203              BCS      |L4.184|
0000b0  4631              MOV      r1,r6                 ;957
0000b2  4830              LDR      r0,|L4.372|
0000b4  f7fffffe          BL       strcat
                  |L4.184|
0000b8  7828              LDRB     r0,[r5,#0]            ;959  ; dot_flag
0000ba  b120              CBZ      r0,|L4.198|
0000bc  a12e              ADR      r1,|L4.376|
0000be  4630              MOV      r0,r6                 ;959
0000c0  f7fffffe          BL       strcmp
0000c4  b158              CBZ      r0,|L4.222|
                  |L4.198|
0000c6  7828              LDRB     r0,[r5,#0]            ;964  ; dot_flag
0000c8  b930              CBNZ     r0,|L4.216|
0000ca  a12b              ADR      r1,|L4.376|
0000cc  4630              MOV      r0,r6                 ;964
0000ce  f7fffffe          BL       strcmp
0000d2  b908              CBNZ     r0,|L4.216|
0000d4  7820              LDRB     r0,[r4,#0]            ;966  ; bit
0000d6  7028              STRB     r0,[r5,#0]            ;966
                  |L4.216|
0000d8  7820              LDRB     r0,[r4,#0]            ;968  ; bit
0000da  1c40              ADDS     r0,r0,#1              ;968
0000dc  7020              STRB     r0,[r4,#0]            ;968
                  |L4.222|
0000de  4638              MOV      r0,r7                 ;970
0000e0  e8bd41f0          POP      {r4-r8,lr}            ;970
0000e4  4923              LDR      r1,|L4.372|
0000e6  f7ffbffe          B.W      TEXT_SetText
                  |L4.234|
0000ea  f640112e          MOV      r1,#0x92e             ;1068
0000ee  6858              LDR      r0,[r3,#4]            ;1068  ; hWinWind
0000f0  f7fffffe          BL       WM_GetDialogItem
0000f4  4607              MOV      r7,r0                 ;1068
0000f6  7820              LDRB     r0,[r4,#0]            ;1069  ; bit
0000f8  2807              CMP      r0,#7                 ;1069
0000fa  d203              BCS      |L4.260|
0000fc  4631              MOV      r1,r6                 ;1071
0000fe  481d              LDR      r0,|L4.372|
000100  f7fffffe          BL       strcat
                  |L4.260|
000104  7828              LDRB     r0,[r5,#0]            ;1073  ; dot_flag
000106  b120              CBZ      r0,|L4.274|
000108  a11b              ADR      r1,|L4.376|
00010a  4630              MOV      r0,r6                 ;1073
00010c  f7fffffe          BL       strcmp
000110  b178              CBZ      r0,|L4.306|
                  |L4.274|
000112  7828              LDRB     r0,[r5,#0]            ;1078  ; dot_flag
000114  b950              CBNZ     r0,|L4.300|
000116  a118              ADR      r1,|L4.376|
000118  4630              MOV      r0,r6                 ;1078
00011a  e002              B        |L4.290|
                  |L4.284|
00011c  e01f              B        |L4.350|
                  |L4.286|
00011e  e018              B        |L4.338|
000120  e00d              B        |L4.318|
                  |L4.290|
000122  f7fffffe          BL       strcmp
000126  b908              CBNZ     r0,|L4.300|
000128  7820              LDRB     r0,[r4,#0]            ;1080  ; bit
00012a  7028              STRB     r0,[r5,#0]            ;1080
                  |L4.300|
00012c  7820              LDRB     r0,[r4,#0]            ;1082  ; bit
00012e  1c40              ADDS     r0,r0,#1              ;1082
000130  7020              STRB     r0,[r4,#0]            ;1082
                  |L4.306|
000132  4638              MOV      r0,r7                 ;1084
000134  e8bd41f0          POP      {r4-r8,lr}            ;1084
000138  490e              LDR      r1,|L4.372|
00013a  f7ffbffe          B.W      TEXT_SetText
                  |L4.318|
00013e  a10e              ADR      r1,|L4.376|
000140  4630              MOV      r0,r6
000142  f7fffffe          BL       strcmp
000146  b908              CBNZ     r0,|L4.332|
;;;1193   				{
;;;1194   					dot_flag = bit;
000148  7820              LDRB     r0,[r4,#0]  ; bit
00014a  7028              STRB     r0,[r5,#0]
                  |L4.332|
;;;1195   				}
;;;1196   				bit ++;
00014c  7820              LDRB     r0,[r4,#0]  ; bit
00014e  1c40              ADDS     r0,r0,#1
000150  7020              STRB     r0,[r4,#0]
                  |L4.338|
;;;1197   			}
;;;1198   			TEXT_SetText(hItem,set_limit);			
000152  4638              MOV      r0,r7
000154  e8bd41f0          POP      {r4-r8,lr}
000158  4906              LDR      r1,|L4.372|
00015a  f7ffbffe          B.W      TEXT_SetText
                  |L4.350|
;;;1199   		}
;;;1200       }    
;;;1201   }
00015e  e8bd81f0          POP      {r4-r8,pc}
;;;1202   
                          ENDP

000162  0000              DCW      0x0000
                  |L4.356|
                          DCD      set_sw
                  |L4.360|
                          DCD      ||.data||
                  |L4.364|
                          DCD      dot_flag
                  |L4.368|
                          DCD      bit
                  |L4.372|
                          DCD      set_limit
                  |L4.376|
000178  2e00              DCB      ".",0
00017a  00                DCB      0
00017b  00                DCB      0

                          AREA ||i.MENU_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  MENU_SET PROC
;;;615    void MENU_SET(void);
;;;616    void MENU_SET(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;617    {
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;618        vu8 i;
;;;619        char buf[6];    
;;;620    
;;;621        float dis_output_v;
;;;622        float dis_output_c; 
;;;623        
;;;624        if(SET_Voltage > /*3000*/ 6200)
00000a  4dd9              LDR      r5,|L5.880|
00000c  6869              LDR      r1,[r5,#4]  ; Run_Control
00000e  f6410038          MOV      r0,#0x1838
000012  4281              CMP      r1,r0
000014  d900              BLS      |L5.24|
;;;625        {
;;;626          SET_Voltage = /*3000*/ 6200;
000016  6068              STR      r0,[r5,#4]  ; Run_Control
                  |L5.24|
;;;627        }
;;;628        if(SET_Current > 10000)
000018  68a8              LDR      r0,[r5,#8]  ; Run_Control
00001a  f2427610          MOV      r6,#0x2710
00001e  42b0              CMP      r0,r6
000020  d900              BLS      |L5.36|
;;;629        {
;;;630          SET_Current = 10000;
000022  60ae              STR      r6,[r5,#8]  ; Run_Control
                  |L5.36|
;;;631        }
;;;632        switch(set_sw){
000024  48d3              LDR      r0,|L5.884|
000026  7800              LDRB     r0,[r0,#0]  ; set_sw
;;;633    
;;;634            case set_18:
;;;635            {           
;;;636                WM_HWIN hItem;
;;;637    //            WM_InvalidateWindow(hWinWind);
;;;638                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
;;;639    			if(dot_flag == 0){
;;;640    				pow_v = atoi(set_limit)*100;					
000028  4fd3              LDR      r7,|L5.888|
;;;641    			}else if(dot_flag != 0){
;;;642    				memset(buf, '\0', sizeof(buf));
;;;643    				strncpy(buf,set_limit,dot_flag + 2);
;;;644    				pow_v = atof(buf)*100;
;;;645    			}
;;;646    			if(pow_v > 6000)
;;;647    			{
;;;648    				pow_v = 6000;
;;;649    			}
;;;650                SET_Voltage = pow_v;
;;;651                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;652                {
;;;653                    SET_Voltage = 0;
;;;654                }
;;;655    			SET_Voltage_Laod = SET_Voltage * 10 +10;
;;;656                dis_output_v = (float)SET_Voltage/100;
;;;657                
;;;658                sprintf(buf,"%.2f",dis_output_v);
;;;659                TEXT_SetText(hItem,buf);
;;;660                
;;;661                                                                         
;;;662                                
;;;663                Write_Limits();
;;;664                bit = 1;
00002a  f8df9350          LDR      r9,|L5.892|
00002e  f8dfb350          LDR      r11,|L5.896|
000032  2400              MOVS     r4,#0                 ;638
000034  f8dfa34c          LDR      r10,|L5.900|
000038  f04f0801          MOV      r8,#1
00003c  2811              CMP      r0,#0x11              ;632
00003e  d05f              BEQ      |L5.256|
;;;665                dot_flag = 0;
;;;666    			memset(set_limit, '\0', sizeof(set_limit));
;;;667                break; 
;;;668             }
;;;669             case set_19:
;;;670             {           
;;;671                WM_HWIN hItem;
;;;672    //            WM_InvalidateWindow(hWinWind);
;;;673                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;674    			if(dot_flag == 0){
;;;675    				pow_c = atoi(set_limit)*1000;					
;;;676    			}else if(dot_flag != 0){
;;;677    				memset(buf, '\0', sizeof(buf));
;;;678    				strncpy(buf,set_limit,dot_flag + 3);
;;;679    				pow_c = atof(buf)*1000;
000040  ed9f8bd1          VLDR     d8,|L5.904|
;;;680    			}
;;;681                  
;;;682                if(pow_c > 10000)
;;;683                {
;;;684                    pow_c = 10000;               
;;;685                }
;;;686    			SET_Current = pow_c;
;;;687                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;688                {
;;;689                    SET_Current = 0;
;;;690                }
;;;691                dis_output_c = (float)SET_Current/1000;
000044  ed9f9ad2          VLDR     s18,|L5.912|
000048  2812              CMP      r0,#0x12              ;632
00004a  d07d              BEQ      |L5.328|
;;;692                sprintf(buf,"%.3f",dis_output_c);
;;;693                TEXT_SetText(hItem,buf);            
;;;694                       
;;;695                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;696                                                     
;;;697                Write_Limits();
;;;698                bit = 1;
;;;699                dot_flag = 0;
;;;700    			memset(set_limit, '\0', sizeof(set_limit));
;;;701                break; 
;;;702             }
;;;703             case set_89:
;;;704             {           
;;;705                WM_HWIN hItem;
;;;706    //            WM_InvalidateWindow(hWinWind);
;;;707                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;708    			if(dot_flag == 0){
;;;709    				set_load_cutoffv = atoi(set_limit)*1000;					
00004c  4dd1              LDR      r5,|L5.916|
00004e  2858              CMP      r0,#0x58              ;632
000050  d07b              BEQ      |L5.330|
000052  2859              CMP      r0,#0x59              ;632
000054  d14f              BNE      |L5.246|
;;;710    			}else if(dot_flag != 0){
;;;711    				memset(buf, '\0', sizeof(buf));
;;;712    				strncpy(buf,set_limit,dot_flag + 3);
;;;713    				set_load_cutoffv = atof(buf)*1000;
;;;714    			}
;;;715                if(set_load_cutoffv > 60000)
;;;716                {
;;;717                    set_load_cutoffv = 60000;               
;;;718                }
;;;719                load_cutoffv = (float)set_load_cutoffv/1000;
;;;720                sprintf(buf,"%.3f",load_cutoffv);
;;;721                TEXT_SetText(hItem,buf);            
;;;722                                                     
;;;723                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
;;;724                bit = 1;
;;;725                dot_flag = 0;
;;;726    			memset(set_limit, '\0', sizeof(set_limit));
;;;727                break; 
;;;728             }
;;;729    		 case set_90:
;;;730             {           
;;;731                WM_HWIN hItem;
;;;732    //            WM_InvalidateWindow(hWinWind);
;;;733                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000056  f640113a          MOV      r1,#0x93a
00005a  f8db0004          LDR      r0,[r11,#4]  ; hWinWind
00005e  f7fffffe          BL       WM_GetDialogItem
000062  9000              STR      r0,[sp,#0]
;;;734    			if(dot_flag == 0){
000064  f89a0000          LDRB     r0,[r10,#0]  ; dot_flag
000068  2800              CMP      r0,#0
00006a  d06f              BEQ      |L5.332|
;;;735    				set_pow_cutoffc = atoi(set_limit)*1000;					
;;;736    			}else if(dot_flag != 0){
00006c  f89a0000          LDRB     r0,[r10,#0]  ; dot_flag
000070  b1a0              CBZ      r0,|L5.156|
;;;737    				memset(buf, '\0', sizeof(buf));
000072  9401              STR      r4,[sp,#4]
000074  9402              STR      r4,[sp,#8]
;;;738    				strncpy(buf,set_limit,dot_flag + 3);
000076  f89a2000          LDRB     r2,[r10,#0]  ; dot_flag
00007a  4639              MOV      r1,r7
00007c  1cd2              ADDS     r2,r2,#3
00007e  a801              ADD      r0,sp,#4
000080  f7fffffe          BL       strncpy
;;;739    				set_pow_cutoffc = atof(buf)*1000;
000084  a801              ADD      r0,sp,#4
000086  f7fffffe          BL       __hardfp_atof
00008a  ec532b18          VMOV     r2,r3,d8
00008e  ec510b10          VMOV     r0,r1,d0
000092  f7fffffe          BL       __aeabi_dmul
000096  f7fffffe          BL       __aeabi_d2iz
00009a  6168              STR      r0,[r5,#0x14]  ; InFlashSave
                  |L5.156|
;;;740    			}
;;;741                  
;;;742                if(set_pow_cutoffc > 10000)
00009c  6968              LDR      r0,[r5,#0x14]  ; InFlashSave
00009e  42b0              CMP      r0,r6
0000a0  dd00              BLE      |L5.164|
;;;743                {
;;;744                    set_pow_cutoffc = 10000;               
0000a2  616e              STR      r6,[r5,#0x14]  ; InFlashSave
                  |L5.164|
;;;745                }
;;;746    
;;;747                pow_cutoffc = (float)set_pow_cutoffc/1000;
0000a4  ed950a05          VLDR     s0,[r5,#0x14]
0000a8  eef80ac0          VCVT.F32.S32 s1,s0
0000ac  ee800a89          VDIV.F32 s0,s1,s18
0000b0  ed8b0a02          VSTR     s0,[r11,#8]
;;;748                sprintf(buf,"%.3f",pow_cutoffc);
0000b4  ee100a10          VMOV     r0,s0
0000b8  f7fffffe          BL       __aeabi_f2d
0000bc  ec410b10          VMOV     d0,r0,r1
0000c0  a1b5              ADR      r1,|L5.920|
0000c2  ec532b10          VMOV     r2,r3,d0
0000c6  a801              ADD      r0,sp,#4
0000c8  f7fffffe          BL       __2sprintf
;;;749                TEXT_SetText(hItem,buf);            
0000cc  a901              ADD      r1,sp,#4
0000ce  9800              LDR      r0,[sp,#0]
0000d0  f7fffffe          BL       TEXT_SetText
;;;750                       
;;;751                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
0000d4  f640013e          MOV      r1,#0x83e
0000d8  f8db0004          LDR      r0,[r11,#4]  ; hWinWind
0000dc  f7fffffe          BL       WM_GetDialogItem
;;;752                                                     
;;;753                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
0000e0  4aac              LDR      r2,|L5.916|
0000e2  2128              MOVS     r1,#0x28
0000e4  48ae              LDR      r0,|L5.928|
0000e6  f7fffffe          BL       Flash_Write32BitDatas
;;;754                bit = 1;
0000ea  f8898000          STRB     r8,[r9,#0]
;;;755                dot_flag = 0;
0000ee  f88a4000          STRB     r4,[r10,#0]
;;;756    			memset(set_limit, '\0', sizeof(set_limit));
0000f2  603c              STR      r4,[r7,#0]  ; set_limit
0000f4  713c              STRB     r4,[r7,#4]
                  |L5.246|
;;;757                break; 
;;;758             }
;;;759             default:break;
;;;760         }
;;;761    }
0000f6  b003              ADD      sp,sp,#0xc
0000f8  ecbd8b04          VPOP     {d8-d9}
0000fc  e8bd8ff0          POP      {r4-r11,pc}
                  |L5.256|
000100  f6400166          MOV      r1,#0x866             ;638
000104  f8db0004          LDR      r0,[r11,#4]           ;638  ; hWinWind
000108  f7fffffe          BL       WM_GetDialogItem
00010c  4606              MOV      r6,r0                 ;638
00010e  f89a0000          LDRB     r0,[r10,#0]           ;639  ; dot_flag
000112  b3e0              CBZ      r0,|L5.398|
000114  f89a0000          LDRB     r0,[r10,#0]           ;641  ; dot_flag
000118  b1d8              CBZ      r0,|L5.338|
00011a  9401              STR      r4,[sp,#4]            ;642
00011c  9402              STR      r4,[sp,#8]            ;642
00011e  f89a2000          LDRB     r2,[r10,#0]           ;643  ; dot_flag
000122  4995              LDR      r1,|L5.888|
000124  1c92              ADDS     r2,r2,#2              ;643
000126  a801              ADD      r0,sp,#4              ;643
000128  f7fffffe          BL       strncpy
00012c  a801              ADD      r0,sp,#4              ;644
00012e  f7fffffe          BL       __hardfp_atof
000132  ed9f1b9c          VLDR     d1,|L5.932|
000136  ec510b10          VMOV     r0,r1,d0              ;644
00013a  ec532b11          VMOV     r2,r3,d1              ;644
00013e  f7fffffe          BL       __aeabi_dmul
000142  f7fffffe          BL       __aeabi_d2uiz
000146  e002              B        |L5.334|
                  |L5.328|
000148  e04b              B        |L5.482|
                  |L5.330|
00014a  e0b1              B        |L5.688|
                  |L5.332|
00014c  e107              B        |L5.862|
                  |L5.334|
00014e  f8c50098          STR      r0,[r5,#0x98]         ;644  ; Run_Control
                  |L5.338|
000152  f8d51098          LDR      r1,[r5,#0x98]         ;646  ; Run_Control
000156  f2417070          MOV      r0,#0x1770            ;646
00015a  4281              CMP      r1,r0                 ;646
00015c  d901              BLS      |L5.354|
00015e  f8c50098          STR      r0,[r5,#0x98]         ;648  ; Run_Control
                  |L5.354|
000162  f8d50098          LDR      r0,[r5,#0x98]         ;650  ; Run_Control
000166  6068              STR      r0,[r5,#4]            ;650  ; Run_Control
000168  6869              LDR      r1,[r5,#4]            ;651  ; Run_Control
00016a  2064              MOVS     r0,#0x64              ;651
00016c  fbb1f0f0          UDIV     r0,r1,r0              ;651
000170  68a9              LDR      r1,[r5,#8]            ;651  ; Run_Control
000172  4348              MULS     r0,r1,r0              ;651
000174  498d              LDR      r1,|L5.940|
000176  4288              CMP      r0,r1                 ;651
000178  d900              BLS      |L5.380|
00017a  606c              STR      r4,[r5,#4]            ;653  ; Run_Control
                  |L5.380|
00017c  6868              LDR      r0,[r5,#4]            ;655  ; Run_Control
00017e  210a              MOVS     r1,#0xa               ;655
000180  eb000080          ADD      r0,r0,r0,LSL #2       ;655
000184  eb010040          ADD      r0,r1,r0,LSL #1       ;655
000188  60e8              STR      r0,[r5,#0xc]          ;655  ; Run_Control
00018a  6868              LDR      r0,[r5,#4]            ;656  ; Run_Control
00018c  e000              B        |L5.400|
                  |L5.398|
00018e  e020              B        |L5.466|
                  |L5.400|
000190  ee000a10          VMOV     s0,r0                 ;656
000194  eef80a40          VCVT.F32.U32 s1,s0                 ;656
000198  ed9f1a85          VLDR     s2,|L5.944|
00019c  ee800a81          VDIV.F32 s0,s1,s2              ;656
0001a0  ee100a10          VMOV     r0,s0                 ;658
0001a4  f7fffffe          BL       __aeabi_f2d
0001a8  ec410b10          VMOV     d0,r0,r1              ;658
0001ac  a181              ADR      r1,|L5.948|
0001ae  ec532b10          VMOV     r2,r3,d0              ;658
0001b2  a801              ADD      r0,sp,#4              ;658
0001b4  f7fffffe          BL       __2sprintf
0001b8  a901              ADD      r1,sp,#4              ;659
0001ba  4630              MOV      r0,r6                 ;659
0001bc  f7fffffe          BL       TEXT_SetText
0001c0  f7fffffe          BL       Write_Limits
0001c4  f8898000          STRB     r8,[r9,#0]            ;664
0001c8  f88a4000          STRB     r4,[r10,#0]           ;665
0001cc  603c              STR      r4,[r7,#0]            ;666  ; set_limit
0001ce  713c              STRB     r4,[r7,#4]            ;666
0001d0  e791              B        |L5.246|
                  |L5.466|
0001d2  4869              LDR      r0,|L5.888|
0001d4  f7fffffe          BL       atoi
0001d8  2164              MOVS     r1,#0x64              ;640
0001da  4348              MULS     r0,r1,r0              ;640
0001dc  f8c50098          STR      r0,[r5,#0x98]         ;640  ; Run_Control
0001e0  e7b7              B        |L5.338|
                  |L5.482|
0001e2  f6400167          MOV      r1,#0x867             ;673
0001e6  f8db0004          LDR      r0,[r11,#4]           ;673  ; hWinWind
0001ea  f7fffffe          BL       WM_GetDialogItem
0001ee  9000              STR      r0,[sp,#0]            ;673
0001f0  f89a0000          LDRB     r0,[r10,#0]           ;674  ; dot_flag
0001f4  b3e8              CBZ      r0,|L5.626|
0001f6  f89a0000          LDRB     r0,[r10,#0]           ;676  ; dot_flag
0001fa  b1a8              CBZ      r0,|L5.552|
0001fc  9401              STR      r4,[sp,#4]            ;677
0001fe  9402              STR      r4,[sp,#8]            ;677
000200  f89a2000          LDRB     r2,[r10,#0]           ;678  ; dot_flag
000204  495c              LDR      r1,|L5.888|
000206  1cd2              ADDS     r2,r2,#3              ;678
000208  a801              ADD      r0,sp,#4              ;678
00020a  f7fffffe          BL       strncpy
00020e  a801              ADD      r0,sp,#4              ;679
000210  f7fffffe          BL       __hardfp_atof
000214  ec532b18          VMOV     r2,r3,d8              ;679
000218  ec510b10          VMOV     r0,r1,d0              ;679
00021c  f7fffffe          BL       __aeabi_dmul
000220  f7fffffe          BL       __aeabi_d2uiz
000224  f8c500a0          STR      r0,[r5,#0xa0]         ;679  ; Run_Control
                  |L5.552|
000228  f8d500a0          LDR      r0,[r5,#0xa0]         ;682  ; Run_Control
00022c  42b0              CMP      r0,r6                 ;682
00022e  d901              BLS      |L5.564|
000230  f8c560a0          STR      r6,[r5,#0xa0]         ;684  ; Run_Control
                  |L5.564|
000234  f8d500a0          LDR      r0,[r5,#0xa0]         ;686  ; Run_Control
000238  60a8              STR      r0,[r5,#8]            ;686  ; Run_Control
00023a  6869              LDR      r1,[r5,#4]            ;687  ; Run_Control
00023c  2064              MOVS     r0,#0x64              ;687
00023e  fbb1f0f0          UDIV     r0,r1,r0              ;687
000242  68a9              LDR      r1,[r5,#8]            ;687  ; Run_Control
000244  4348              MULS     r0,r1,r0              ;687
000246  4959              LDR      r1,|L5.940|
000248  4288              CMP      r0,r1                 ;687
00024a  d900              BLS      |L5.590|
00024c  60ac              STR      r4,[r5,#8]            ;689  ; Run_Control
                  |L5.590|
00024e  68a8              LDR      r0,[r5,#8]            ;691  ; Run_Control
000250  ee000a10          VMOV     s0,r0                 ;691
000254  eef80a40          VCVT.F32.U32 s1,s0                 ;691
000258  ee800a89          VDIV.F32 s0,s1,s18             ;691
00025c  ee100a10          VMOV     r0,s0                 ;692
000260  f7fffffe          BL       __aeabi_f2d
000264  ec410b10          VMOV     d0,r0,r1              ;692
000268  a14b              ADR      r1,|L5.920|
00026a  ec532b10          VMOV     r2,r3,d0              ;692
00026e  a801              ADD      r0,sp,#4              ;692
000270  e000              B        |L5.628|
                  |L5.626|
000272  e014              B        |L5.670|
                  |L5.628|
000274  f7fffffe          BL       __2sprintf
000278  a901              ADD      r1,sp,#4              ;693
00027a  9800              LDR      r0,[sp,#0]            ;693
00027c  f7fffffe          BL       TEXT_SetText
000280  f640013e          MOV      r1,#0x83e             ;695
000284  f8db0004          LDR      r0,[r11,#4]           ;695  ; hWinWind
000288  f7fffffe          BL       WM_GetDialogItem
00028c  f7fffffe          BL       Write_Limits
000290  f8898000          STRB     r8,[r9,#0]            ;698
000294  f88a4000          STRB     r4,[r10,#0]           ;699
000298  603c              STR      r4,[r7,#0]            ;700  ; set_limit
00029a  713c              STRB     r4,[r7,#4]            ;700
00029c  e72b              B        |L5.246|
                  |L5.670|
00029e  4836              LDR      r0,|L5.888|
0002a0  f7fffffe          BL       atoi
0002a4  f44f717a          MOV      r1,#0x3e8             ;675
0002a8  4348              MULS     r0,r1,r0              ;675
0002aa  f8c500a0          STR      r0,[r5,#0xa0]         ;675  ; Run_Control
0002ae  e7bb              B        |L5.552|
                  |L5.688|
0002b0  f640112e          MOV      r1,#0x92e             ;707
0002b4  f8db0004          LDR      r0,[r11,#4]           ;707  ; hWinWind
0002b8  f7fffffe          BL       WM_GetDialogItem
0002bc  4606              MOV      r6,r0                 ;707
0002be  f89a0000          LDRB     r0,[r10,#0]           ;708  ; dot_flag
0002c2  b3e0              CBZ      r0,|L5.830|
0002c4  f89a0000          LDRB     r0,[r10,#0]           ;710  ; dot_flag
0002c8  b1a0              CBZ      r0,|L5.756|
0002ca  9401              STR      r4,[sp,#4]            ;711
0002cc  9402              STR      r4,[sp,#8]            ;711
0002ce  f89a2000          LDRB     r2,[r10,#0]           ;712  ; dot_flag
0002d2  4929              LDR      r1,|L5.888|
0002d4  1cd2              ADDS     r2,r2,#3              ;712
0002d6  a801              ADD      r0,sp,#4              ;712
0002d8  f7fffffe          BL       strncpy
0002dc  a801              ADD      r0,sp,#4              ;713
0002de  f7fffffe          BL       __hardfp_atof
0002e2  ec532b18          VMOV     r2,r3,d8              ;713
0002e6  ec510b10          VMOV     r0,r1,d0              ;713
0002ea  f7fffffe          BL       __aeabi_dmul
0002ee  f7fffffe          BL       __aeabi_d2iz
0002f2  6128              STR      r0,[r5,#0x10]         ;713  ; InFlashSave
                  |L5.756|
0002f4  6929              LDR      r1,[r5,#0x10]         ;715  ; InFlashSave
0002f6  f64e2060          MOV      r0,#0xea60            ;715
0002fa  4281              CMP      r1,r0                 ;715
0002fc  dd00              BLE      |L5.768|
0002fe  6128              STR      r0,[r5,#0x10]         ;717  ; InFlashSave
                  |L5.768|
000300  ed950a04          VLDR     s0,[r5,#0x10]         ;719
000304  482d              LDR      r0,|L5.956|
000306  eef80ac0          VCVT.F32.S32 s1,s0                 ;719
00030a  ee800a89          VDIV.F32 s0,s1,s18             ;719
00030e  ed800a00          VSTR     s0,[r0,#0]            ;719
000312  ee100a10          VMOV     r0,s0                 ;720
000316  f7fffffe          BL       __aeabi_f2d
00031a  ec410b10          VMOV     d0,r0,r1              ;720
00031e  a11e              ADR      r1,|L5.920|
000320  ec532b10          VMOV     r2,r3,d0              ;720
000324  a801              ADD      r0,sp,#4              ;720
000326  f7fffffe          BL       __2sprintf
00032a  a901              ADD      r1,sp,#4              ;721
00032c  4630              MOV      r0,r6                 ;721
00032e  f7fffffe          BL       TEXT_SetText
000332  4a18              LDR      r2,|L5.916|
000334  2128              MOVS     r1,#0x28              ;723
000336  481a              LDR      r0,|L5.928|
000338  f7fffffe          BL       Flash_Write32BitDatas
00033c  e000              B        |L5.832|
                  |L5.830|
00033e  e006              B        |L5.846|
                  |L5.832|
000340  f8898000          STRB     r8,[r9,#0]            ;724
000344  f88a4000          STRB     r4,[r10,#0]           ;725
000348  603c              STR      r4,[r7,#0]            ;726  ; set_limit
00034a  713c              STRB     r4,[r7,#4]            ;726
00034c  e6d3              B        |L5.246|
                  |L5.846|
00034e  480a              LDR      r0,|L5.888|
000350  f7fffffe          BL       atoi
000354  f44f717a          MOV      r1,#0x3e8             ;709
000358  4348              MULS     r0,r1,r0              ;709
00035a  6128              STR      r0,[r5,#0x10]         ;709  ; InFlashSave
00035c  e7ca              B        |L5.756|
                  |L5.862|
00035e  4806              LDR      r0,|L5.888|
000360  f7fffffe          BL       atoi
000364  f44f717a          MOV      r1,#0x3e8             ;735
000368  4348              MULS     r0,r1,r0              ;735
00036a  6168              STR      r0,[r5,#0x14]         ;735  ; InFlashSave
00036c  e696              B        |L5.156|
;;;762    void DEL_POW(void)
                          ENDP

00036e  0000              DCW      0x0000
                  |L5.880|
                          DCD      Run_Control
                  |L5.884|
                          DCD      set_sw
                  |L5.888|
                          DCD      set_limit
                  |L5.892|
                          DCD      bit
                  |L5.896|
                          DCD      ||.data||
                  |L5.900|
                          DCD      dot_flag
                  |L5.904|
000388  00000000          DCFD     0x408f400000000000 ; 1000
00038c  408f4000
                  |L5.912|
000390  447a0000          DCFS     0x447a0000 ; 1000
                  |L5.916|
                          DCD      InFlashSave
                  |L5.920|
000398  252e3366          DCB      "%.3f",0
00039c  00      
00039d  00                DCB      0
00039e  00                DCB      0
00039f  00                DCB      0
                  |L5.928|
                          DCD      0x080e0000
                  |L5.932|
0003a4  00000000          DCFD     0x4059000000000000 ; 100
0003a8  40590000
                  |L5.940|
                          DCD      0x0003d477
                  |L5.944|
0003b0  42c80000          DCFS     0x42c80000 ; 100
                  |L5.948|
0003b4  252e3266          DCB      "%.2f",0
0003b8  00      
0003b9  00                DCB      0
0003ba  00                DCB      0
0003bb  00                DCB      0
                  |L5.956|
                          DCD      load_cutoffv

                          AREA ||i.ResetPow||, CODE, READONLY, ALIGN=2

                  ResetPow PROC
;;;537    
;;;538    WM_HWIN ResetPow(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;539        hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L6.32|
000010  2113              MOVS     r1,#0x13
000012  4804              LDR      r0,|L6.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L6.40|
00001a  6048              STR      r0,[r1,#4]  ; hWinWind
;;;540    //    WM_InvalidateWindow(hWinWind);
;;;541        return hWinWind;
;;;542    }
00001c  bd1c              POP      {r2-r4,pc}
;;;543    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      _cbDialog
                  |L6.36|
                          DCD      ||.constdata||
                  |L6.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  _cbDialog PROC
;;;82     
;;;83     static void _cbDialog(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;84       WM_HWIN hItem;
;;;85       int     NCode;
;;;86       int     Id;
;;;87       static vu8 status_flash;
;;;88       char buf[5];    
;;;89     
;;;90       float dis_output_v = (float)SET_Voltage/100;
00000c  48fe              LDR      r0,|L7.1032|
00000e  6841              LDR      r1,[r0,#4]  ; Run_Control
000010  ee001a10          VMOV     s0,r1
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf0afc          VLDR     s1,|L7.1036|
00001c  eec09a20          VDIV.F32 s19,s0,s1
;;;91       float dis_output_c = (float)SET_Current/1000;
000020  6880              LDR      r0,[r0,#8]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  eddf0af9          VLDR     s1,|L7.1040|
00002e  ee809a20          VDIV.F32 s18,s0,s1
;;;92       static u8 cdelay;
;;;93     
;;;94       
;;;95       // USER START (Optionally insert additional variables)
;;;96       // USER END
;;;97     
;;;98       switch (pMsg->MsgId) {
000032  6820              LDR      r0,[r4,#0]
;;;99     
;;;100    	case WM_PAINT://无效化重绘
;;;101    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;102            GUI_FillRect(0,25,480,26);//画一条实线
;;;103    	    GUI_FillRect(280,26,281,215);//画一条实线
;;;104    		GUI_FillRect(0,215,480,216);//画一条实线
;;;105            GUI_SetColor(GUI_ORANGE);
;;;106            GUI_SetFont(&GUI_Fontsymbol);
;;;107            GUI_UC_SetEncodeUTF8();
;;;108            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;109            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;110            GUI_SetColor(GUI_WHITE);
;;;111            GUI_SetFont(&GUI_FontHZ20S);
;;;112            GUI_UC_SetEncodeUTF8();
;;;113            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明       
;;;114            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;115    		GUI_SetColor(GUI_LIGHTBLUE);
;;;116            GUI_SetFont(&GUI_FontHZ16);
;;;117            GUI_DispStringAt("电压",290, 50-10);
;;;118            GUI_DispStringAt("电流",290, 100-10);
;;;119            GUI_SetColor(GUI_GREEN);//设置前景色为白色
000034  f44f487f          MOV      r8,#0xff00
000038  280f              CMP      r0,#0xf               ;98
00003a  d018              BEQ      |L7.110|
;;;120    //      GUI_SetFont(&GUI_FontD24x32);//
;;;121    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;122    // 		GUI_DispFloatFix(DISS_POW_Voltage,5,2);//显示电压值
;;;123    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;124    // 		GUI_DispFloatFix(DISS_POW_Current,5,2);//显示电流值
;;;125            GUI_SetFont(&GUI_Font24_1);
;;;126            GUI_DispStringAt("V",435,50-10);
;;;127            GUI_DispStringAt("A",435,100-10);
;;;128            GUI_DispStringAt("V",435,150-10);
;;;129            GUI_DispStringAt("A",435,200-10);
;;;130    		GUI_SetColor(GUI_LIGHTBLUE);
;;;131    		GUI_DispStringAt("OVP",290,150-10);
;;;132            GUI_DispStringAt("OCP",290,200-10);
;;;133    
;;;134    //        GUI_SetFont(&GUI_FontEN40);
;;;135    //        GUI_SetColor(GUI_LIGHTGRAY);
;;;136    //        GUI_DispStringAt("C:", 28, 190);
;;;137    //        GUI_SetColor(GUI_LIGHTGRAY);
;;;138    //        GUI_DispStringAt("m", 217, 196);
;;;139    //        GUI_DispStringAt("AH", 238, 187);
;;;140            
;;;141            GUI_SetColor(GUI_GREEN);
;;;142            GUI_SetFont(&GUI_Fontunit);
;;;143            GUI_DispStringAt("°",342, 2);
;;;144            GUI_SetFont(&GUI_Font24_1);
;;;145            GUI_DispStringAt("C",350, 2);
;;;146    		
;;;147    		
;;;148    //        DrawLock();
;;;149    //        GUI_SetColor(GUI_WHITE);
;;;150    //        GUI_SetFont(&GUI_Fontset_font);
;;;151    //        GUI_DispStringAt("过充电压",290, 150);
;;;152    		break;
;;;153        
;;;154    	case WM_TIMER://定时模块消息
;;;155    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime2)
;;;156    	{
;;;157    //        lockstat2 = lockstat1;
;;;158    //        lockstat1 = lock;
;;;159    //        if(lockstat1 != lockstat2)
;;;160    //        {
;;;161    //            WM_InvalidateWindow(hWinWind);
;;;162    //        }
;;;163    //         if(clear_flag2 == 1)
;;;164    //         {
;;;165    		if(lock == 1)
;;;166    		{
;;;167    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;168    			TEXT_SetText(hItem,"锁");
;;;169    		}else{
;;;170    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;171    			TEXT_SetText(hItem,"");
;;;172    		}
;;;173                if(DISS_POW_Voltage < 0.1)
;;;174                {
;;;175                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;176                    sprintf(buf,"%.2f",0.00);       
;;;177                    TEXT_SetText(hItem,buf);
;;;178                }else{
;;;179                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;180                    sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;181                    TEXT_SetText(hItem,buf);
;;;182                }
;;;183    //         }else{
;;;184    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;185    //             sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;186    //             TEXT_SetText(hItem,buf);
;;;187    //         }
;;;188            
;;;189            
;;;190           
;;;191            
;;;192    //        test_pow();
;;;193            if(pow_sw == pow_on)
;;;194            {
;;;195                 hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;196                sprintf(buf,"%.3f",DISS_POW_Current);        
;;;197                TEXT_SetText(hItem,buf);
;;;198                if(status_flash == 0){
;;;199                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;200                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;201                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;202                    GUI_UC_SetEncodeUTF8();        
;;;203                    TEXT_SetText(hItem,"充电中");
;;;204                    status_flash = 1;
;;;205                }else{
;;;206                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;207                    TEXT_SetText(hItem,"");
;;;208                    status_flash = 0;
;;;209               }
;;;210               if(((load_cutoffv != 0 && DISS_POW_Voltage < load_cutoffv) ||(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)) && cdelay > 20)
;;;211               {
;;;212                  GPIO_ResetBits(GPIOC,GPIO_Pin_1);
;;;213                  //GPIO_SetBits(GPIOC,GPIO_Pin_13);
;;;214                  mode_sw = 0;
;;;215                  pow_sw = pow_off;
;;;216                  cdelay = 0;
;;;217               }else{
;;;218                   cdelay++;
;;;219               }
;;;220            }else{
;;;221                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;222                TEXT_SetText(hItem,"");
;;;223                
;;;224                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;225                sprintf(buf,"%.3f",0.000);        
;;;226                TEXT_SetText(hItem,buf);
;;;227                
;;;228                cdelay = 0;
;;;229            }
;;;230    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);       
;;;231    //        sprintf(buf,"%.3f",overchargev);
;;;232    //        TEXT_SetText(hItem,buf);
;;;233            
;;;234            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);       
;;;235            sprintf(buf,"%.1f",temp);
00003c  4ff5              LDR      r7,|L7.1044|
00003e  f640193c          MOV      r9,#0x93c             ;167
000042  f6400b93          MOV      r11,#0x893            ;175
000046  ed9f8bf4          VLDR     d8,|L7.1048|
00004a  4ef5              LDR      r6,|L7.1056|
00004c  4df5              LDR      r5,|L7.1060|
00004e  281d              CMP      r0,#0x1d              ;98
000050  d07e              BEQ      |L7.336|
000052  2826              CMP      r0,#0x26              ;98
000054  d07d              BEQ      |L7.338|
000056  f5a07080          SUB      r0,r0,#0x100          ;98
00005a  3813              SUBS     r0,r0,#0x13           ;98
00005c  d07a              BEQ      |L7.340|
;;;236            TEXT_SetText(hItem,buf);
;;;237            
;;;238    		WM_RestartTimer(pMsg->Data.v, 50);//复位定时器数值越大刷新时间越短
;;;239    	}
;;;240    	break;
;;;241      case WM_INIT_DIALOG://重绘外观
;;;242        //
;;;243        // Initialization of 'Window'
;;;244        //
;;;245            hItem = pMsg->hWin;
;;;246            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;247            WM_CreateTimer(hItem,ID_TimerTime2,1000,0);//创建本窗口定时器
;;;248        //
;;;249        // Initialization of 'Button'
;;;250        //
;;;251    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
;;;252    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;253    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;254    // 		GUI_UC_SetEncodeUTF8();
;;;255    // 		BUTTON_SetText(hItem,"充放电");
;;;256        //
;;;257        // Initialization of 'Button'
;;;258        //
;;;259    		
;;;260    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;261    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;262    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;263    		TEXT_SetText(hItem,"");
;;;264    		
;;;265            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
;;;266    		BUTTON_SetPressed(hItem,1);
;;;267    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;268    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;269    		GUI_UC_SetEncodeUTF8();
;;;270            BUTTON_SetText(hItem, "电压设置");
;;;271        //
;;;272        // Initialization of 'Button'
;;;273        //
;;;274            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
;;;275    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;276    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;277    		GUI_UC_SetEncodeUTF8();
;;;278            BUTTON_SetText(hItem, "电流设置");
;;;279        //
;;;280        // Initialization of 'Button'
;;;281        //
;;;282            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_3);
;;;283            
;;;284    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;285    		BUTTON_SetFont      (hItem,    &GUI_Font24_1);//设定按钮文本字体
;;;286    		GUI_UC_SetEncodeUTF8();
;;;287            BUTTON_SetText(hItem, "OVP");
;;;288        //
;;;289        // Initialization of 'Button'
;;;290        //
;;;291            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_4);
;;;292    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;293    		BUTTON_SetFont      (hItem,    &GUI_Font24_1);//设定按钮文本字体
;;;294    		GUI_UC_SetEncodeUTF8();
;;;295            BUTTON_SetText(hItem, "OCP");
;;;296        //
;;;297        // Initialization of 'Button'
;;;298        //
;;;299            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_5);
;;;300    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;301    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;302    		GUI_UC_SetEncodeUTF8();
;;;303            BUTTON_SetText(hItem, "系统设置");
;;;304    		
;;;305    		
;;;306    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_9);
;;;307    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;308            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;309    		GUI_UC_SetEncodeUTF8();
;;;310    		TEXT_SetText(hItem,"V:");
;;;311    		
;;;312    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_10);
;;;313    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;314            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;315    		GUI_UC_SetEncodeUTF8();
;;;316    		TEXT_SetText(hItem,"I:");
;;;317            
;;;318            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_15);
;;;319    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;320            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;321    		GUI_UC_SetEncodeUTF8();
;;;322    		TEXT_SetText(hItem,"V");
;;;323    		
;;;324    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_16);
;;;325    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;326            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;327    		GUI_UC_SetEncodeUTF8();
;;;328    		TEXT_SetText(hItem,"A");
;;;329            
;;;330    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_33);
;;;331    //		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;332    //        TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;333    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;334    //		GUI_UC_SetEncodeUTF8();
;;;335    //		TEXT_SetText(hItem,"输出电压");        
;;;336    //        
;;;337    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_34);
;;;338    //		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;339    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;340    //		GUI_UC_SetEncodeUTF8();
;;;341    //		TEXT_SetText(hItem,"限制电流");
;;;342    //		
;;;343    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;344            sprintf(buf,"%.3f",pow_cutoffc);
;;;345    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;346            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;347    		GUI_UC_SetEncodeUTF8();     
;;;348    		TEXT_SetText(hItem,buf);
;;;349            
;;;350            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_41);
;;;351    		TEXT_SetBkColor(hItem,GUI_BLUE);
;;;352            sprintf(buf,"%.2f",dis_output_v);
;;;353    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;354            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;355    		GUI_UC_SetEncodeUTF8();        
;;;356    		TEXT_SetText(hItem,buf);
;;;357            
;;;358            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_42);
;;;359            sprintf(buf,"%.3f",dis_output_c);
;;;360    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;361            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;362    		GUI_UC_SetEncodeUTF8();        
;;;363    		TEXT_SetText(hItem,buf);
;;;364            
;;;365            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;366            sprintf(buf,"%.2f",0.00);
;;;367    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;368            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;369    		GUI_UC_SetEncodeUTF8();        
;;;370    		TEXT_SetText(hItem,buf);
;;;371            
;;;372            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;373            sprintf(buf,"%.3f",0.000);
;;;374    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;375            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;376    		GUI_UC_SetEncodeUTF8();        
;;;377    		TEXT_SetText(hItem,buf);
;;;378            
;;;379    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;380    //        sprintf(buf,"%05d",0);
;;;381    //        TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;382    //        TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;383    //        GUI_UC_SetEncodeUTF8();        
;;;384    //        TEXT_SetText(hItem,buf);
;;;385            
;;;386            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);
;;;387            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;388            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;389            sprintf(buf,"%.1f",temp);
;;;390            TEXT_SetText(hItem,buf);
;;;391            
;;;392            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;393            sprintf(buf,"%.3f",load_cutoffv);
;;;394    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;395            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;396    		GUI_UC_SetEncodeUTF8();     
;;;397    		TEXT_SetText(hItem,buf);
;;;398    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_159);
;;;399            sprintf(buf,"%.3f",pow_cutoffc);
;;;400    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;401            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;402    		GUI_UC_SetEncodeUTF8();     
;;;403    		TEXT_SetText(hItem,buf);
;;;404    		
;;;405            
;;;406        // USER START (Optionally insert additional code for further widget initialization)
;;;407        // USER END
;;;408        break;
;;;409      case WM_NOTIFY_PARENT:
;;;410        Id    = WM_GetId(pMsg->hWinSrc);
;;;411        NCode = pMsg->Data.v;
;;;412        switch(Id) {
;;;413        case ID_BUTTON_0: // Notifications sent by 'Button'
;;;414          switch(NCode) {
;;;415          case WM_NOTIFICATION_CLICKED:
;;;416            // USER START (Optionally insert code for reacting on notification message)
;;;417            // USER END
;;;418            break;
;;;419          case WM_NOTIFICATION_RELEASED:
;;;420            // USER START (Optionally insert code for reacting on notification message)
;;;421            // USER END
;;;422            break;
;;;423          // USER START (Optionally insert additional code for further notification handling)
;;;424          // USER END
;;;425          }
;;;426          break;
;;;427        case ID_BUTTON_1: // Notifications sent by 'Button'
;;;428          switch(NCode) {
;;;429          case WM_NOTIFICATION_CLICKED:
;;;430            // USER START (Optionally insert code for reacting on notification message)
;;;431            // USER END
;;;432            break;
;;;433          case WM_NOTIFICATION_RELEASED:
;;;434    				
;;;435            // USER START (Optionally insert code for reacting on notification message)
;;;436            // USER END
;;;437            break;
;;;438          // USER START (Optionally insert additional code for further notification handling)
;;;439          // USER END
;;;440          }
;;;441          break;
;;;442        case ID_BUTTON_2: // Notifications sent by 'Button'
;;;443          switch(NCode) {
;;;444          case WM_NOTIFICATION_CLICKED:
;;;445            // USER START (Optionally insert code for reacting on notification message)
;;;446            // USER END
;;;447            break;
;;;448          case WM_NOTIFICATION_RELEASED:
;;;449            // USER START (Optionally insert code for reacting on notification message)
;;;450            // USER END
;;;451            break;
;;;452          // USER START (Optionally insert additional code for further notification handling)
;;;453          // USER END
;;;454          }
;;;455          break;
;;;456        case ID_BUTTON_3: // Notifications sent by 'Button'
;;;457          switch(NCode) {
;;;458          case WM_NOTIFICATION_CLICKED:
;;;459            // USER START (Optionally insert code for reacting on notification message)
;;;460            // USER END
;;;461            break;
;;;462          case WM_NOTIFICATION_RELEASED:
;;;463            // USER START (Optionally insert code for reacting on notification message)
;;;464            // USER END
;;;465            break;
;;;466          // USER START (Optionally insert additional code for further notification handling)
;;;467          // USER END
;;;468          }
;;;469          break;
;;;470        case ID_BUTTON_4: // Notifications sent by 'Button'
;;;471          switch(NCode) {
;;;472          case WM_NOTIFICATION_CLICKED:
;;;473            // USER START (Optionally insert code for reacting on notification message)
;;;474            // USER END
;;;475            break;
;;;476          case WM_NOTIFICATION_RELEASED:
;;;477            // USER START (Optionally insert code for reacting on notification message)
;;;478            // USER END
;;;479            break;
;;;480          // USER START (Optionally insert additional code for further notification handling)
;;;481          // USER END
;;;482          }
;;;483          break;
;;;484        case ID_BUTTON_5: // Notifications sent by 'Button'
;;;485          switch(NCode) {
;;;486          case WM_NOTIFICATION_CLICKED:
;;;487            // USER START (Optionally insert code for reacting on notification message)
;;;488            // USER END
;;;489            break;
;;;490          case WM_NOTIFICATION_RELEASED:
;;;491            // USER START (Optionally insert code for reacting on notification message)
;;;492            // USER END
;;;493            break;
;;;494          // USER START (Optionally insert additional code for further notification handling)
;;;495          // USER END
;;;496          }
;;;497          break;
;;;498        // USER START (Optionally insert additional code for further Ids)
;;;499        // USER END
;;;500        }
;;;501        break;
;;;502      // USER START (Optionally insert additional message handling)
;;;503      // USER END
;;;504      default:
;;;505        WM_DefaultProc(pMsg);
00005e  4620              MOV      r0,r4
000060  f7fffffe          BL       WM_DefaultProc
                  |L7.100|
;;;506        break;
;;;507      }
;;;508    }
000064  b003              ADD      sp,sp,#0xc
000066  ecbd8b04          VPOP     {d8-d9}
00006a  e8bd8ff0          POP      {r4-r11,pc}
                  |L7.110|
00006e  f06f447f          MVN      r4,#0xff000000        ;101
000072  4620              MOV      r0,r4                 ;101
000074  f7fffffe          BL       GUI_SetColor
000078  f44f75f0          MOV      r5,#0x1e0             ;102
00007c  231a              MOVS     r3,#0x1a              ;102
00007e  462a              MOV      r2,r5                 ;102
000080  2119              MOVS     r1,#0x19              ;102
000082  2000              MOVS     r0,#0                 ;102
000084  f7fffffe          BL       GUI_FillRect
000088  f2401219          MOV      r2,#0x119             ;103
00008c  23d7              MOVS     r3,#0xd7              ;103
00008e  211a              MOVS     r1,#0x1a              ;103
000090  1e50              SUBS     r0,r2,#1              ;103
000092  f7fffffe          BL       GUI_FillRect
000096  23d8              MOVS     r3,#0xd8              ;104
000098  462a              MOV      r2,r5                 ;104
00009a  21d7              MOVS     r1,#0xd7              ;104
00009c  2000              MOVS     r0,#0                 ;104
00009e  f7fffffe          BL       GUI_FillRect
0000a2  f24a50ff          MOV      r0,#0xa5ff            ;105
0000a6  f7fffffe          BL       GUI_SetColor
0000aa  48df              LDR      r0,|L7.1064|
0000ac  f7fffffe          BL       GUI_SetFont
0000b0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000b4  2002              MOVS     r0,#2                 ;108
0000b6  f7fffffe          BL       GUI_SetTextMode
0000ba  2201              MOVS     r2,#1                 ;109
0000bc  2105              MOVS     r1,#5                 ;109
0000be  a0db              ADR      r0,|L7.1068|
0000c0  f7fffffe          BL       GUI_DispStringAt
0000c4  4620              MOV      r0,r4                 ;110
0000c6  f7fffffe          BL       GUI_SetColor
0000ca  48da              LDR      r0,|L7.1076|
0000cc  f7fffffe          BL       GUI_SetFont
0000d0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000d4  2002              MOVS     r0,#2                 ;113
0000d6  f7fffffe          BL       GUI_SetTextMode
0000da  2203              MOVS     r2,#3                 ;114
0000dc  2182              MOVS     r1,#0x82              ;114
0000de  a0d6              ADR      r0,|L7.1080|
0000e0  f7fffffe          BL       GUI_DispStringAt
0000e4  4cd8              LDR      r4,|L7.1096|
0000e6  4620              MOV      r0,r4                 ;115
0000e8  f7fffffe          BL       GUI_SetColor
0000ec  48d7              LDR      r0,|L7.1100|
0000ee  f7fffffe          BL       GUI_SetFont
0000f2  f44f7591          MOV      r5,#0x122             ;117
0000f6  2228              MOVS     r2,#0x28              ;117
0000f8  4629              MOV      r1,r5                 ;117
0000fa  a0d5              ADR      r0,|L7.1104|
0000fc  f7fffffe          BL       GUI_DispStringAt
000100  225a              MOVS     r2,#0x5a              ;118
000102  4629              MOV      r1,r5                 ;118
000104  a0d4              ADR      r0,|L7.1112|
000106  f7fffffe          BL       GUI_DispStringAt
00010a  4640              MOV      r0,r8                 ;119
00010c  f7fffffe          BL       GUI_SetColor
000110  48d3              LDR      r0,|L7.1120|
000112  f7fffffe          BL       GUI_SetFont
000116  f24016b3          MOV      r6,#0x1b3             ;126
00011a  2228              MOVS     r2,#0x28              ;126
00011c  4631              MOV      r1,r6                 ;126
00011e  a0d1              ADR      r0,|L7.1124|
000120  f7fffffe          BL       GUI_DispStringAt
000124  225a              MOVS     r2,#0x5a              ;127
000126  4631              MOV      r1,r6                 ;127
000128  a0cf              ADR      r0,|L7.1128|
00012a  f7fffffe          BL       GUI_DispStringAt
00012e  228c              MOVS     r2,#0x8c              ;128
000130  4631              MOV      r1,r6                 ;128
000132  a0cc              ADR      r0,|L7.1124|
000134  f7fffffe          BL       GUI_DispStringAt
000138  22be              MOVS     r2,#0xbe              ;129
00013a  4631              MOV      r1,r6                 ;129
00013c  a0ca              ADR      r0,|L7.1128|
00013e  f7fffffe          BL       GUI_DispStringAt
000142  4620              MOV      r0,r4                 ;130
000144  f7fffffe          BL       GUI_SetColor
000148  228c              MOVS     r2,#0x8c              ;131
00014a  4629              MOV      r1,r5                 ;131
00014c  a0c7              ADR      r0,|L7.1132|
00014e  e002              B        |L7.342|
                  |L7.336|
000150  e102              B        |L7.856|
                  |L7.338|
000152  e336              B        |L7.1986|
                  |L7.340|
000154  e01c              B        |L7.400|
                  |L7.342|
000156  f7fffffe          BL       GUI_DispStringAt
00015a  22be              MOVS     r2,#0xbe              ;132
00015c  4629              MOV      r1,r5                 ;132
00015e  a0c4              ADR      r0,|L7.1136|
000160  f7fffffe          BL       GUI_DispStringAt
000164  4640              MOV      r0,r8                 ;141
000166  f7fffffe          BL       GUI_SetColor
00016a  48c2              LDR      r0,|L7.1140|
00016c  f7fffffe          BL       GUI_SetFont
000170  2202              MOVS     r2,#2                 ;143
000172  f44f71ab          MOV      r1,#0x156             ;143
000176  a0c0              ADR      r0,|L7.1144|
000178  f7fffffe          BL       GUI_DispStringAt
00017c  48b8              LDR      r0,|L7.1120|
00017e  f7fffffe          BL       GUI_SetFont
000182  2202              MOVS     r2,#2                 ;145
000184  f44f71af          MOV      r1,#0x15e             ;145
000188  a0bc              ADR      r0,|L7.1148|
00018a  f7fffffe          BL       GUI_DispStringAt
                  |L7.398|
00018e  e769              B        |L7.100|
                  |L7.400|
000190  68e0              LDR      r0,[r4,#0xc]          ;155
000192  f7fffffe          BL       WM_GetTimerId
000196  2803              CMP      r0,#3                 ;155
000198  d1f9              BNE      |L7.398|
00019a  48b9              LDR      r0,|L7.1152|
00019c  7800              LDRB     r0,[r0,#0]            ;165  ; lock
00019e  2801              CMP      r0,#1                 ;165
0001a0  d01d              BEQ      |L7.478|
0001a2  4649              MOV      r1,r9                 ;170
0001a4  6860              LDR      r0,[r4,#4]            ;170
0001a6  f7fffffe          BL       WM_GetDialogItem
0001aa  a1a6              ADR      r1,|L7.1092|
0001ac  f7fffffe          BL       TEXT_SetText
                  |L7.432|
0001b0  f8df82d0          LDR      r8,|L7.1156|
0001b4  49b4              LDR      r1,|L7.1160|
0001b6  f8d80000          LDR      r0,[r8,#0]            ;173  ; DISS_POW_Voltage
0001ba  4288              CMP      r0,r1                 ;173
0001bc  da17              BGE      |L7.494|
0001be  4659              MOV      r1,r11                ;175
0001c0  6860              LDR      r0,[r4,#4]            ;175
0001c2  f7fffffe          BL       WM_GetDialogItem
0001c6  4681              MOV      r9,r0                 ;175
0001c8  ec532b18          VMOV     r2,r3,d8              ;176
0001cc  a1af              ADR      r1,|L7.1164|
0001ce  a801              ADD      r0,sp,#4              ;176
0001d0  f7fffffe          BL       __2sprintf
0001d4  a901              ADD      r1,sp,#4              ;177
0001d6  4648              MOV      r0,r9                 ;177
0001d8  f7fffffe          BL       TEXT_SetText
0001dc  e01c              B        |L7.536|
                  |L7.478|
0001de  4649              MOV      r1,r9                 ;167
0001e0  6860              LDR      r0,[r4,#4]            ;167
0001e2  f7fffffe          BL       WM_GetDialogItem
0001e6  a1ab              ADR      r1,|L7.1172|
0001e8  f7fffffe          BL       TEXT_SetText
0001ec  e7e0              B        |L7.432|
                  |L7.494|
0001ee  4659              MOV      r1,r11                ;179
0001f0  6860              LDR      r0,[r4,#4]            ;179
0001f2  f7fffffe          BL       WM_GetDialogItem
0001f6  4681              MOV      r9,r0                 ;179
0001f8  f8d80000          LDR      r0,[r8,#0]            ;180  ; DISS_POW_Voltage
0001fc  f7fffffe          BL       __aeabi_f2d
000200  ec410b10          VMOV     d0,r0,r1              ;180
000204  a1a1              ADR      r1,|L7.1164|
000206  ec532b10          VMOV     r2,r3,d0              ;180
00020a  a801              ADD      r0,sp,#4              ;180
00020c  f7fffffe          BL       __2sprintf
000210  a901              ADD      r1,sp,#4              ;181
000212  4648              MOV      r0,r9                 ;181
000214  f7fffffe          BL       TEXT_SetText
                  |L7.536|
000218  7828              LDRB     r0,[r5,#0]            ;193  ; pow_sw
00021a  f6400b95          MOV      r11,#0x895            ;199
00021e  f04f0900          MOV      r9,#0                 ;199
000222  2801              CMP      r0,#1                 ;193
000224  d032              BEQ      |L7.652|
000226  4659              MOV      r1,r11                ;221
000228  6860              LDR      r0,[r4,#4]            ;221
00022a  f7fffffe          BL       WM_GetDialogItem
00022e  a185              ADR      r1,|L7.1092|
000230  f7fffffe          BL       TEXT_SetText
000234  f6400194          MOV      r1,#0x894             ;224
000238  6860              LDR      r0,[r4,#4]            ;224
00023a  f7fffffe          BL       WM_GetDialogItem
00023e  4606              MOV      r6,r0                 ;224
000240  ec532b18          VMOV     r2,r3,d8              ;225
000244  a194              ADR      r1,|L7.1176|
000246  a801              ADD      r0,sp,#4              ;225
000248  f7fffffe          BL       __2sprintf
00024c  a901              ADD      r1,sp,#4              ;226
00024e  4630              MOV      r0,r6                 ;226
000250  f7fffffe          BL       TEXT_SetText
000254  f8859002          STRB     r9,[r5,#2]            ;228
                  |L7.600|
000258  f640110c          MOV      r1,#0x90c             ;234
00025c  6860              LDR      r0,[r4,#4]            ;234
00025e  f7fffffe          BL       WM_GetDialogItem
000262  4605              MOV      r5,r0                 ;234
000264  6838              LDR      r0,[r7,#0]            ;235  ; temp
000266  f7fffffe          BL       __aeabi_f2d
00026a  ec410b10          VMOV     d0,r0,r1              ;235
00026e  a18c              ADR      r1,|L7.1184|
000270  ec532b10          VMOV     r2,r3,d0              ;235
000274  a801              ADD      r0,sp,#4              ;235
000276  f7fffffe          BL       __2sprintf
00027a  a901              ADD      r1,sp,#4              ;236
00027c  4628              MOV      r0,r5                 ;236
00027e  f7fffffe          BL       TEXT_SetText
000282  2132              MOVS     r1,#0x32              ;238
000284  68e0              LDR      r0,[r4,#0xc]          ;238
000286  f7fffffe          BL       WM_RestartTimer
00028a  e6eb              B        |L7.100|
                  |L7.652|
00028c  f6400194          MOV      r1,#0x894             ;195
000290  6860              LDR      r0,[r4,#4]            ;195
000292  f7fffffe          BL       WM_GetDialogItem
000296  4682              MOV      r10,r0                ;195
000298  4883              LDR      r0,|L7.1192|
00029a  6800              LDR      r0,[r0,#0]            ;196  ; DISS_POW_Current
00029c  f7fffffe          BL       __aeabi_f2d
0002a0  ec410b10          VMOV     d0,r0,r1              ;196
0002a4  a17c              ADR      r1,|L7.1176|
0002a6  ec532b10          VMOV     r2,r3,d0              ;196
0002aa  a801              ADD      r0,sp,#4              ;196
0002ac  f7fffffe          BL       __2sprintf
0002b0  a901              ADD      r1,sp,#4              ;197
0002b2  4650              MOV      r0,r10                ;197
0002b4  f7fffffe          BL       TEXT_SetText
0002b8  7868              LDRB     r0,[r5,#1]            ;198  ; status_flash
0002ba  b390              CBZ      r0,|L7.802|
0002bc  4659              MOV      r1,r11                ;206
0002be  6860              LDR      r0,[r4,#4]            ;206
0002c0  f7fffffe          BL       WM_GetDialogItem
0002c4  a15f              ADR      r1,|L7.1092|
0002c6  f7fffffe          BL       TEXT_SetText
0002ca  f8859001          STRB     r9,[r5,#1]            ;208
                  |L7.718|
0002ce  ed960a00          VLDR     s0,[r6,#0]            ;210
0002d2  eeb50ac0          VCMPE.F32 s0,#0.0               ;210
0002d6  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;210
0002da  d006              BEQ      |L7.746|
0002dc  edd80a00          VLDR     s1,[r8,#0]            ;210
0002e0  eef40ac0          VCMPE.F32 s1,s0                 ;210
0002e4  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;210
0002e8  d30c              BCC      |L7.772|
                  |L7.746|
0002ea  eeb50ac0          VCMPE.F32 s0,#0.0               ;210
0002ee  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;210
0002f2  d02d              BEQ      |L7.848|
0002f4  486d              LDR      r0,|L7.1196|
0002f6  edd00a00          VLDR     s1,[r0,#0]            ;210
0002fa  eef40ac0          VCMPE.F32 s1,s0                 ;210
0002fe  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;210
000302  d225              BCS      |L7.848|
                  |L7.772|
000304  78a8              LDRB     r0,[r5,#2]            ;210  ; cdelay
000306  2814              CMP      r0,#0x14              ;210
000308  d922              BLS      |L7.848|
00030a  2102              MOVS     r1,#2                 ;212
00030c  4868              LDR      r0,|L7.1200|
00030e  f7fffffe          BL       GPIO_ResetBits
000312  4868              LDR      r0,|L7.1204|
000314  f8809000          STRB     r9,[r0,#0]            ;214
000318  f8859000          STRB     r9,[r5,#0]            ;215
00031c  f8859002          STRB     r9,[r5,#2]            ;216
000320  e79a              B        |L7.600|
                  |L7.802|
000322  e7ff              B        |L7.804|
                  |L7.804|
000324  4659              MOV      r1,r11                ;199
000326  6860              LDR      r0,[r4,#4]            ;199
000328  f7fffffe          BL       WM_GetDialogItem
00032c  4682              MOV      r10,r0                ;199
00032e  21ff              MOVS     r1,#0xff              ;200
000330  4650              MOV      r0,r10                ;200
000332  f7fffffe          BL       TEXT_SetTextColor
000336  4945              LDR      r1,|L7.1100|
000338  4650              MOV      r0,r10                ;201
00033a  f7fffffe          BL       TEXT_SetFont
00033e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000342  a15d              ADR      r1,|L7.1208|
000344  4650              MOV      r0,r10                ;203
000346  f7fffffe          BL       TEXT_SetText
00034a  2001              MOVS     r0,#1                 ;204
00034c  7068              STRB     r0,[r5,#1]            ;204
00034e  e7be              B        |L7.718|
                  |L7.848|
000350  78a8              LDRB     r0,[r5,#2]            ;218  ; cdelay
000352  1c40              ADDS     r0,r0,#1              ;218
000354  70a8              STRB     r0,[r5,#2]            ;218
000356  e77f              B        |L7.600|
                  |L7.856|
000358  f8d4a004          LDR      r10,[r4,#4]           ;245
00035c  2100              MOVS     r1,#0                 ;246
00035e  4650              MOV      r0,r10                ;246
000360  f7fffffe          BL       WINDOW_SetBkColor
000364  2300              MOVS     r3,#0                 ;247
000366  f44f727a          MOV      r2,#0x3e8             ;247
00036a  2103              MOVS     r1,#3                 ;247
00036c  4650              MOV      r0,r10                ;247
00036e  f7fffffe          BL       WM_CreateTimer
000372  4649              MOV      r1,r9                 ;260
000374  6860              LDR      r0,[r4,#4]            ;260
000376  f7fffffe          BL       WM_GetDialogItem
00037a  4681              MOV      r9,r0                 ;260
00037c  21ff              MOVS     r1,#0xff              ;261
00037e  4648              MOV      r0,r9                 ;261
000380  f7fffffe          BL       TEXT_SetTextColor
000384  494f              LDR      r1,|L7.1220|
000386  4648              MOV      r0,r9                 ;262
000388  f7fffffe          BL       TEXT_SetFont
00038c  a12d              ADR      r1,|L7.1092|
00038e  4648              MOV      r0,r9                 ;263
000390  f7fffffe          BL       TEXT_SetText
000394  f6400102          MOV      r1,#0x802             ;265
000398  6860              LDR      r0,[r4,#4]            ;265
00039a  f7fffffe          BL       WM_GetDialogItem
00039e  4681              MOV      r9,r0                 ;265
0003a0  2101              MOVS     r1,#1                 ;266
0003a2  4648              MOV      r0,r9                 ;266
0003a4  f7fffffe          BL       BUTTON_SetPressed
0003a8  4928              LDR      r1,|L7.1100|
0003aa  4648              MOV      r0,r9                 ;268
0003ac  f7fffffe          BL       BUTTON_SetFont
0003b0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003b4  a144              ADR      r1,|L7.1224|
0003b6  4648              MOV      r0,r9                 ;270
0003b8  f7fffffe          BL       BUTTON_SetText
0003bc  f6400103          MOV      r1,#0x803             ;274
0003c0  6860              LDR      r0,[r4,#4]            ;274
0003c2  f7fffffe          BL       WM_GetDialogItem
0003c6  4681              MOV      r9,r0                 ;274
0003c8  4920              LDR      r1,|L7.1100|
0003ca  4648              MOV      r0,r9                 ;276
0003cc  f7fffffe          BL       BUTTON_SetFont
0003d0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003d4  a140              ADR      r1,|L7.1240|
0003d6  4648              MOV      r0,r9                 ;278
0003d8  f7fffffe          BL       BUTTON_SetText
0003dc  f6400104          MOV      r1,#0x804             ;282
0003e0  6860              LDR      r0,[r4,#4]            ;282
0003e2  f7fffffe          BL       WM_GetDialogItem
0003e6  4681              MOV      r9,r0                 ;282
0003e8  491d              LDR      r1,|L7.1120|
0003ea  4648              MOV      r0,r9                 ;285
0003ec  f7fffffe          BL       BUTTON_SetFont
0003f0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003f4  a11d              ADR      r1,|L7.1132|
0003f6  4648              MOV      r0,r9                 ;287
0003f8  f7fffffe          BL       BUTTON_SetText
0003fc  f6400105          MOV      r1,#0x805             ;291
000400  6860              LDR      r0,[r4,#4]            ;291
000402  f7fffffe          BL       WM_GetDialogItem
000406  e06f              B        |L7.1256|
                  |L7.1032|
                          DCD      Run_Control
                  |L7.1036|
00040c  42c80000          DCFS     0x42c80000 ; 100
                  |L7.1040|
000410  447a0000          DCFS     0x447a0000 ; 1000
                  |L7.1044|
                          DCD      temp
                  |L7.1048|
000418  00000000          DCFD     0x0000000000000000 ; 0
00041c  00000000
                  |L7.1056|
                          DCD      load_cutoffv
                  |L7.1060|
                          DCD      ||.data||
                  |L7.1064|
                          DCD      GUI_Fontsymbol
                  |L7.1068|
00042c  4a696e6b          DCB      "Jinko",0
000430  6f00    
000432  00                DCB      0
000433  00                DCB      0
                  |L7.1076|
                          DCD      GUI_FontHZ20S
                  |L7.1080|
000438  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
00043c  878fe698
000440  bee7a4ba
                  |L7.1092|
000444  00                DCB      0
000445  00                DCB      0
000446  00                DCB      0
000447  00                DCB      0
                  |L7.1096|
                          DCD      0x00ff8080
                  |L7.1100|
                          DCD      GUI_FontHZ16
                  |L7.1104|
000450  e794b5e5          DCB      231,148,181,229,142,139,0
000454  8e8b00  
000457  00                DCB      0
                  |L7.1112|
000458  e794b5e6          DCB      231,148,181,230,181,129,0
00045c  b58100  
00045f  00                DCB      0
                  |L7.1120|
                          DCD      GUI_Font24_1
                  |L7.1124|
000464  5600              DCB      "V",0
000466  00                DCB      0
000467  00                DCB      0
                  |L7.1128|
000468  4100              DCB      "A",0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L7.1132|
00046c  4f565000          DCB      "OVP",0
                  |L7.1136|
000470  4f435000          DCB      "OCP",0
                  |L7.1140|
                          DCD      GUI_Fontunit
                  |L7.1144|
000478  c2b000            DCB      194,176,0
00047b  00                DCB      0
                  |L7.1148|
00047c  4300              DCB      "C",0
00047e  00                DCB      0
00047f  00                DCB      0
                  |L7.1152|
                          DCD      lock
                  |L7.1156|
                          DCD      DISS_POW_Voltage
                  |L7.1160|
                          DCD      0x3dcccccd
                  |L7.1164|
00048c  252e3266          DCB      "%.2f",0
000490  00      
000491  00                DCB      0
000492  00                DCB      0
000493  00                DCB      0
                  |L7.1172|
000494  e9948100          DCB      233,148,129,0
                  |L7.1176|
000498  252e3366          DCB      "%.3f",0
00049c  00      
00049d  00                DCB      0
00049e  00                DCB      0
00049f  00                DCB      0
                  |L7.1184|
0004a0  252e3166          DCB      "%.1f",0
0004a4  00      
0004a5  00                DCB      0
0004a6  00                DCB      0
0004a7  00                DCB      0
                  |L7.1192|
                          DCD      DISS_POW_Current
                  |L7.1196|
                          DCD      DISS_Voltage
                  |L7.1200|
                          DCD      0x40020800
                  |L7.1204|
                          DCD      mode_sw
                  |L7.1208|
0004b8  e58585e7          DCB      229,133,133,231,148,181,228,184,173,0
0004bc  94b5e4b8
0004c0  ad00    
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L7.1220|
                          DCD      GUI_FontHZ14
                  |L7.1224|
0004c8  e794b5e5          DCB      231,148,181,229,142,139,232,174,190,231,189,174,0
0004cc  8e8be8ae
0004d0  bee7bdae
0004d4  00      
0004d5  00                DCB      0
0004d6  00                DCB      0
0004d7  00                DCB      0
                  |L7.1240|
0004d8  e794b5e6          DCB      231,148,181,230,181,129,232,174,190,231,189,174,0
0004dc  b581e8ae
0004e0  bee7bdae
0004e4  00      
0004e5  00                DCB      0
0004e6  00                DCB      0
0004e7  00                DCB      0
                  |L7.1256|
0004e8  4681              MOV      r9,r0                 ;291
0004ea  49b8              LDR      r1,|L7.1996|
0004ec  4648              MOV      r0,r9                 ;293
0004ee  f7fffffe          BL       BUTTON_SetFont
0004f2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004f6  f2af0188          ADR      r1,|L7.1136|
0004fa  4648              MOV      r0,r9                 ;295
0004fc  f7fffffe          BL       BUTTON_SetText
000500  f6400106          MOV      r1,#0x806             ;299
000504  6860              LDR      r0,[r4,#4]            ;299
000506  f7fffffe          BL       WM_GetDialogItem
00050a  4681              MOV      r9,r0                 ;299
00050c  49b0              LDR      r1,|L7.2000|
00050e  4648              MOV      r0,r9                 ;301
000510  f7fffffe          BL       BUTTON_SetFont
000514  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000518  a1ae              ADR      r1,|L7.2004|
00051a  4648              MOV      r0,r9                 ;303
00051c  f7fffffe          BL       BUTTON_SetText
000520  f6400107          MOV      r1,#0x807             ;306
000524  6860              LDR      r0,[r4,#4]            ;306
000526  f7fffffe          BL       WM_GetDialogItem
00052a  4682              MOV      r10,r0                ;306
00052c  f8df92b4          LDR      r9,|L7.2020|
000530  4650              MOV      r0,r10                ;307
000532  4649              MOV      r1,r9                 ;307
000534  f7fffffe          BL       TEXT_SetTextColor
000538  49ab              LDR      r1,|L7.2024|
00053a  4650              MOV      r0,r10                ;308
00053c  f7fffffe          BL       TEXT_SetFont
000540  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000544  a1a9              ADR      r1,|L7.2028|
000546  4650              MOV      r0,r10                ;310
000548  f7fffffe          BL       TEXT_SetText
00054c  f6400108          MOV      r1,#0x808             ;312
000550  6860              LDR      r0,[r4,#4]            ;312
000552  f7fffffe          BL       WM_GetDialogItem
000556  4682              MOV      r10,r0                ;312
000558  4649              MOV      r1,r9                 ;313
00055a  4650              MOV      r0,r10                ;313
00055c  f7fffffe          BL       TEXT_SetTextColor
000560  49a1              LDR      r1,|L7.2024|
000562  4650              MOV      r0,r10                ;314
000564  f7fffffe          BL       TEXT_SetFont
000568  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00056c  a1a0              ADR      r1,|L7.2032|
00056e  4650              MOV      r0,r10                ;316
000570  f7fffffe          BL       TEXT_SetText
000574  f44f6102          MOV      r1,#0x820             ;318
000578  6860              LDR      r0,[r4,#4]            ;318
00057a  f7fffffe          BL       WM_GetDialogItem
00057e  4682              MOV      r10,r0                ;318
000580  4649              MOV      r1,r9                 ;319
000582  4650              MOV      r0,r10                ;319
000584  f7fffffe          BL       TEXT_SetTextColor
000588  4997              LDR      r1,|L7.2024|
00058a  4650              MOV      r0,r10                ;320
00058c  f7fffffe          BL       TEXT_SetFont
000590  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000594  f2af1134          ADR      r1,|L7.1124|
000598  4650              MOV      r0,r10                ;322
00059a  f7fffffe          BL       TEXT_SetText
00059e  f6400121          MOV      r1,#0x821             ;324
0005a2  6860              LDR      r0,[r4,#4]            ;324
0005a4  f7fffffe          BL       WM_GetDialogItem
0005a8  4682              MOV      r10,r0                ;324
0005aa  4649              MOV      r1,r9                 ;325
0005ac  4650              MOV      r0,r10                ;325
0005ae  f7fffffe          BL       TEXT_SetTextColor
0005b2  498d              LDR      r1,|L7.2024|
0005b4  4650              MOV      r0,r10                ;326
0005b6  f7fffffe          BL       TEXT_SetFont
0005ba  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005be  f2af1158          ADR      r1,|L7.1128|
0005c2  4650              MOV      r0,r10                ;328
0005c4  f7fffffe          BL       TEXT_SetText
0005c8  f640192e          MOV      r9,#0x92e             ;343
0005cc  4649              MOV      r1,r9                 ;343
0005ce  6860              LDR      r0,[r4,#4]            ;343
0005d0  f7fffffe          BL       WM_GetDialogItem
0005d4  4682              MOV      r10,r0                ;343
0005d6  68a8              LDR      r0,[r5,#8]            ;344  ; pow_cutoffc
0005d8  f7fffffe          BL       __aeabi_f2d
0005dc  ec410b10          VMOV     d0,r0,r1              ;344
0005e0  ec532b10          VMOV     r2,r3,d0              ;344
0005e4  f2af1150          ADR      r1,|L7.1176|
0005e8  a801              ADD      r0,sp,#4              ;344
0005ea  f7fffffe          BL       __2sprintf
0005ee  4641              MOV      r1,r8                 ;345
0005f0  4650              MOV      r0,r10                ;345
0005f2  f7fffffe          BL       TEXT_SetTextColor
0005f6  4975              LDR      r1,|L7.1996|
0005f8  4650              MOV      r0,r10                ;346
0005fa  f7fffffe          BL       TEXT_SetFont
0005fe  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000602  a901              ADD      r1,sp,#4              ;348
000604  4650              MOV      r0,r10                ;348
000606  f7fffffe          BL       TEXT_SetText
00060a  f6400166          MOV      r1,#0x866             ;350
00060e  6860              LDR      r0,[r4,#4]            ;350
000610  f7fffffe          BL       WM_GetDialogItem
000614  4682              MOV      r10,r0                ;350
000616  f44f017f          MOV      r1,#0xff0000          ;351
00061a  4650              MOV      r0,r10                ;351
00061c  f7fffffe          BL       TEXT_SetBkColor
000620  ee190a90          VMOV     r0,s19                ;352
000624  f7fffffe          BL       __aeabi_f2d
000628  ec410b10          VMOV     d0,r0,r1              ;352
00062c  ec532b10          VMOV     r2,r3,d0              ;352
000630  f2af11a8          ADR      r1,|L7.1164|
000634  a801              ADD      r0,sp,#4              ;352
000636  f7fffffe          BL       __2sprintf
00063a  4641              MOV      r1,r8                 ;353
00063c  4650              MOV      r0,r10                ;353
00063e  f7fffffe          BL       TEXT_SetTextColor
000642  4962              LDR      r1,|L7.1996|
000644  4650              MOV      r0,r10                ;354
000646  f7fffffe          BL       TEXT_SetFont
00064a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00064e  a901              ADD      r1,sp,#4              ;356
000650  4650              MOV      r0,r10                ;356
000652  f7fffffe          BL       TEXT_SetText
000656  f6400167          MOV      r1,#0x867             ;358
00065a  6860              LDR      r0,[r4,#4]            ;358
00065c  f7fffffe          BL       WM_GetDialogItem
000660  4682              MOV      r10,r0                ;358
000662  ee190a10          VMOV     r0,s18                ;359
000666  f7fffffe          BL       __aeabi_f2d
00066a  ec410b10          VMOV     d0,r0,r1              ;359
00066e  ec532b10          VMOV     r2,r3,d0              ;359
000672  f2af11dc          ADR      r1,|L7.1176|
000676  a801              ADD      r0,sp,#4              ;359
000678  f7fffffe          BL       __2sprintf
00067c  4641              MOV      r1,r8                 ;360
00067e  4650              MOV      r0,r10                ;360
000680  f7fffffe          BL       TEXT_SetTextColor
000684  4951              LDR      r1,|L7.1996|
000686  4650              MOV      r0,r10                ;361
000688  f7fffffe          BL       TEXT_SetFont
00068c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000690  a901              ADD      r1,sp,#4              ;363
000692  4650              MOV      r0,r10                ;363
000694  f7fffffe          BL       TEXT_SetText
000698  4659              MOV      r1,r11                ;365
00069a  6860              LDR      r0,[r4,#4]            ;365
00069c  f7fffffe          BL       WM_GetDialogItem
0006a0  4683              MOV      r11,r0                ;365
0006a2  ec532b18          VMOV     r2,r3,d8              ;366
0006a6  f2af211c          ADR      r1,|L7.1164|
0006aa  a801              ADD      r0,sp,#4              ;366
0006ac  f7fffffe          BL       __2sprintf
0006b0  f64f7aff          MOV      r10,#0xffff           ;367
0006b4  4651              MOV      r1,r10                ;367
0006b6  4658              MOV      r0,r11                ;367
0006b8  f7fffffe          BL       TEXT_SetTextColor
0006bc  494d              LDR      r1,|L7.2036|
0006be  4658              MOV      r0,r11                ;368
0006c0  f7fffffe          BL       TEXT_SetFont
0006c4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006c8  a901              ADD      r1,sp,#4              ;370
0006ca  4658              MOV      r0,r11                ;370
0006cc  f7fffffe          BL       TEXT_SetText
0006d0  f6400194          MOV      r1,#0x894             ;372
0006d4  6860              LDR      r0,[r4,#4]            ;372
0006d6  f7fffffe          BL       WM_GetDialogItem
0006da  4683              MOV      r11,r0                ;372
0006dc  ec532b18          VMOV     r2,r3,d8              ;373
0006e0  f2af214c          ADR      r1,|L7.1176|
0006e4  a801              ADD      r0,sp,#4              ;373
0006e6  f7fffffe          BL       __2sprintf
0006ea  4651              MOV      r1,r10                ;374
0006ec  4658              MOV      r0,r11                ;374
0006ee  f7fffffe          BL       TEXT_SetTextColor
0006f2  4940              LDR      r1,|L7.2036|
0006f4  4658              MOV      r0,r11                ;375
0006f6  f7fffffe          BL       TEXT_SetFont
0006fa  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006fe  a901              ADD      r1,sp,#4              ;377
000700  4658              MOV      r0,r11                ;377
000702  f7fffffe          BL       TEXT_SetText
000706  f640110c          MOV      r1,#0x90c             ;386
00070a  6860              LDR      r0,[r4,#4]            ;386
00070c  f7fffffe          BL       WM_GetDialogItem
000710  4682              MOV      r10,r0                ;386
000712  4641              MOV      r1,r8                 ;387
000714  4650              MOV      r0,r10                ;387
000716  f7fffffe          BL       TEXT_SetTextColor
00071a  492c              LDR      r1,|L7.1996|
00071c  4650              MOV      r0,r10                ;388
00071e  f7fffffe          BL       TEXT_SetFont
000722  6838              LDR      r0,[r7,#0]            ;389  ; temp
000724  f7fffffe          BL       __aeabi_f2d
000728  ec410b10          VMOV     d0,r0,r1              ;389
00072c  ec532b10          VMOV     r2,r3,d0              ;389
000730  f2af2194          ADR      r1,|L7.1184|
000734  a801              ADD      r0,sp,#4              ;389
000736  f7fffffe          BL       __2sprintf
00073a  a901              ADD      r1,sp,#4              ;390
00073c  4650              MOV      r0,r10                ;390
00073e  f7fffffe          BL       TEXT_SetText
000742  4649              MOV      r1,r9                 ;392
000744  6860              LDR      r0,[r4,#4]            ;392
000746  f7fffffe          BL       WM_GetDialogItem
00074a  4607              MOV      r7,r0                 ;392
00074c  6830              LDR      r0,[r6,#0]            ;393  ; load_cutoffv
00074e  f7fffffe          BL       __aeabi_f2d
000752  ec410b10          VMOV     d0,r0,r1              ;393
000756  ec532b10          VMOV     r2,r3,d0              ;393
00075a  f2af21c4          ADR      r1,|L7.1176|
00075e  a801              ADD      r0,sp,#4              ;393
000760  f7fffffe          BL       __2sprintf
000764  4641              MOV      r1,r8                 ;394
000766  4638              MOV      r0,r7                 ;394
000768  f7fffffe          BL       TEXT_SetTextColor
00076c  4917              LDR      r1,|L7.1996|
00076e  4638              MOV      r0,r7                 ;395
000770  f7fffffe          BL       TEXT_SetFont
000774  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000778  a901              ADD      r1,sp,#4              ;397
00077a  4638              MOV      r0,r7                 ;397
00077c  f7fffffe          BL       TEXT_SetText
000780  f640113a          MOV      r1,#0x93a             ;398
000784  6860              LDR      r0,[r4,#4]            ;398
000786  f7fffffe          BL       WM_GetDialogItem
00078a  4604              MOV      r4,r0                 ;398
00078c  68a8              LDR      r0,[r5,#8]            ;399  ; pow_cutoffc
00078e  f7fffffe          BL       __aeabi_f2d
000792  ec410b10          VMOV     d0,r0,r1              ;399
000796  ec532b10          VMOV     r2,r3,d0              ;399
00079a  f2af3104          ADR      r1,|L7.1176|
00079e  a801              ADD      r0,sp,#4              ;399
0007a0  f7fffffe          BL       __2sprintf
0007a4  4641              MOV      r1,r8                 ;400
0007a6  4620              MOV      r0,r4                 ;400
0007a8  f7fffffe          BL       TEXT_SetTextColor
0007ac  4907              LDR      r1,|L7.1996|
0007ae  4620              MOV      r0,r4                 ;401
0007b0  f7fffffe          BL       TEXT_SetFont
0007b4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007b8  a901              ADD      r1,sp,#4              ;403
0007ba  4620              MOV      r0,r4                 ;403
0007bc  f7fffffe          BL       TEXT_SetText
0007c0  e450              B        |L7.100|
                  |L7.1986|
0007c2  68a0              LDR      r0,[r4,#8]            ;410
0007c4  f7fffffe          BL       WM_GetId
0007c8  e44c              B        |L7.100|
;;;509    
                          ENDP

0007ca  0000              DCW      0x0000
                  |L7.1996|
                          DCD      GUI_Font24_1
                  |L7.2000|
                          DCD      GUI_FontHZ16
                  |L7.2004|
0007d4  e7b3bbe7          DCB      231,179,187,231,187,159,232,174,190,231,189,174,0
0007d8  bb9fe8ae
0007dc  bee7bdae
0007e0  00      
0007e1  00                DCB      0
0007e2  00                DCB      0
0007e3  00                DCB      0
                  |L7.2020|
                          DCD      0x00d3d3d3
                  |L7.2024|
                          DCD      GUI_FontEN40
                  |L7.2028|
0007ec  563a00            DCB      "V:",0
0007ef  00                DCB      0
                  |L7.2032|
0007f0  493a00            DCB      "I:",0
0007f3  00                DCB      0
                  |L7.2036|
                          DCD      GUI_FontD24x32

                          AREA ||i.test_pow||, CODE, READONLY, ALIGN=2

                  test_pow PROC
;;;1202   
;;;1203   void test_pow(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1204   {
;;;1205   
;;;1206       if(pow_sw == pow_on && para_set1 == set_1_on)
000002  4834              LDR      r0,|L8.212|
000004  7800              LDRB     r0,[r0,#0]  ; pow_sw
;;;1207       {
;;;1208           if(DISS_POW_Voltage*100 > set_max_v || DISS_POW_Voltage*100 < set_min_v || DISS_POW_Current * 100 > set_max_c || DISS_POW_Current * 100 < set_min_c)
;;;1209           {
;;;1210               if(para_set4 == set_4_on){
;;;1211                   BEEP_Tiggr();
;;;1212               }
;;;1213               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1214               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d34              LDR      r5,|L8.216|
000008  f44f5480          MOV      r4,#0x1000
00000c  2801              CMP      r0,#1                 ;1206
00000e  d103              BNE      |L8.24|
000010  4832              LDR      r0,|L8.220|
000012  7800              LDRB     r0,[r0,#0]            ;1206  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1206
000016  d009              BEQ      |L8.44|
                  |L8.24|
;;;1215           }else{
;;;1216               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1217               TM1650_SET_LED(0x48,0x71);
;;;1218               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1219           }        
;;;1220       }else
;;;1221       {
;;;1222           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1223           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L8.44|
00002c  482c              LDR      r0,|L8.224|
00002e  eddf0a2d          VLDR     s1,|L8.228|
000032  4a2d              LDR      r2,|L8.232|
000034  ed900a00          VLDR     s0,[r0,#0]            ;1208
000038  6b93              LDR      r3,[r2,#0x38]         ;1208  ; Run_Control
00003a  ee200a20          VMUL.F32 s0,s0,s1              ;1208
00003e  ee013a10          VMOV     s2,r3                 ;1208
000042  eeb81a41          VCVT.F32.U32 s2,s2                 ;1208
000046  eeb40ac1          VCMPE.F32 s0,s2                 ;1208
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1208
00004e  dc22              BGT      |L8.150|
000050  6bd3              LDR      r3,[r2,#0x3c]         ;1208  ; Run_Control
000052  ee013a10          VMOV     s2,r3                 ;1208
000056  eeb81a41          VCVT.F32.U32 s2,s2                 ;1208
00005a  eeb40ac1          VCMPE.F32 s0,s2                 ;1208
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1208
000062  d318              BCC      |L8.150|
000064  4821              LDR      r0,|L8.236|
000066  ed900a00          VLDR     s0,[r0,#0]            ;1208
00006a  6c90              LDR      r0,[r2,#0x48]         ;1208  ; Run_Control
00006c  ee200a20          VMUL.F32 s0,s0,s1              ;1208
000070  ee000a90          VMOV     s1,r0                 ;1208
000074  eef80a60          VCVT.F32.U32 s1,s1                 ;1208
000078  eeb40ae0          VCMPE.F32 s0,s1                 ;1208
00007c  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1208
000080  dc09              BGT      |L8.150|
000082  6cd0              LDR      r0,[r2,#0x4c]         ;1208  ; Run_Control
000084  ee000a90          VMOV     s1,r0                 ;1208
000088  eef80a60          VCVT.F32.U32 s1,s1                 ;1208
00008c  eeb40ae0          VCMPE.F32 s0,s1                 ;1208
000090  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1208
000094  d20f              BCS      |L8.182|
                  |L8.150|
000096  4816              LDR      r0,|L8.240|
000098  7800              LDRB     r0,[r0,#0]            ;1210  ; para_set4
00009a  28ff              CMP      r0,#0xff              ;1210
00009c  d101              BNE      |L8.162|
00009e  f7fffffe          BL       BEEP_Tiggr
                  |L8.162|
0000a2  2170              MOVS     r1,#0x70              ;1213
0000a4  2068              MOVS     r0,#0x68              ;1213
0000a6  f7fffffe          BL       TM1650_SET_LED
0000aa  4621              MOV      r1,r4                 ;1214
0000ac  4628              MOV      r0,r5                 ;1214
0000ae  e8bd4070          POP      {r4-r6,lr}            ;1214
0000b2  f7ffbffe          B.W      GPIO_SetBits
                  |L8.182|
0000b6  4621              MOV      r1,r4                 ;1216
0000b8  4628              MOV      r0,r5                 ;1216
0000ba  f7fffffe          BL       GPIO_ResetBits
0000be  2171              MOVS     r1,#0x71              ;1217
0000c0  2048              MOVS     r0,#0x48              ;1217
0000c2  f7fffffe          BL       TM1650_SET_LED
0000c6  e8bd4070          POP      {r4-r6,lr}            ;1218
0000ca  21f2              MOVS     r1,#0xf2              ;1218
0000cc  2068              MOVS     r0,#0x68              ;1218
0000ce  f7ffbffe          B.W      TM1650_SET_LED
;;;1224       }
;;;1225   }
;;;1226   
                          ENDP

0000d2  0000              DCW      0x0000
                  |L8.212|
                          DCD      ||.data||
                  |L8.216|
                          DCD      0x40020c00
                  |L8.220|
                          DCD      para_set1
                  |L8.224|
                          DCD      DISS_POW_Voltage
                  |L8.228|
0000e4  42c80000          DCFS     0x42c80000 ; 100
                  |L8.232|
                          DCD      Run_Control
                  |L8.236|
                          DCD      DISS_POW_Current
                  |L8.240|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate1
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08000000          DCW      0x0800,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  08020053          DCW      0x0802,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080300a3          DCW      0x0803,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080400f3          DCW      0x0804,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  08050143          DCW      0x0805,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  08060193          DCW      0x0806,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0807001c          DCW      0x0807,0x001c
0000b4  00280040          DCW      0x0028,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0808001c          DCW      0x0808,0x001c
0000d0  006e0040          DCW      0x006e,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  082000f0          DCW      0x0820,0x00f0
0000ec  00280020          DCW      0x0028,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  082100f0          DCW      0x0821,0x00f0
000108  006f0020          DCW      0x006f,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  0866017c          DCW      0x0866,0x017c
000124  00280035          DCW      0x0028,0x0035
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  08670172          DCW      0x0867,0x0172
000140  005a0041          DCW      0x005a,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  0893005f          DCW      0x0893,0x005f
00015c  00260096          DCW      0x0026,0x0096
000160  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  0894005f          DCW      0x0894,0x005f
000178  006a0096          DCW      0x006a,0x0096
00017c  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  08950190          DCW      0x0895,0x0190
000194  00040032          DCW      0x0004,0x0032
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  090c012c          DCW      0x090c,0x012c
0001b0  00020050          DCW      0x0002,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  092e0172          DCW      0x092e,0x0172
0001cc  008c0041          DCW      0x008c,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  093a0172          DCW      0x093a,0x0172
0001e8  00be0041          DCW      0x00be,0x0041
0001ec  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  093c017c          DCW      0x093c,0x017c
000204  00080014          DCW      0x0008,0x0014
000208  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  pow_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  cdelay
000002  0000              DCB      0x00,0x00
                  hWinWind
                          DCD      0x00000000
                  pow_cutoffc
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\menu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_menu_c_pow_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REVSH|
#line 144
|__asm___6_menu_c_pow_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
