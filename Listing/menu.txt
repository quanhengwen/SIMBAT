; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\menu.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\menu.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\menu.crf --no_multibyte_chars ..\APP\menu.c]
                          THUMB

                          AREA ||i.CreateWindow||, CODE, READONLY, ALIGN=2

                  CreateWindow PROC
;;;556    
;;;557    WM_HWIN CreateWindow(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;558      if(page_sw == face_graph || page_sw == face_menu)
000002  4c2d              LDR      r4,|L1.184|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d00f              BEQ      |L1.42|
00000a  7820              LDRB     r0,[r4,#0]  ; page_sw
00000c  2802              CMP      r0,#2
00000e  d00c              BEQ      |L1.42|
;;;559      {      
;;;560      }else{
;;;561    	  GPIO_SetBits(GPIOA,GPIO_Pin_15);//µç×Ó¸ºÔØOFF
000010  f44f4100          MOV      r1,#0x8000
000014  4829              LDR      r0,|L1.188|
000016  f7fffffe          BL       GPIO_SetBits
;;;562    	  GPIO_ResetBits(GPIOC,GPIO_Pin_1);//¹Ø±ÕµçÔ´Êä³ö
00001a  2102              MOVS     r1,#2
00001c  4828              LDR      r0,|L1.192|
00001e  f7fffffe          BL       GPIO_ResetBits
;;;563    	  Delay_ms(500);
000022  f44f70fa          MOV      r0,#0x1f4
000026  f7fffffe          BL       Delay_ms
                  |L1.42|
;;;564    	  //GPIO_SetBits(GPIOC,GPIO_Pin_13);//¹Ø±ÕµçÔ´Êä³ö¼ÌµçÆ
;;;565    //      IO_OFF();
;;;566    	  
;;;567      }
;;;568      page_sw = face_menu;
00002a  2002              MOVS     r0,#2
00002c  7020              STRB     r0,[r4,#0]
;;;569      track = face_menu;
00002e  4925              LDR      r1,|L1.196|
000030  7008              STRB     r0,[r1,#0]
;;;570      set_sw = set_18;
000032  4925              LDR      r1,|L1.200|
000034  2011              MOVS     r0,#0x11
000036  7008              STRB     r0,[r1,#0]
;;;571      SET_Voltage = pow_v;
000038  4824              LDR      r0,|L1.204|
00003a  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
00003e  6041              STR      r1,[r0,#4]  ; Run_Control
;;;572      SET_Voltage_Laod = pow_v * 10 +20;
000040  f8d01098          LDR      r1,[r0,#0x98]  ; Run_Control
000044  2214              MOVS     r2,#0x14
000046  eb010181          ADD      r1,r1,r1,LSL #2
00004a  eb020141          ADD      r1,r2,r1,LSL #1
00004e  60c1              STR      r1,[r0,#0xc]  ; Run_Control
;;;573      SET_Current = pow_c;
000050  f8d010a0          LDR      r1,[r0,#0xa0]  ; Run_Control
000054  6081              STR      r1,[r0,#8]  ; Run_Control
;;;574      pow_cutoffc = (float)set_pow_cutoffc/1000;
000056  481e              LDR      r0,|L1.208|
000058  4d1f              LDR      r5,|L1.216|
00005a  ed900a05          VLDR     s0,[r0,#0x14]
00005e  eef80ac0          VCVT.F32.S32 s1,s0
000062  ed9f0a1c          VLDR     s0,|L1.212|
000066  ee801a80          VDIV.F32 s2,s1,s0
00006a  ed851a02          VSTR     s2,[r5,#8]
;;;575      load_cutoffv = (float)set_load_cutoffv/1000;
00006e  edd00a04          VLDR     s1,[r0,#0x10]
000072  481a              LDR      r0,|L1.220|
000074  eef80ae0          VCVT.F32.S32 s1,s1
000078  ee801a80          VDIV.F32 s2,s1,s0
00007c  ed801a00          VSTR     s2,[r0,#0]
;;;576      pass = 0;
000080  4817              LDR      r0,|L1.224|
000082  2400              MOVS     r4,#0
000084  7004              STRB     r4,[r0,#0]
;;;577      mode_sw = mode_pow;
000086  4917              LDR      r1,|L1.228|
000088  2003              MOVS     r0,#3
00008a  7008              STRB     r0,[r1,#0]
;;;578    //  USART_SendData(USART3,1);//连接电源
;;;579      TM1650_SET_LED(0x68,0x70);
00008c  2170              MOVS     r1,#0x70
00008e  2068              MOVS     r0,#0x68
000090  f7fffffe          BL       TM1650_SET_LED
;;;580      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000094  f44f5180          MOV      r1,#0x1000
000098  4813              LDR      r0,|L1.232|
00009a  f7fffffe          BL       GPIO_ResetBits
;;;581      hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
00009e  f7fffffe          BL       WM_GetDesktopWindow
0000a2  4603              MOV      r3,r0
0000a4  9400              STR      r4,[sp,#0]
0000a6  4a11              LDR      r2,|L1.236|
0000a8  2114              MOVS     r1,#0x14
0000aa  4811              LDR      r0,|L1.240|
0000ac  9401              STR      r4,[sp,#4]
0000ae  f7fffffe          BL       GUI_CreateDialogBox
0000b2  6068              STR      r0,[r5,#4]  ; hWinWind
;;;582      return hWinWind;
;;;583    }
0000b4  bd7c              POP      {r2-r6,pc}
;;;584    
                          ENDP

0000b6  0000              DCW      0x0000
                  |L1.184|
                          DCD      page_sw
                  |L1.188|
                          DCD      0x40020000
                  |L1.192|
                          DCD      0x40020800
                  |L1.196|
                          DCD      track
                  |L1.200|
                          DCD      set_sw
                  |L1.204|
                          DCD      Run_Control
                  |L1.208|
                          DCD      InFlashSave
                  |L1.212|
0000d4  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.216|
                          DCD      ||.data||
                  |L1.220|
                          DCD      load_cutoffv
                  |L1.224|
                          DCD      pass
                  |L1.228|
                          DCD      mode_sw
                  |L1.232|
                          DCD      0x40020c00
                  |L1.236|
                          DCD      _cbDialog
                  |L1.240|
                          DCD      ||.constdata||

                          AREA ||i.DEL_POW||, CODE, READONLY, ALIGN=2

                  DEL_POW PROC
;;;808    }
;;;809    void DEL_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;810    {
;;;811    	switch(set_sw){
000004  482b              LDR      r0,|L2.180|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;812    		case set_18:
;;;813            {
;;;814    			WM_HWIN hItem;
;;;815    //            WM_InvalidateWindow(hWinWind);
;;;816                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000008  482b              LDR      r0,|L2.184|
;;;817    			if(bit > 1)
;;;818    			{
;;;819    				bit --;
;;;820    				set_limit[bit-1] = '\0';
00000a  4f2c              LDR      r7,|L2.188|
00000c  2400              MOVS     r4,#0                 ;816
00000e  6840              LDR      r0,[r0,#4]            ;816
000010  4d2b              LDR      r5,|L2.192|
;;;821    			}
;;;822    			if(bit == dot_flag)
000012  4e2c              LDR      r6,|L2.196|
000014  2911              CMP      r1,#0x11              ;811
000016  d01b              BEQ      |L2.80|
000018  2912              CMP      r1,#0x12              ;811
00001a  d031              BEQ      |L2.128|
00001c  2958              CMP      r1,#0x58              ;811
00001e  d147              BNE      |L2.176|
;;;823    			{
;;;824    				dot_flag = 0;
;;;825    			}
;;;826    			TEXT_SetText(hItem,set_limit);
;;;827    		}break;
;;;828    		case set_19:
;;;829            {
;;;830    			WM_HWIN hItem;
;;;831    //            WM_InvalidateWindow(hWinWind);
;;;832                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;833    			if(bit > 1)
;;;834    			{
;;;835    				bit --;
;;;836    				set_limit[bit-1] = '\0';
;;;837    			}
;;;838    			if(bit == dot_flag)
;;;839    			{
;;;840    				dot_flag = 0;
;;;841    			}
;;;842    			TEXT_SetText(hItem,set_limit);
;;;843    		}break;
;;;844    		case set_89:
;;;845            {
;;;846                WM_HWIN hItem;
;;;847    //            WM_InvalidateWindow(hWinWind);
;;;848                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
000020  f640112e          MOV      r1,#0x92e
000024  f7fffffe          BL       WM_GetDialogItem
;;;849    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;850    			{
;;;851    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;852    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;853    			}
;;;854    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;855    			{
;;;856    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;857    			}
;;;858    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491c              LDR      r1,|L2.188|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f6400166          MOV      r1,#0x866             ;816
000054  f7fffffe          BL       WM_GetDialogItem
000058  7829              LDRB     r1,[r5,#0]            ;817  ; bit
00005a  2901              CMP      r1,#1                 ;817
00005c  d906              BLS      |L2.108|
00005e  7829              LDRB     r1,[r5,#0]            ;819  ; bit
000060  1e49              SUBS     r1,r1,#1              ;819
000062  7029              STRB     r1,[r5,#0]            ;819
000064  7829              LDRB     r1,[r5,#0]            ;820  ; bit
000066  4439              ADD      r1,r1,r7              ;820
000068  f8014c01          STRB     r4,[r1,#-1]           ;820
                  |L2.108|
00006c  7829              LDRB     r1,[r5,#0]            ;822  ; bit
00006e  7832              LDRB     r2,[r6,#0]            ;822  ; dot_flag
000070  4291              CMP      r1,r2                 ;822
000072  d100              BNE      |L2.118|
000074  7034              STRB     r4,[r6,#0]            ;824
                  |L2.118|
000076  e8bd41f0          POP      {r4-r8,lr}            ;826
00007a  4910              LDR      r1,|L2.188|
00007c  f7ffbffe          B.W      TEXT_SetText
                  |L2.128|
000080  f6400167          MOV      r1,#0x867             ;832
000084  f7fffffe          BL       WM_GetDialogItem
000088  7829              LDRB     r1,[r5,#0]            ;833  ; bit
00008a  2901              CMP      r1,#1                 ;833
00008c  d906              BLS      |L2.156|
00008e  7829              LDRB     r1,[r5,#0]            ;835  ; bit
000090  1e49              SUBS     r1,r1,#1              ;835
000092  7029              STRB     r1,[r5,#0]            ;835
000094  7829              LDRB     r1,[r5,#0]            ;836  ; bit
000096  4439              ADD      r1,r1,r7              ;836
000098  f8014c01          STRB     r4,[r1,#-1]           ;836
                  |L2.156|
00009c  7829              LDRB     r1,[r5,#0]            ;838  ; bit
00009e  7832              LDRB     r2,[r6,#0]            ;838  ; dot_flag
0000a0  4291              CMP      r1,r2                 ;838
0000a2  d100              BNE      |L2.166|
0000a4  7034              STRB     r4,[r6,#0]            ;840
                  |L2.166|
0000a6  e8bd41f0          POP      {r4-r8,lr}            ;842
0000aa  4904              LDR      r1,|L2.188|
0000ac  f7ffbffe          B.W      TEXT_SetText
                  |L2.176|
;;;859    		}break;
;;;860    	}
;;;861    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;862    
                          ENDP

                  |L2.180|
                          DCD      set_sw
                  |L2.184|
                          DCD      ||.data||
                  |L2.188|
                          DCD      set_limit
                  |L2.192|
                          DCD      bit
                  |L2.196|
                          DCD      dot_flag

                          AREA ||i.DISP_POW||, CODE, READONLY, ALIGN=2

                  DISP_POW PROC
;;;591    
;;;592    void DISP_POW(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;593    {
;;;594    	WM_HWIN hItem;
;;;595    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
000004  4d40              LDR      r5,|L3.264|
000006  f6400166          MOV      r1,#0x866
00000a  6868              LDR      r0,[r5,#4]  ; hWinWind
00000c  f7fffffe          BL       WM_GetDialogItem
;;;596    	if(set_sw == set_18)
000010  4c3e              LDR      r4,|L3.268|
000012  7821              LDRB     r1,[r4,#0]  ; set_sw
;;;597    	{
;;;598    		 TEXT_SetBkColor(hItem, GUI_BLUE);
000014  f44f067f          MOV      r6,#0xff0000
;;;599    	}else{
;;;600    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000018  f06f4770          MVN      r7,#0xf0000000
00001c  2911              CMP      r1,#0x11              ;596
00001e  d051              BEQ      |L3.196|
000020  4639              MOV      r1,r7
000022  f7fffffe          BL       TEXT_SetBkColor
                  |L3.38|
;;;601    	}
;;;602    	
;;;603    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
000026  f6400167          MOV      r1,#0x867
00002a  6868              LDR      r0,[r5,#4]  ; hWinWind
00002c  f7fffffe          BL       WM_GetDialogItem
;;;604    	if(set_sw == set_19)
000030  7821              LDRB     r1,[r4,#0]  ; set_sw
000032  2912              CMP      r1,#0x12
000034  d04a              BEQ      |L3.204|
;;;605    	{
;;;606    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;607    	}else{
;;;608    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000036  4639              MOV      r1,r7
000038  f7fffffe          BL       TEXT_SetBkColor
                  |L3.60|
;;;609    	}
;;;610    	
;;;611    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
00003c  f640112e          MOV      r1,#0x92e
000040  6868              LDR      r0,[r5,#4]  ; hWinWind
000042  f7fffffe          BL       WM_GetDialogItem
;;;612    	if(set_sw == set_89)
000046  7821              LDRB     r1,[r4,#0]  ; set_sw
000048  2958              CMP      r1,#0x58
00004a  d043              BEQ      |L3.212|
;;;613    	{
;;;614    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;615    	}else{
;;;616    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
00004c  4639              MOV      r1,r7
00004e  f7fffffe          BL       TEXT_SetBkColor
                  |L3.82|
;;;617    	}
;;;618    	
;;;619    	hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000052  f640113a          MOV      r1,#0x93a
000056  6868              LDR      r0,[r5,#4]  ; hWinWind
000058  f7fffffe          BL       WM_GetDialogItem
;;;620    	if(set_sw == set_90)
00005c  7821              LDRB     r1,[r4,#0]  ; set_sw
00005e  2959              CMP      r1,#0x59
000060  d03c              BEQ      |L3.220|
;;;621    	{
;;;622    		 TEXT_SetBkColor(hItem, GUI_BLUE);
;;;623    	}else{
;;;624    		TEXT_SetBkColor(hItem, GUI_INVALID_COLOR);
000062  4639              MOV      r1,r7
000064  f7fffffe          BL       TEXT_SetBkColor
                  |L3.104|
;;;625    	}
;;;626    	
;;;627    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_1);
000068  f6400102          MOV      r1,#0x802
00006c  6868              LDR      r0,[r5,#4]  ; hWinWind
00006e  f7fffffe          BL       WM_GetDialogItem
;;;628    	if(set_sw == set_18)
000072  7821              LDRB     r1,[r4,#0]  ; set_sw
000074  2911              CMP      r1,#0x11
000076  d035              BEQ      |L3.228|
;;;629    	{
;;;630    		 BUTTON_SetPressed(hItem,1);
;;;631    	}else{
;;;632    		 BUTTON_SetPressed(hItem,0);
000078  2100              MOVS     r1,#0
00007a  f7fffffe          BL       BUTTON_SetPressed
                  |L3.126|
;;;633    	}
;;;634    
;;;635    	
;;;636        hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_2);
00007e  f6400103          MOV      r1,#0x803
000082  6868              LDR      r0,[r5,#4]  ; hWinWind
000084  f7fffffe          BL       WM_GetDialogItem
;;;637        if(set_sw == set_19)
000088  7821              LDRB     r1,[r4,#0]  ; set_sw
00008a  2912              CMP      r1,#0x12
00008c  d02e              BEQ      |L3.236|
;;;638    	{
;;;639    		BUTTON_SetPressed(hItem,1);
;;;640    	}else{
;;;641    		BUTTON_SetPressed(hItem,0);
00008e  2100              MOVS     r1,#0
000090  f7fffffe          BL       BUTTON_SetPressed
                  |L3.148|
;;;642    	}
;;;643    
;;;644    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_3);
000094  f6400104          MOV      r1,#0x804
000098  6868              LDR      r0,[r5,#4]  ; hWinWind
00009a  f7fffffe          BL       WM_GetDialogItem
;;;645    	if(set_sw == set_89)
00009e  7821              LDRB     r1,[r4,#0]  ; set_sw
0000a0  2958              CMP      r1,#0x58
0000a2  d027              BEQ      |L3.244|
;;;646    	{
;;;647    		 BUTTON_SetPressed(hItem,1);
;;;648    	}else{
;;;649    		BUTTON_SetPressed(hItem,0);
0000a4  2100              MOVS     r1,#0
0000a6  f7fffffe          BL       BUTTON_SetPressed
                  |L3.170|
;;;650    	}
;;;651    	
;;;652    	hItem = WM_GetDialogItem(hWinWind, ID_BUTTON_4);
0000aa  f6400105          MOV      r1,#0x805
0000ae  6868              LDR      r0,[r5,#4]  ; hWinWind
0000b0  f7fffffe          BL       WM_GetDialogItem
;;;653    	if(set_sw == set_90)
0000b4  7821              LDRB     r1,[r4,#0]  ; set_sw
0000b6  2959              CMP      r1,#0x59
0000b8  d020              BEQ      |L3.252|
;;;654    	{
;;;655    		 BUTTON_SetPressed(hItem,1);
;;;656    	}else{
;;;657    		BUTTON_SetPressed(hItem,0);
0000ba  e8bd41f0          POP      {r4-r8,lr}
0000be  2100              MOVS     r1,#0
0000c0  f7ffbffe          B.W      BUTTON_SetPressed
                  |L3.196|
0000c4  4631              MOV      r1,r6                 ;598
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  e7ac              B        |L3.38|
                  |L3.204|
0000cc  4631              MOV      r1,r6                 ;606
0000ce  f7fffffe          BL       TEXT_SetBkColor
0000d2  e7b3              B        |L3.60|
                  |L3.212|
0000d4  4631              MOV      r1,r6                 ;614
0000d6  f7fffffe          BL       TEXT_SetBkColor
0000da  e7ba              B        |L3.82|
                  |L3.220|
0000dc  4631              MOV      r1,r6                 ;622
0000de  f7fffffe          BL       TEXT_SetBkColor
0000e2  e7c1              B        |L3.104|
                  |L3.228|
0000e4  2101              MOVS     r1,#1                 ;630
0000e6  f7fffffe          BL       BUTTON_SetPressed
0000ea  e7c8              B        |L3.126|
                  |L3.236|
0000ec  2101              MOVS     r1,#1                 ;639
0000ee  f7fffffe          BL       BUTTON_SetPressed
0000f2  e7cf              B        |L3.148|
                  |L3.244|
0000f4  2101              MOVS     r1,#1                 ;647
0000f6  f7fffffe          BL       BUTTON_SetPressed
0000fa  e7d6              B        |L3.170|
                  |L3.252|
0000fc  e8bd41f0          POP      {r4-r8,lr}            ;655
000100  2101              MOVS     r1,#1                 ;655
000102  f7ffbffe          B.W      BUTTON_SetPressed
;;;658    	}
;;;659    }
;;;660    
                          ENDP

000106  0000              DCW      0x0000
                  |L3.264|
                          DCD      ||.data||
                  |L3.268|
                          DCD      set_sw

                          AREA ||i.INPUT_POW||, CODE, READONLY, ALIGN=2

                  INPUT_POW PROC
;;;865    void INPUT_POW(char* num);            
;;;866    void INPUT_POW(char* num){ 
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;867    	u8 i;
;;;868        switch(set_sw){
000006  4855              LDR      r0,|L4.348|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;869    		case set_18:
;;;870            {
;;;871                WM_HWIN hItem;
;;;872    //            WM_InvalidateWindow(hWinWind);
;;;873                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00000a  4855              LDR      r0,|L4.352|
;;;874    			if(bit < 6)
;;;875    			{
;;;876    				strcat(set_limit,num);
;;;877    			}
;;;878    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4c55              LDR      r4,|L4.356|
00000e  4d56              LDR      r5,|L4.360|
000010  6840              LDR      r0,[r0,#4]            ;873
000012  2a11              CMP      r2,#0x11              ;868
000014  d01d              BEQ      |L4.82|
000016  2a12              CMP      r2,#0x12              ;868
000018  d040              BEQ      |L4.156|
00001a  2a58              CMP      r2,#0x58              ;868
00001c  d063              BEQ      |L4.230|
00001e  2a59              CMP      r2,#0x59              ;868
000020  d17e              BNE      |L4.288|
;;;879    			{
;;;880    				
;;;881    			}else{			
;;;882    				
;;;883    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;884    				{
;;;885    					dot_flag = bit;
;;;886    				}
;;;887    				bit ++;
;;;888    			}
;;;889    			TEXT_SetText(hItem,set_limit);
;;;890    //            switch(bit){
;;;891    //                case 1:
;;;892    //                {
;;;893    //					for(i=0;i<6;i++)
;;;894    //					{
;;;895    //						set_limit[i] = '\0';
;;;896    //					}
;;;897    //                    pow_v = atoi(num) * 100;
;;;898    //                    strcat(set_limit,num);            
;;;899    //                    TEXT_SetText(hItem,set_limit);
;;;900    //                    bit = 2;
;;;901    //                    break;
;;;902    //                }
;;;903    //                case 2:
;;;904    //                {
;;;905    //                    strcat(set_limit,num);
;;;906    //					if(set_limit[bit-1] == 0x62){
;;;907    //						set_limit[bit-1] = '\0';
;;;908    //						set_limit[bit-2] = '\0';
;;;909    //						bit -= 1;
;;;910    //						pow_v = pow_v - atoi(num) * 100;
;;;911    //						TEXT_SetText(hItem,set_limit);
;;;912    //						break;
;;;913    //					}
;;;914    //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;915    //                    {
;;;916    //                        dot_flag = 1;
;;;917    //                    }else{
;;;918    //                        pow_v = pow_v * 10 + atoi(num) * 100;
;;;919    //                    }           
;;;920    //                    TEXT_SetText(hItem,set_limit);
;;;921    //                    bit = 3;
;;;922    //                    break;
;;;923    //                }
;;;924    //                case 3:
;;;925    //                {
;;;926    //                    strcat(set_limit,num);
;;;927    //					if(set_limit[bit-1] == 0x62){
;;;928    //						set_limit[bit-1] = '\0';
;;;929    //						set_limit[bit-2] = '\0';
;;;930    //						bit -= 1;
;;;931    //						TEXT_SetText(hItem,set_limit);
;;;932    //						break;
;;;933    //					}
;;;934    //                    if(dot_flag == 0)
;;;935    //                    {
;;;936    //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;937    //                        {                            
;;;938    //                            dot_flag = 2;
;;;939    //                        }else{
;;;940    //                            pow_v = /*3000*/ 6200;
;;;941    //                        }
;;;942    //                    }else{
;;;943    //						pow_v = pow_v + atoi(num) * 10;
;;;944    //                    }
;;;945    //                    TEXT_SetText(hItem,set_limit);                  
;;;946    //                    bit = 4;
;;;947    //                    break;
;;;948    //                }
;;;949    //                case 4:
;;;950    //                {
;;;951    //                    strcat(set_limit,num);
;;;952    //					if(set_limit[bit-1] == 0x62){
;;;953    //						set_limit[bit-1] = '\0';
;;;954    //						set_limit[bit-2] = '\0';
;;;955    //						bit -= 1;
;;;956    //						TEXT_SetText(hItem,set_limit);
;;;957    //						pow_v = pow_v - atoi(num) * 10;
;;;958    //						break;
;;;959    //					}
;;;960    //                    if(dot_flag == 0)
;;;961    //                    {
;;;962    //                        pow_v = /*3000*/ 6200;
;;;963    //                    }else if(dot_flag == 2){
;;;964    //                        pow_v = pow_v + atoi(num) * 10;
;;;965    //                    }else{
;;;966    //                        pow_v = pow_v + atoi(num);
;;;967    //                    }
;;;968    //                    TEXT_SetText(hItem,set_limit);                   
;;;969    //                    bit = 5;
;;;970    //                    break;
;;;971    //                }
;;;972    //                case 5:
;;;973    //                {
;;;974    //                    strcat(set_limit,num);
;;;975    //					if(set_limit[bit-1] == 0x62){
;;;976    //						set_limit[bit-1] = '\0';
;;;977    //						set_limit[bit-2] = '\0';
;;;978    //						bit -= 1;
;;;979    //						TEXT_SetText(hItem,set_limit);
;;;980    //						break;
;;;981    //					}
;;;982    //                    if(dot_flag == 0)
;;;983    //                    {
;;;984    //                        pow_v = /*3000*/ 6200;
;;;985    //                    }else if(dot_flag == 1){
;;;986    //                        pow_v = pow_v;
;;;987    //                    }else{
;;;988    //                        pow_v = pow_v + atoi(num);
;;;989    //                    }
;;;990    //                    TEXT_SetText(hItem,set_limit);                   
;;;991    //                    bit = 1;
;;;992    //                    break;
;;;993    //                }
;;;994    //            }
;;;995                break;
;;;996            }
;;;997            case set_19:
;;;998            {
;;;999                WM_HWIN hItem;
;;;1000   //            WM_InvalidateWindow(hWinWind);
;;;1001               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;1002   			if(bit < 7)
;;;1003   			{
;;;1004   				strcat(set_limit,num);
;;;1005   			}
;;;1006   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1007   			{
;;;1008   				
;;;1009   			}else{			
;;;1010   				
;;;1011   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1012   				{
;;;1013   					dot_flag = bit;
;;;1014   				}
;;;1015   				bit ++;
;;;1016   			}
;;;1017   			TEXT_SetText(hItem,set_limit);
;;;1018   //            switch(bit){
;;;1019   //                case 1:
;;;1020   //                {
;;;1021   //					for(i=0;i<6;i++)
;;;1022   //					{
;;;1023   //						set_limit[i] = '\0';
;;;1024   //					}
;;;1025   //                    pow_c = atoi(num) * 1000;
;;;1026   //                    strcat(set_limit,num);            
;;;1027   //                    TEXT_SetText(hItem,set_limit);
;;;1028   //                    bit = 2;
;;;1029   //                    break;
;;;1030   //                }
;;;1031   //                case 2:
;;;1032   //                {
;;;1033   //                    strcat(set_limit,num);            
;;;1034   //                    TEXT_SetText(hItem,set_limit);
;;;1035   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1036   //                    {
;;;1037   //                        dot_flag = 1;
;;;1038   //                    }else{
;;;1039   //                        pow_c = pow_c * 10 + atoi(num) * 1000;
;;;1040   //                    }
;;;1041   //                    bit = 3;
;;;1042   //                    break;
;;;1043   //                }
;;;1044   //                case 3:
;;;1045   //                {
;;;1046   //                    strcat(set_limit,num);
;;;1047   //                    TEXT_SetText(hItem,set_limit);
;;;1048   //                    if(dot_flag == 0)
;;;1049   //                    {
;;;1050   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1051   //                        {                            
;;;1052   //                            dot_flag = 2;
;;;1053   //                        }else{
;;;1054   //                            pow_c = 5000;
;;;1055   //                        }
;;;1056   //                    }else{
;;;1057   //                        pow_c = pow_c + atoi(num) * 100;
;;;1058   //                    }
;;;1059   //                                       
;;;1060   //                    bit = 4;
;;;1061   //                    break;
;;;1062   //                }
;;;1063   //                case 4:
;;;1064   //                {
;;;1065   //                    strcat(set_limit,num);
;;;1066   //                    TEXT_SetText(hItem,set_limit);
;;;1067   //                    if(dot_flag == 0)
;;;1068   //                    {
;;;1069   //                        pow_c = 5000;
;;;1070   //                    }else if(dot_flag == 2){
;;;1071   //                        pow_c = pow_c + atoi(num) * 100;
;;;1072   //                    }else{
;;;1073   //                        pow_c = pow_c + atoi(num) * 10;
;;;1074   //                    }
;;;1075   //                                       
;;;1076   //                    bit = 5;
;;;1077   //                    break;
;;;1078   //                }
;;;1079   //                case 5:
;;;1080   //                {
;;;1081   //                    strcat(set_limit,num);
;;;1082   //                    TEXT_SetText(hItem,set_limit);
;;;1083   //                    if(dot_flag == 0)
;;;1084   //                    {
;;;1085   //                        pow_c = 5000;
;;;1086   //                    }else if(dot_flag == 1){
;;;1087   //                        pow_c = pow_c + atoi(num);
;;;1088   //                    }else{
;;;1089   //                        pow_c = pow_c + atoi(num) * 10;
;;;1090   //                    }
;;;1091   //                                       
;;;1092   //                    bit = 6;
;;;1093   //                    break;
;;;1094   //                }
;;;1095   //                case 6:
;;;1096   //                {
;;;1097   //                    strcat(set_limit,num);
;;;1098   //                    TEXT_SetText(hItem,set_limit);
;;;1099   //                    if(dot_flag == 0)
;;;1100   //                    {
;;;1101   //                        pow_c = 0;
;;;1102   //                    }else if(dot_flag == 2){
;;;1103   //                        pow_c = pow_c + atoi(num);
;;;1104   //                    }                 
;;;1105   //                    bit = 1;
;;;1106   //                    break;
;;;1107   //                }
;;;1108   //            }
;;;1109           }
;;;1110           break;
;;;1111   		case set_89:
;;;1112           {
;;;1113               WM_HWIN hItem;
;;;1114   //            WM_InvalidateWindow(hWinWind);
;;;1115               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;1116   			if(bit < 7)
;;;1117   			{
;;;1118   				strcat(set_limit,num);
;;;1119   			}
;;;1120   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1121   			{
;;;1122   				
;;;1123   			}else{			
;;;1124   				
;;;1125   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1126   				{
;;;1127   					dot_flag = bit;
;;;1128   				}
;;;1129   				bit ++;
;;;1130   			}
;;;1131   			TEXT_SetText(hItem,set_limit);
;;;1132   //            switch(bit){
;;;1133   //                case 1:
;;;1134   //                {
;;;1135   //					for(i=0;i<6;i++)
;;;1136   //					{
;;;1137   //						set_limit[i] = '\0';
;;;1138   //					}
;;;1139   //                    set_pow_cutoffc = atoi(num) * 1000;
;;;1140   //                    strcat(set_limit,num);            
;;;1141   //                    TEXT_SetText(hItem,set_limit);
;;;1142   //                    bit = 2;
;;;1143   //                    break;
;;;1144   //                }
;;;1145   //                case 2:
;;;1146   //                {
;;;1147   //                    strcat(set_limit,num);            
;;;1148   //                    TEXT_SetText(hItem,set_limit);
;;;1149   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1150   //                    {
;;;1151   //                        dot_flag = 1;
;;;1152   //                    }else{
;;;1153   //                        set_pow_cutoffc = set_pow_cutoffc * 10 + atoi(num) * 1000;
;;;1154   //                    }
;;;1155   //                    bit = 3;
;;;1156   //                    break;
;;;1157   //                }
;;;1158   //                case 3:
;;;1159   //                {
;;;1160   //                    strcat(set_limit,num);
;;;1161   //                    TEXT_SetText(hItem,set_limit);
;;;1162   //                    if(dot_flag == 0)
;;;1163   //                    {
;;;1164   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1165   //                        {                            
;;;1166   //                            dot_flag = 2;
;;;1167   //                        }else{
;;;1168   //                            set_pow_cutoffc = 5000;
;;;1169   //                        }
;;;1170   //                    }else{
;;;1171   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1172   //                    }
;;;1173   //                                       
;;;1174   //                    bit = 4;
;;;1175   //                    break;
;;;1176   //                }
;;;1177   //                case 4:
;;;1178   //                {
;;;1179   //                    strcat(set_limit,num);
;;;1180   //                    TEXT_SetText(hItem,set_limit);
;;;1181   //                    if(dot_flag == 0)
;;;1182   //                    {
;;;1183   //                        set_pow_cutoffc = 5000;
;;;1184   //                    }else if(dot_flag == 2){
;;;1185   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 100;
;;;1186   //                    }else{
;;;1187   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1188   //                    }
;;;1189   //                                       
;;;1190   //                    bit = 5;
;;;1191   //                    break;
;;;1192   //                }
;;;1193   //                case 5:
;;;1194   //                {
;;;1195   //                    strcat(set_limit,num);
;;;1196   //                    TEXT_SetText(hItem,set_limit);
;;;1197   //                    if(dot_flag == 0)
;;;1198   //                    {
;;;1199   //                        set_pow_cutoffc = 5000;
;;;1200   //                    }else if(dot_flag == 1){
;;;1201   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1202   //                    }else{
;;;1203   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num) * 10;
;;;1204   //                    }
;;;1205   //                                       
;;;1206   //                    bit = 6;
;;;1207   //                    break;
;;;1208   //                }
;;;1209   //                case 6:
;;;1210   //                {
;;;1211   //                    strcat(set_limit,num);
;;;1212   //                    TEXT_SetText(hItem,set_limit);
;;;1213   //                    if(dot_flag == 0)
;;;1214   //                    {
;;;1215   //                        set_pow_cutoffc = 0;
;;;1216   //                    }else if(dot_flag == 2){
;;;1217   //                        set_pow_cutoffc = set_pow_cutoffc + atoi(num);
;;;1218   //                    }                 
;;;1219   //                    bit = 1;
;;;1220   //                    break;
;;;1221   //                }
;;;1222   //            }
;;;1223           }
;;;1224           break;
;;;1225   		case set_90:
;;;1226           {
;;;1227               WM_HWIN hItem;
;;;1228   //            WM_InvalidateWindow(hWinWind);
;;;1229               hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
000022  f640113a          MOV      r1,#0x93a
000026  f7fffffe          BL       WM_GetDialogItem
00002a  4607              MOV      r7,r0
;;;1230   			if(bit < 7)
00002c  7828              LDRB     r0,[r5,#0]  ; bit
00002e  2807              CMP      r0,#7
000030  d203              BCS      |L4.58|
;;;1231   			{
;;;1232   				strcat(set_limit,num);
000032  4631              MOV      r1,r6
000034  484d              LDR      r0,|L4.364|
000036  f7fffffe          BL       strcat
                  |L4.58|
;;;1233   			}
;;;1234   			if(dot_flag != 0 && strcmp(num,".") == 0)
00003a  7820              LDRB     r0,[r4,#0]  ; dot_flag
00003c  b128              CBZ      r0,|L4.74|
00003e  a14c              ADR      r1,|L4.368|
000040  4630              MOV      r0,r6
000042  f7fffffe          BL       strcmp
000046  2800              CMP      r0,#0
000048  d06b              BEQ      |L4.290|
                  |L4.74|
;;;1235   			{
;;;1236   				
;;;1237   			}else{			
;;;1238   				
;;;1239   				if(dot_flag == 0 && strcmp(num,".") == 0)
00004a  7820              LDRB     r0,[r4,#0]  ; dot_flag
00004c  2800              CMP      r0,#0
00004e  d073              BEQ      |L4.312|
000050  e079              B        |L4.326|
                  |L4.82|
000052  f6400166          MOV      r1,#0x866             ;873
000056  f7fffffe          BL       WM_GetDialogItem
00005a  4607              MOV      r7,r0                 ;873
00005c  7828              LDRB     r0,[r5,#0]            ;874  ; bit
00005e  2806              CMP      r0,#6                 ;874
000060  d203              BCS      |L4.106|
000062  4631              MOV      r1,r6                 ;876
000064  4841              LDR      r0,|L4.364|
000066  f7fffffe          BL       strcat
                  |L4.106|
00006a  7820              LDRB     r0,[r4,#0]            ;878  ; dot_flag
00006c  b120              CBZ      r0,|L4.120|
00006e  a140              ADR      r1,|L4.368|
000070  4630              MOV      r0,r6                 ;878
000072  f7fffffe          BL       strcmp
000076  b158              CBZ      r0,|L4.144|
                  |L4.120|
000078  7820              LDRB     r0,[r4,#0]            ;883  ; dot_flag
00007a  b930              CBNZ     r0,|L4.138|
00007c  a13c              ADR      r1,|L4.368|
00007e  4630              MOV      r0,r6                 ;883
000080  f7fffffe          BL       strcmp
000084  b908              CBNZ     r0,|L4.138|
000086  7828              LDRB     r0,[r5,#0]            ;885  ; bit
000088  7020              STRB     r0,[r4,#0]            ;885
                  |L4.138|
00008a  7828              LDRB     r0,[r5,#0]            ;887  ; bit
00008c  1c40              ADDS     r0,r0,#1              ;887
00008e  7028              STRB     r0,[r5,#0]            ;887
                  |L4.144|
000090  4638              MOV      r0,r7                 ;889
000092  e8bd41f0          POP      {r4-r8,lr}            ;889
000096  4935              LDR      r1,|L4.364|
000098  f7ffbffe          B.W      TEXT_SetText
                  |L4.156|
00009c  f6400167          MOV      r1,#0x867             ;1001
0000a0  f7fffffe          BL       WM_GetDialogItem
0000a4  4607              MOV      r7,r0                 ;1001
0000a6  7828              LDRB     r0,[r5,#0]            ;1002  ; bit
0000a8  2807              CMP      r0,#7                 ;1002
0000aa  d203              BCS      |L4.180|
0000ac  4631              MOV      r1,r6                 ;1004
0000ae  482f              LDR      r0,|L4.364|
0000b0  f7fffffe          BL       strcat
                  |L4.180|
0000b4  7820              LDRB     r0,[r4,#0]            ;1006  ; dot_flag
0000b6  b120              CBZ      r0,|L4.194|
0000b8  a12d              ADR      r1,|L4.368|
0000ba  4630              MOV      r0,r6                 ;1006
0000bc  f7fffffe          BL       strcmp
0000c0  b158              CBZ      r0,|L4.218|
                  |L4.194|
0000c2  7820              LDRB     r0,[r4,#0]            ;1011  ; dot_flag
0000c4  b930              CBNZ     r0,|L4.212|
0000c6  a12a              ADR      r1,|L4.368|
0000c8  4630              MOV      r0,r6                 ;1011
0000ca  f7fffffe          BL       strcmp
0000ce  b908              CBNZ     r0,|L4.212|
0000d0  7828              LDRB     r0,[r5,#0]            ;1013  ; bit
0000d2  7020              STRB     r0,[r4,#0]            ;1013
                  |L4.212|
0000d4  7828              LDRB     r0,[r5,#0]            ;1015  ; bit
0000d6  1c40              ADDS     r0,r0,#1              ;1015
0000d8  7028              STRB     r0,[r5,#0]            ;1015
                  |L4.218|
0000da  4638              MOV      r0,r7                 ;1017
0000dc  e8bd41f0          POP      {r4-r8,lr}            ;1017
0000e0  4922              LDR      r1,|L4.364|
0000e2  f7ffbffe          B.W      TEXT_SetText
                  |L4.230|
0000e6  f640112e          MOV      r1,#0x92e             ;1115
0000ea  f7fffffe          BL       WM_GetDialogItem
0000ee  4607              MOV      r7,r0                 ;1115
0000f0  7828              LDRB     r0,[r5,#0]            ;1116  ; bit
0000f2  2807              CMP      r0,#7                 ;1116
0000f4  d203              BCS      |L4.254|
0000f6  4631              MOV      r1,r6                 ;1118
0000f8  481c              LDR      r0,|L4.364|
0000fa  f7fffffe          BL       strcat
                  |L4.254|
0000fe  7820              LDRB     r0,[r4,#0]            ;1120  ; dot_flag
000100  b120              CBZ      r0,|L4.268|
000102  a11b              ADR      r1,|L4.368|
000104  4630              MOV      r0,r6                 ;1120
000106  f7fffffe          BL       strcmp
00010a  b178              CBZ      r0,|L4.300|
                  |L4.268|
00010c  7820              LDRB     r0,[r4,#0]            ;1125  ; dot_flag
00010e  b930              CBNZ     r0,|L4.286|
000110  a117              ADR      r1,|L4.368|
000112  4630              MOV      r0,r6                 ;1125
000114  f7fffffe          BL       strcmp
000118  b908              CBNZ     r0,|L4.286|
00011a  7828              LDRB     r0,[r5,#0]            ;1127  ; bit
00011c  7020              STRB     r0,[r4,#0]            ;1127
                  |L4.286|
00011e  e002              B        |L4.294|
                  |L4.288|
000120  e01a              B        |L4.344|
                  |L4.290|
000122  e013              B        |L4.332|
000124  e008              B        |L4.312|
                  |L4.294|
000126  7828              LDRB     r0,[r5,#0]            ;1129  ; bit
000128  1c40              ADDS     r0,r0,#1              ;1129
00012a  7028              STRB     r0,[r5,#0]            ;1129
                  |L4.300|
00012c  4638              MOV      r0,r7                 ;1131
00012e  e8bd41f0          POP      {r4-r8,lr}            ;1131
000132  490e              LDR      r1,|L4.364|
000134  f7ffbffe          B.W      TEXT_SetText
                  |L4.312|
000138  a10d              ADR      r1,|L4.368|
00013a  4630              MOV      r0,r6
00013c  f7fffffe          BL       strcmp
000140  b908              CBNZ     r0,|L4.326|
;;;1240   				{
;;;1241   					dot_flag = bit;
000142  7828              LDRB     r0,[r5,#0]  ; bit
000144  7020              STRB     r0,[r4,#0]
                  |L4.326|
;;;1242   				}
;;;1243   				bit ++;
000146  7828              LDRB     r0,[r5,#0]  ; bit
000148  1c40              ADDS     r0,r0,#1
00014a  7028              STRB     r0,[r5,#0]
                  |L4.332|
;;;1244   			}
;;;1245   			TEXT_SetText(hItem,set_limit);			
00014c  4638              MOV      r0,r7
00014e  e8bd41f0          POP      {r4-r8,lr}
000152  4906              LDR      r1,|L4.364|
000154  f7ffbffe          B.W      TEXT_SetText
                  |L4.344|
;;;1246   		}
;;;1247       }    
;;;1248   }
000158  e8bd81f0          POP      {r4-r8,pc}
;;;1249   
                          ENDP

                  |L4.348|
                          DCD      set_sw
                  |L4.352|
                          DCD      ||.data||
                  |L4.356|
                          DCD      dot_flag
                  |L4.360|
                          DCD      bit
                  |L4.364|
                          DCD      set_limit
                  |L4.368|
000170  2e00              DCB      ".",0
000172  00                DCB      0
000173  00                DCB      0

                          AREA ||i.MENU_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  MENU_SET PROC
;;;662    void MENU_SET(void);
;;;663    void MENU_SET(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;664    {
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
;;;665        vu8 i;
;;;666        char buf[6];    
;;;667    
;;;668        float dis_output_v;
;;;669        float dis_output_c; 
;;;670        
;;;671        if(SET_Voltage > /*3000*/ 6000)
00000a  4dd7              LDR      r5,|L5.872|
00000c  6869              LDR      r1,[r5,#4]  ; Run_Control
00000e  f2417070          MOV      r0,#0x1770
000012  4281              CMP      r1,r0
000014  d900              BLS      |L5.24|
;;;672        {
;;;673          SET_Voltage = /*3000*/ 6000;
000016  6068              STR      r0,[r5,#4]  ; Run_Control
                  |L5.24|
;;;674        }
;;;675        if(SET_Current > 5000)
000018  68a8              LDR      r0,[r5,#8]  ; Run_Control
00001a  f2413a88          MOV      r10,#0x1388
00001e  4550              CMP      r0,r10
000020  d901              BLS      |L5.38|
;;;676        {
;;;677          SET_Current = 5000;
000022  f8c5a008          STR      r10,[r5,#8]  ; Run_Control
                  |L5.38|
;;;678        }
;;;679        switch(set_sw){
000026  48d1              LDR      r0,|L5.876|
000028  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;680    
;;;681            case set_18:
;;;682            {           
;;;683                WM_HWIN hItem;
;;;684    //            WM_InvalidateWindow(hWinWind);
;;;685                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_41);
00002a  4ad3              LDR      r2,|L5.888|
;;;686    			if(dot_flag == 0){
;;;687    				pow_v = atoi(set_limit)*100;					
00002c  4ed0              LDR      r6,|L5.880|
;;;688    			}else if(dot_flag != 0){
;;;689    				memset(buf, '\0', sizeof(buf));
;;;690    				strncpy(buf,set_limit,dot_flag + 2);
;;;691    				pow_v = atof(buf)*100;
;;;692    			}
;;;693    			if(pow_v > set_max_v)
;;;694    			{
;;;695    				pow_v = set_max_v;
;;;696    			}
;;;697                SET_Voltage = pow_v;
;;;698                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;699                {
;;;700                    SET_Voltage = 0;
;;;701                }
;;;702    			SET_Voltage_Laod = SET_Voltage * 10 + 50;
;;;703                dis_output_v = (float)SET_Voltage/100;
;;;704                
;;;705                sprintf(buf,"%.2f",dis_output_v);
;;;706                TEXT_SetText(hItem,buf);
;;;707                
;;;708                                                                         
;;;709                                
;;;710                Write_Limits();
;;;711                bit = 1;
00002e  2701              MOVS     r7,#1
000030  f8df8340          LDR      r8,|L5.884|
000034  2400              MOVS     r4,#0                 ;685
000036  f8df9344          LDR      r9,|L5.892|
00003a  6850              LDR      r0,[r2,#4]            ;679
00003c  f04f0b64          MOV      r11,#0x64             ;698
000040  2911              CMP      r1,#0x11              ;679
000042  d05f              BEQ      |L5.260|
;;;712                dot_flag = 0;
;;;713    			memset(set_limit, '\0', sizeof(set_limit));
;;;714                break; 
;;;715             }
;;;716             case set_19:
;;;717             {           
;;;718                WM_HWIN hItem;
;;;719    //            WM_InvalidateWindow(hWinWind);
;;;720                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_42);
;;;721    			if(dot_flag == 0){
;;;722    				pow_c = atoi(set_limit)*1000;					
;;;723    			}else if(dot_flag != 0){
;;;724    				memset(buf, '\0', sizeof(buf));
;;;725    				strncpy(buf,set_limit,dot_flag + 3);
;;;726    				pow_c = atof(buf)*1000;
000044  ed9f8bce          VLDR     d8,|L5.896|
;;;727    			}
;;;728                  
;;;729                if(pow_c > set_max_c)
;;;730                {
;;;731                    pow_c = set_max_c;               
;;;732                }
;;;733    			SET_Current = pow_c;
;;;734                if(SET_Voltage/100 * SET_Current/1000 > 250)
;;;735                {
;;;736                    SET_Current = 0;
;;;737                }
;;;738                dis_output_c = (float)SET_Current/1000;
000048  ed9f9acf          VLDR     s18,|L5.904|
00004c  2912              CMP      r1,#0x12              ;679
00004e  d07d              BEQ      |L5.332|
;;;739                sprintf(buf,"%.3f",dis_output_c);
;;;740                TEXT_SetText(hItem,buf);            
;;;741                       
;;;742                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
;;;743                                                     
;;;744                Write_Limits();
;;;745                bit = 1;
;;;746                dot_flag = 0;
;;;747    			memset(set_limit, '\0', sizeof(set_limit));
;;;748                break; 
;;;749             }
;;;750             case set_89:
;;;751             {           
;;;752                WM_HWIN hItem;
;;;753    //            WM_InvalidateWindow(hWinWind);
;;;754                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_144);
;;;755    			if(dot_flag == 0){
;;;756    				set_load_cutoffv = atoi(set_limit)*1000;					
000050  4dce              LDR      r5,|L5.908|
000052  2958              CMP      r1,#0x58              ;679
000054  d07b              BEQ      |L5.334|
000056  2959              CMP      r1,#0x59              ;679
000058  d14f              BNE      |L5.250|
;;;757    			}else if(dot_flag != 0){
;;;758    				memset(buf, '\0', sizeof(buf));
;;;759    				strncpy(buf,set_limit,dot_flag + 3);
;;;760    				set_load_cutoffv = atof(buf)*1000;
;;;761    			}
;;;762                if(set_load_cutoffv > 60000)
;;;763                {
;;;764                    set_load_cutoffv = 60000;               
;;;765                }
;;;766                load_cutoffv = (float)set_load_cutoffv/1000;
;;;767                sprintf(buf,"%.3f",load_cutoffv);
;;;768                TEXT_SetText(hItem,buf);            
;;;769                                                     
;;;770                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
;;;771                bit = 1;
;;;772                dot_flag = 0;
;;;773    			memset(set_limit, '\0', sizeof(set_limit));
;;;774                break; 
;;;775             }
;;;776    		 case set_90:
;;;777             {           
;;;778                WM_HWIN hItem;
;;;779    //            WM_InvalidateWindow(hWinWind);
;;;780                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_159);
00005a  f640113a          MOV      r1,#0x93a
00005e  4693              MOV      r11,r2
000060  f7fffffe          BL       WM_GetDialogItem
000064  9000              STR      r0,[sp,#0]
;;;781    			if(dot_flag == 0){
000066  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
00006a  2800              CMP      r0,#0
00006c  d070              BEQ      |L5.336|
;;;782    				set_pow_cutoffc = atoi(set_limit)*1000;					
;;;783    			}else if(dot_flag != 0){
00006e  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
000072  b1a0              CBZ      r0,|L5.158|
;;;784    				memset(buf, '\0', sizeof(buf));
000074  9401              STR      r4,[sp,#4]
000076  9402              STR      r4,[sp,#8]
;;;785    				strncpy(buf,set_limit,dot_flag + 3);
000078  f8992000          LDRB     r2,[r9,#0]  ; dot_flag
00007c  4631              MOV      r1,r6
00007e  1cd2              ADDS     r2,r2,#3
000080  a801              ADD      r0,sp,#4
000082  f7fffffe          BL       strncpy
;;;786    				set_pow_cutoffc = atof(buf)*1000;
000086  a801              ADD      r0,sp,#4
000088  f7fffffe          BL       __hardfp_atof
00008c  ec532b18          VMOV     r2,r3,d8
000090  ec510b10          VMOV     r0,r1,d0
000094  f7fffffe          BL       __aeabi_dmul
000098  f7fffffe          BL       __aeabi_d2iz
00009c  6168              STR      r0,[r5,#0x14]  ; InFlashSave
                  |L5.158|
;;;787    			}
;;;788                  
;;;789                if(set_pow_cutoffc > 5000)
00009e  6968              LDR      r0,[r5,#0x14]  ; InFlashSave
0000a0  4550              CMP      r0,r10
0000a2  dd01              BLE      |L5.168|
;;;790                {
;;;791                    set_pow_cutoffc = 5000;               
0000a4  f8c5a014          STR      r10,[r5,#0x14]  ; InFlashSave
                  |L5.168|
;;;792                }
;;;793    
;;;794                pow_cutoffc = (float)set_pow_cutoffc/1000;
0000a8  ed950a05          VLDR     s0,[r5,#0x14]
0000ac  eef80ac0          VCVT.F32.S32 s1,s0
0000b0  ee800a89          VDIV.F32 s0,s1,s18
0000b4  ed8b0a02          VSTR     s0,[r11,#8]
;;;795                sprintf(buf,"%.3f",pow_cutoffc);
0000b8  ee100a10          VMOV     r0,s0
0000bc  f7fffffe          BL       __aeabi_f2d
0000c0  ec410b10          VMOV     d0,r0,r1
0000c4  a1b2              ADR      r1,|L5.912|
0000c6  ec532b10          VMOV     r2,r3,d0
0000ca  a801              ADD      r0,sp,#4
0000cc  f7fffffe          BL       __2sprintf
;;;796                TEXT_SetText(hItem,buf);            
0000d0  a901              ADD      r1,sp,#4
0000d2  9800              LDR      r0,[sp,#0]
0000d4  f7fffffe          BL       TEXT_SetText
;;;797                       
;;;798                hItem = WM_GetDialogItem(hWinWind, ID_TEXT_34);
0000d8  f640013e          MOV      r1,#0x83e
0000dc  f8db0004          LDR      r0,[r11,#4]  ; hWinWind
0000e0  f7fffffe          BL       WM_GetDialogItem
;;;799                                                     
;;;800                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
0000e4  4aa9              LDR      r2,|L5.908|
0000e6  2128              MOVS     r1,#0x28
0000e8  48ab              LDR      r0,|L5.920|
0000ea  f7fffffe          BL       Flash_Write32BitDatas
;;;801                bit = 1;
0000ee  f8887000          STRB     r7,[r8,#0]
;;;802                dot_flag = 0;
0000f2  f8894000          STRB     r4,[r9,#0]
;;;803    			memset(set_limit, '\0', sizeof(set_limit));
0000f6  6034              STR      r4,[r6,#0]  ; set_limit
0000f8  7134              STRB     r4,[r6,#4]
                  |L5.250|
;;;804                break; 
;;;805             }
;;;806             default:break;
;;;807         }
;;;808    }
0000fa  b003              ADD      sp,sp,#0xc
0000fc  ecbd8b04          VPOP     {d8-d9}
000100  e8bd8ff0          POP      {r4-r11,pc}
                  |L5.260|
000104  f6400166          MOV      r1,#0x866             ;685
000108  f7fffffe          BL       WM_GetDialogItem
00010c  4682              MOV      r10,r0                ;685
00010e  f8990000          LDRB     r0,[r9,#0]            ;686  ; dot_flag
000112  b3e8              CBZ      r0,|L5.400|
000114  f8990000          LDRB     r0,[r9,#0]            ;688  ; dot_flag
000118  b1b8              CBZ      r0,|L5.330|
00011a  9401              STR      r4,[sp,#4]            ;689
00011c  9402              STR      r4,[sp,#8]            ;689
00011e  f8992000          LDRB     r2,[r9,#0]            ;690  ; dot_flag
000122  4993              LDR      r1,|L5.880|
000124  1c92              ADDS     r2,r2,#2              ;690
000126  a801              ADD      r0,sp,#4              ;690
000128  f7fffffe          BL       strncpy
00012c  a801              ADD      r0,sp,#4              ;691
00012e  f7fffffe          BL       __hardfp_atof
000132  ed9f1b9a          VLDR     d1,|L5.924|
000136  ec510b10          VMOV     r0,r1,d0              ;691
00013a  ec532b11          VMOV     r2,r3,d1              ;691
00013e  f7fffffe          BL       __aeabi_dmul
000142  f7fffffe          BL       __aeabi_d2uiz
000146  f8c50098          STR      r0,[r5,#0x98]         ;691  ; Run_Control
                  |L5.330|
00014a  e002              B        |L5.338|
                  |L5.332|
00014c  e048              B        |L5.480|
                  |L5.334|
00014e  e0ae              B        |L5.686|
                  |L5.336|
000150  e102              B        |L5.856|
                  |L5.338|
000152  f8d50098          LDR      r0,[r5,#0x98]         ;693  ; Run_Control
000156  6ba9              LDR      r1,[r5,#0x38]         ;693  ; Run_Control
000158  4288              CMP      r0,r1                 ;693
00015a  d902              BLS      |L5.354|
00015c  6ba8              LDR      r0,[r5,#0x38]         ;695  ; Run_Control
00015e  f8c50098          STR      r0,[r5,#0x98]         ;695  ; Run_Control
                  |L5.354|
000162  f8d50098          LDR      r0,[r5,#0x98]         ;697  ; Run_Control
000166  6068              STR      r0,[r5,#4]            ;697  ; Run_Control
000168  6868              LDR      r0,[r5,#4]            ;698  ; Run_Control
00016a  68a9              LDR      r1,[r5,#8]            ;698  ; Run_Control
00016c  fbb0f0fb          UDIV     r0,r0,r11             ;698
000170  4348              MULS     r0,r1,r0              ;698
000172  498c              LDR      r1,|L5.932|
000174  4288              CMP      r0,r1                 ;698
000176  d900              BLS      |L5.378|
000178  606c              STR      r4,[r5,#4]            ;700  ; Run_Control
                  |L5.378|
00017a  6868              LDR      r0,[r5,#4]            ;702  ; Run_Control
00017c  2132              MOVS     r1,#0x32              ;702
00017e  eb000080          ADD      r0,r0,r0,LSL #2       ;702
000182  eb010040          ADD      r0,r1,r0,LSL #1       ;702
000186  60e8              STR      r0,[r5,#0xc]          ;702  ; Run_Control
000188  6868              LDR      r0,[r5,#4]            ;703  ; Run_Control
00018a  ee000a10          VMOV     s0,r0                 ;703
00018e  e000              B        |L5.402|
                  |L5.400|
000190  e01e              B        |L5.464|
                  |L5.402|
000192  eef80a40          VCVT.F32.U32 s1,s0                 ;703
000196  ed9f1a84          VLDR     s2,|L5.936|
00019a  ee800a81          VDIV.F32 s0,s1,s2              ;703
00019e  ee100a10          VMOV     r0,s0                 ;705
0001a2  f7fffffe          BL       __aeabi_f2d
0001a6  ec410b10          VMOV     d0,r0,r1              ;705
0001aa  a180              ADR      r1,|L5.940|
0001ac  ec532b10          VMOV     r2,r3,d0              ;705
0001b0  a801              ADD      r0,sp,#4              ;705
0001b2  f7fffffe          BL       __2sprintf
0001b6  a901              ADD      r1,sp,#4              ;706
0001b8  4650              MOV      r0,r10                ;706
0001ba  f7fffffe          BL       TEXT_SetText
0001be  f7fffffe          BL       Write_Limits
0001c2  f8887000          STRB     r7,[r8,#0]            ;711
0001c6  f8894000          STRB     r4,[r9,#0]            ;712
0001ca  6034              STR      r4,[r6,#0]            ;713  ; set_limit
0001cc  7134              STRB     r4,[r6,#4]            ;713
0001ce  e794              B        |L5.250|
                  |L5.464|
0001d0  4867              LDR      r0,|L5.880|
0001d2  f7fffffe          BL       atoi
0001d6  2164              MOVS     r1,#0x64              ;687
0001d8  4348              MULS     r0,r1,r0              ;687
0001da  f8c50098          STR      r0,[r5,#0x98]         ;687  ; Run_Control
0001de  e7b4              B        |L5.330|
                  |L5.480|
0001e0  f6400167          MOV      r1,#0x867             ;720
0001e4  4692              MOV      r10,r2                ;720
0001e6  f7fffffe          BL       WM_GetDialogItem
0001ea  9000              STR      r0,[sp,#0]            ;720
0001ec  f8990000          LDRB     r0,[r9,#0]            ;721  ; dot_flag
0001f0  b3f0              CBZ      r0,|L5.624|
0001f2  f8990000          LDRB     r0,[r9,#0]            ;723  ; dot_flag
0001f6  b1a8              CBZ      r0,|L5.548|
0001f8  9401              STR      r4,[sp,#4]            ;724
0001fa  9402              STR      r4,[sp,#8]            ;724
0001fc  f8992000          LDRB     r2,[r9,#0]            ;725  ; dot_flag
000200  495b              LDR      r1,|L5.880|
000202  1cd2              ADDS     r2,r2,#3              ;725
000204  a801              ADD      r0,sp,#4              ;725
000206  f7fffffe          BL       strncpy
00020a  a801              ADD      r0,sp,#4              ;726
00020c  f7fffffe          BL       __hardfp_atof
000210  ec532b18          VMOV     r2,r3,d8              ;726
000214  ec510b10          VMOV     r0,r1,d0              ;726
000218  f7fffffe          BL       __aeabi_dmul
00021c  f7fffffe          BL       __aeabi_d2uiz
000220  f8c500a0          STR      r0,[r5,#0xa0]         ;726  ; Run_Control
                  |L5.548|
000224  f8d500a0          LDR      r0,[r5,#0xa0]         ;729  ; Run_Control
000228  6ca9              LDR      r1,[r5,#0x48]         ;729  ; Run_Control
00022a  4288              CMP      r0,r1                 ;729
00022c  d902              BLS      |L5.564|
00022e  6ca8              LDR      r0,[r5,#0x48]         ;731  ; Run_Control
000230  f8c500a0          STR      r0,[r5,#0xa0]         ;731  ; Run_Control
                  |L5.564|
000234  f8d500a0          LDR      r0,[r5,#0xa0]         ;733  ; Run_Control
000238  60a8              STR      r0,[r5,#8]            ;733  ; Run_Control
00023a  6868              LDR      r0,[r5,#4]            ;734  ; Run_Control
00023c  68a9              LDR      r1,[r5,#8]            ;734  ; Run_Control
00023e  fbb0f0fb          UDIV     r0,r0,r11             ;734
000242  4348              MULS     r0,r1,r0              ;734
000244  4957              LDR      r1,|L5.932|
000246  4288              CMP      r0,r1                 ;734
000248  d900              BLS      |L5.588|
00024a  60ac              STR      r4,[r5,#8]            ;736  ; Run_Control
                  |L5.588|
00024c  68a8              LDR      r0,[r5,#8]            ;738  ; Run_Control
00024e  ee000a10          VMOV     s0,r0                 ;738
000252  eef80a40          VCVT.F32.U32 s1,s0                 ;738
000256  ee800a89          VDIV.F32 s0,s1,s18             ;738
00025a  ee100a10          VMOV     r0,s0                 ;739
00025e  f7fffffe          BL       __aeabi_f2d
000262  ec410b10          VMOV     d0,r0,r1              ;739
000266  a14a              ADR      r1,|L5.912|
000268  ec532b10          VMOV     r2,r3,d0              ;739
00026c  a801              ADD      r0,sp,#4              ;739
00026e  e000              B        |L5.626|
                  |L5.624|
000270  e014              B        |L5.668|
                  |L5.626|
000272  f7fffffe          BL       __2sprintf
000276  a901              ADD      r1,sp,#4              ;740
000278  9800              LDR      r0,[sp,#0]            ;740
00027a  f7fffffe          BL       TEXT_SetText
00027e  f640013e          MOV      r1,#0x83e             ;742
000282  f8da0004          LDR      r0,[r10,#4]           ;742  ; hWinWind
000286  f7fffffe          BL       WM_GetDialogItem
00028a  f7fffffe          BL       Write_Limits
00028e  f8887000          STRB     r7,[r8,#0]            ;745
000292  f8894000          STRB     r4,[r9,#0]            ;746
000296  6034              STR      r4,[r6,#0]            ;747  ; set_limit
000298  7134              STRB     r4,[r6,#4]            ;747
00029a  e72e              B        |L5.250|
                  |L5.668|
00029c  4834              LDR      r0,|L5.880|
00029e  f7fffffe          BL       atoi
0002a2  f44f717a          MOV      r1,#0x3e8             ;722
0002a6  4348              MULS     r0,r1,r0              ;722
0002a8  f8c500a0          STR      r0,[r5,#0xa0]         ;722  ; Run_Control
0002ac  e7ba              B        |L5.548|
                  |L5.686|
0002ae  f640112e          MOV      r1,#0x92e             ;754
0002b2  f7fffffe          BL       WM_GetDialogItem
0002b6  4682              MOV      r10,r0                ;754
0002b8  f8990000          LDRB     r0,[r9,#0]            ;755  ; dot_flag
0002bc  b3f0              CBZ      r0,|L5.828|
0002be  f8990000          LDRB     r0,[r9,#0]            ;757  ; dot_flag
0002c2  b1a0              CBZ      r0,|L5.750|
0002c4  9401              STR      r4,[sp,#4]            ;758
0002c6  9402              STR      r4,[sp,#8]            ;758
0002c8  f8992000          LDRB     r2,[r9,#0]            ;759  ; dot_flag
0002cc  4928              LDR      r1,|L5.880|
0002ce  1cd2              ADDS     r2,r2,#3              ;759
0002d0  a801              ADD      r0,sp,#4              ;759
0002d2  f7fffffe          BL       strncpy
0002d6  a801              ADD      r0,sp,#4              ;760
0002d8  f7fffffe          BL       __hardfp_atof
0002dc  ec532b18          VMOV     r2,r3,d8              ;760
0002e0  ec510b10          VMOV     r0,r1,d0              ;760
0002e4  f7fffffe          BL       __aeabi_dmul
0002e8  f7fffffe          BL       __aeabi_d2iz
0002ec  6128              STR      r0,[r5,#0x10]         ;760  ; InFlashSave
                  |L5.750|
0002ee  6929              LDR      r1,[r5,#0x10]         ;762  ; InFlashSave
0002f0  f64e2060          MOV      r0,#0xea60            ;762
0002f4  4281              CMP      r1,r0                 ;762
0002f6  dd00              BLE      |L5.762|
0002f8  6128              STR      r0,[r5,#0x10]         ;764  ; InFlashSave
                  |L5.762|
0002fa  ed950a04          VLDR     s0,[r5,#0x10]         ;766
0002fe  482d              LDR      r0,|L5.948|
000300  eef80ac0          VCVT.F32.S32 s1,s0                 ;766
000304  ee800a89          VDIV.F32 s0,s1,s18             ;766
000308  ed800a00          VSTR     s0,[r0,#0]            ;766
00030c  ee100a10          VMOV     r0,s0                 ;767
000310  f7fffffe          BL       __aeabi_f2d
000314  ec410b10          VMOV     d0,r0,r1              ;767
000318  a11d              ADR      r1,|L5.912|
00031a  ec532b10          VMOV     r2,r3,d0              ;767
00031e  a801              ADD      r0,sp,#4              ;767
000320  f7fffffe          BL       __2sprintf
000324  a901              ADD      r1,sp,#4              ;768
000326  4650              MOV      r0,r10                ;768
000328  f7fffffe          BL       TEXT_SetText
00032c  4a17              LDR      r2,|L5.908|
00032e  2128              MOVS     r1,#0x28              ;770
000330  4819              LDR      r0,|L5.920|
000332  f7fffffe          BL       Flash_Write32BitDatas
000336  f8887000          STRB     r7,[r8,#0]            ;771
00033a  e000              B        |L5.830|
                  |L5.828|
00033c  e004              B        |L5.840|
                  |L5.830|
00033e  f8894000          STRB     r4,[r9,#0]            ;772
000342  6034              STR      r4,[r6,#0]            ;773  ; set_limit
000344  7134              STRB     r4,[r6,#4]            ;773
000346  e6d8              B        |L5.250|
                  |L5.840|
000348  4809              LDR      r0,|L5.880|
00034a  f7fffffe          BL       atoi
00034e  f44f717a          MOV      r1,#0x3e8             ;756
000352  4348              MULS     r0,r1,r0              ;756
000354  6128              STR      r0,[r5,#0x10]         ;756  ; InFlashSave
000356  e7ca              B        |L5.750|
                  |L5.856|
000358  4805              LDR      r0,|L5.880|
00035a  f7fffffe          BL       atoi
00035e  f44f717a          MOV      r1,#0x3e8             ;782
000362  4348              MULS     r0,r1,r0              ;782
000364  6168              STR      r0,[r5,#0x14]         ;782  ; InFlashSave
000366  e69a              B        |L5.158|
;;;809    void DEL_POW(void)
                          ENDP

                  |L5.872|
                          DCD      Run_Control
                  |L5.876|
                          DCD      set_sw
                  |L5.880|
                          DCD      set_limit
                  |L5.884|
                          DCD      bit
                  |L5.888|
                          DCD      ||.data||
                  |L5.892|
                          DCD      dot_flag
                  |L5.896|
000380  00000000          DCFD     0x408f400000000000 ; 1000
000384  408f4000
                  |L5.904|
000388  447a0000          DCFS     0x447a0000 ; 1000
                  |L5.908|
                          DCD      InFlashSave
                  |L5.912|
000390  252e3366          DCB      "%.3f",0
000394  00      
000395  00                DCB      0
000396  00                DCB      0
000397  00                DCB      0
                  |L5.920|
                          DCD      0x080e0000
                  |L5.924|
00039c  00000000          DCFD     0x4059000000000000 ; 100
0003a0  40590000
                  |L5.932|
                          DCD      0x0003d477
                  |L5.936|
0003a8  42c80000          DCFS     0x42c80000 ; 100
                  |L5.940|
0003ac  252e3266          DCB      "%.2f",0
0003b0  00      
0003b1  00                DCB      0
0003b2  00                DCB      0
0003b3  00                DCB      0
                  |L5.948|
                          DCD      load_cutoffv

                          AREA ||i.ResetPow||, CODE, READONLY, ALIGN=2

                  ResetPow PROC
;;;584    
;;;585    WM_HWIN ResetPow(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;586        hWinWind = GUI_CreateDialogBox(_aDialogCreate1, GUI_COUNTOF(_aDialogCreate1), _cbDialog, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L6.32|
000010  2114              MOVS     r1,#0x14
000012  4804              LDR      r0,|L6.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L6.40|
00001a  6048              STR      r0,[r1,#4]  ; hWinWind
;;;587    //    WM_InvalidateWindow(hWinWind);
;;;588        return hWinWind;
;;;589    }
00001c  bd1c              POP      {r2-r4,pc}
;;;590    
                          ENDP

00001e  0000              DCW      0x0000
                  |L6.32|
                          DCD      _cbDialog
                  |L6.36|
                          DCD      ||.constdata||
                  |L6.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  _cbDialog PROC
;;;84     
;;;85     static void _cbDialog(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;86       WM_HWIN hItem;
;;;87       int     NCode;
;;;88       int     Id;
;;;89       static vu8 status_flash;
;;;90       char buf[5];    
;;;91     
;;;92       float dis_output_v = (float)SET_Voltage/100;
00000c  f8df9404          LDR      r9,|L7.1044|
000010  f8d90004          LDR      r0,[r9,#4]  ; Run_Control
000014  ee000a10          VMOV     s0,r0
000018  eeb80a40          VCVT.F32.U32 s0,s0
00001c  eddf0afe          VLDR     s1,|L7.1048|
000020  eec09a20          VDIV.F32 s19,s0,s1
;;;93       float dis_output_c = (float)SET_Current/1000;
000024  f8d90008          LDR      r0,[r9,#8]  ; Run_Control
000028  ee000a10          VMOV     s0,r0
00002c  eeb80a40          VCVT.F32.U32 s0,s0
000030  eddf0afa          VLDR     s1,|L7.1052|
000034  ee809a20          VDIV.F32 s18,s0,s1
;;;94       static u8 cdelay;
;;;95     
;;;96       
;;;97       // USER START (Optionally insert additional variables)
;;;98       // USER END
;;;99     
;;;100      switch (pMsg->MsgId) {
000038  6820              LDR      r0,[r4,#0]
;;;101    
;;;102    	case WM_PAINT://无效化重绘
;;;103    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;104            GUI_FillRect(0,25,480,26);//画一条实线
;;;105    	    GUI_FillRect(280,26,281,215);//画一条实线
;;;106    		GUI_FillRect(0,215,480,216);//画一条实线
;;;107            GUI_SetColor(GUI_ORANGE);
;;;108            GUI_SetFont(&GUI_Fontsymbol);
;;;109            GUI_UC_SetEncodeUTF8();
;;;110            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;111            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;112            GUI_SetColor(GUI_WHITE);
;;;113            GUI_SetFont(&GUI_FontHZ20S);
;;;114            GUI_UC_SetEncodeUTF8();
;;;115            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明       
;;;116            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;117    		GUI_SetColor(GUI_LIGHTBLUE);
;;;118            GUI_SetFont(&GUI_FontHZ16);
;;;119            GUI_DispStringAt("电压",290, 50-10);
;;;120            GUI_DispStringAt("电流",290, 100-10);
;;;121            GUI_SetColor(GUI_GREEN);//设置前景色为白色
;;;122    //      GUI_SetFont(&GUI_FontD24x32);//
;;;123    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;124    // 		GUI_DispFloatFix(DISS_POW_Voltage,5,2);//显示电压值
;;;125    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;126    // 		GUI_DispFloatFix(DISS_POW_Current,5,2);//显示电流值
;;;127            GUI_SetFont(&GUI_Font24_1);
;;;128            GUI_DispStringAt("V",435,50-10);
;;;129            GUI_DispStringAt("A",435,100-10);
;;;130            GUI_DispStringAt("V",435,150-10);
;;;131            GUI_DispStringAt("A",435,200-10);
;;;132    		GUI_SetColor(GUI_LIGHTBLUE);
;;;133    		GUI_DispStringAt("OVP",290,150-10);
;;;134            GUI_DispStringAt("OCP",290,200-10);
;;;135    		
;;;136    		
;;;137    		
;;;138    		if(set_disp == 0)
;;;139    		{
;;;140    			GUI_SetColor(GUI_LIGHTGRAY);
00003a  f8df83e4          LDR      r8,|L7.1056|
00003e  f44f477f          MOV      r7,#0xff00            ;121
000042  280f              CMP      r0,#0xf               ;100
000044  d018              BEQ      |L7.120|
;;;141    			GUI_SetFont(&GUI_FontEN40);
;;;142    			GUI_DispStringAt("P:",28,190-20);
;;;143    			GUI_DispStringAt("W",240,190-20);
;;;144    		}else{
;;;145    			GUI_SetColor(GUI_LIGHTGRAY);
;;;146    			GUI_SetFont(&GUI_FontEN40);
;;;147    			GUI_DispStringAt("R:",28,190-20);
;;;148    			GUI_SetFont(&GUI_FontHZ32);
;;;149    			GUI_DispStringAt("Ω",240,190-20);
;;;150    		}
;;;151    		
;;;152    
;;;153    //        GUI_SetFont(&GUI_FontEN40);
;;;154    //        GUI_SetColor(GUI_LIGHTGRAY);
;;;155    //        GUI_DispStringAt("C:", 28, 190);
;;;156    //        GUI_SetColor(GUI_LIGHTGRAY);
;;;157    //        GUI_DispStringAt("m", 217, 196);
;;;158    //        GUI_DispStringAt("AH", 238, 187);
;;;159            
;;;160            GUI_SetColor(GUI_GREEN);
;;;161            GUI_SetFont(&GUI_Fontunit);
;;;162            GUI_DispStringAt("°",342, 2);
;;;163            GUI_SetFont(&GUI_Font24_1);
;;;164            GUI_DispStringAt("C",350, 2);
;;;165    		
;;;166    		
;;;167    //        DrawLock();
;;;168    //        GUI_SetColor(GUI_WHITE);
;;;169    //        GUI_SetFont(&GUI_Fontset_font);
;;;170    //        GUI_DispStringAt("过充电压",290, 150);
;;;171    		break;
;;;172        
;;;173    	case WM_TIMER://定时模块消息
;;;174    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime2)
;;;175    	{
;;;176    //        lockstat2 = lockstat1;
;;;177    //        lockstat1 = lock;
;;;178    //        if(lockstat1 != lockstat2)
;;;179    //        {
;;;180    //            WM_InvalidateWindow(hWinWind);
;;;181    //        }
;;;182    //         if(clear_flag2 == 1)
;;;183    //         {
;;;184    		DIS_POW = DISS_POW_Voltage * DISS_POW_Current;
;;;185    		DIS_R = DISS_POW_Voltage / DISS_POW_Current;
;;;186    		if(lock == 1)
;;;187    		{
;;;188    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
000046  f640163c          MOV      r6,#0x93c
;;;189    			TEXT_SetText(hItem,"锁");
;;;190    		}else{
;;;191    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;192    			TEXT_SetText(hItem,"");
;;;193    		}
;;;194                if(DISS_POW_Voltage < 0.1)
;;;195                {
;;;196                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
00004a  f6400a93          MOV      r10,#0x893
;;;197                    sprintf(buf,"%.2f",0.00);       
00004e  ed9f8bf5          VLDR     d8,|L7.1060|
;;;198                    TEXT_SetText(hItem,buf);
;;;199                }else{
;;;200                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;201                    sprintf(buf,"%.3f",DISS_Voltage);       
;;;202                    TEXT_SetText(hItem,buf);
;;;203                }
;;;204    //         }else{
;;;205    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;206    //             sprintf(buf,"%.2f",DISS_POW_Voltage);       
;;;207    //             TEXT_SetText(hItem,buf);
;;;208    //         }
;;;209            
;;;210            
;;;211           
;;;212            
;;;213    //        test_pow();
;;;214            if(pow_sw == pow_on)
;;;215            {
;;;216    			if(DISS_Current > 10)
;;;217    			{
;;;218    				GPIO_ResetBits(GPIOC,GPIO_Pin_1);
;;;219    				  GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;220    				  //GPIO_SetBits(GPIOC,GPIO_Pin_13);
;;;221    				  mode_sw = 0;
;;;222    				  pow_sw = pow_off;
;;;223    				  load_sw=load_off;
;;;224    			}
;;;225                 hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;226                sprintf(buf,"%.3f",DISS_POW_Current); 
;;;227    			TEXT_SetText(hItem,buf);
;;;228    			
;;;229    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;230    			if(set_disp == 0)
;;;231    			{
;;;232    				sprintf(buf,"%.3f",DIS_POW);
;;;233    			}else{
;;;234    				sprintf(buf,"%.3f",DIS_R);
;;;235    			}
;;;236    			        
;;;237                TEXT_SetText(hItem,buf);			
;;;238                
;;;239                if(status_flash == 0){
;;;240                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;241                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;242                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;243                    GUI_UC_SetEncodeUTF8();        
;;;244                    TEXT_SetText(hItem,"充电中");
;;;245                    status_flash = 1;
;;;246                }else{
;;;247                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;248                    TEXT_SetText(hItem,"");
;;;249                    status_flash = 0;
;;;250               }
;;;251               if(((load_cutoffv != 0 && DISS_POW_Voltage > load_cutoffv) ||(pow_cutoffc != 0 && DISS_POW_Current > pow_cutoffc)) && cdelay > 20)
000052  f8dfb3d8          LDR      r11,|L7.1068|
000056  4df6              LDR      r5,|L7.1072|
000058  281d              CMP      r0,#0x1d              ;100
00005a  d07d              BEQ      |L7.344|
00005c  2826              CMP      r0,#0x26              ;100
00005e  d07c              BEQ      |L7.346|
000060  f5a07080          SUB      r0,r0,#0x100          ;100
000064  3813              SUBS     r0,r0,#0x13           ;100
000066  d079              BEQ      |L7.348|
;;;252               {
;;;253                  GPIO_ResetBits(GPIOC,GPIO_Pin_1);
;;;254    			  GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;255                  //GPIO_SetBits(GPIOC,GPIO_Pin_13);
;;;256                  mode_sw = 0;
;;;257                  pow_sw = pow_off;
;;;258    			  load_sw=load_off;
;;;259                  cdelay = 0;
;;;260               }else{
;;;261                   cdelay++;
;;;262               }
;;;263            }else{
;;;264                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_88);
;;;265                TEXT_SetText(hItem,"");
;;;266                
;;;267                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;268                sprintf(buf,"%.3f",0.000);        
;;;269                TEXT_SetText(hItem,buf);
;;;270                
;;;271    			hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;272    			sprintf(buf,"%.3f",0.000);        
;;;273                TEXT_SetText(hItem,buf);
;;;274    			
;;;275                cdelay = 0;
;;;276            }
;;;277    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);       
;;;278    //        sprintf(buf,"%.3f",overchargev);
;;;279    //        TEXT_SetText(hItem,buf);
;;;280            
;;;281            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);       
;;;282            sprintf(buf,"%.1f",temp);
;;;283            TEXT_SetText(hItem,buf);
;;;284            
;;;285    		WM_RestartTimer(pMsg->Data.v, 20);//复位定时器数值越大刷新时间越短
;;;286    	}
;;;287    	break;
;;;288      case WM_INIT_DIALOG://重绘外观
;;;289        //
;;;290        // Initialization of 'Window'
;;;291        //
;;;292            hItem = pMsg->hWin;
;;;293            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;294            WM_CreateTimer(hItem,ID_TimerTime2,500,0);//创建本窗口定时器
;;;295        //
;;;296        // Initialization of 'Button'
;;;297        //
;;;298    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_0);
;;;299    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;300    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;301    // 		GUI_UC_SetEncodeUTF8();
;;;302    // 		BUTTON_SetText(hItem,"充放电");
;;;303        //
;;;304        // Initialization of 'Button'
;;;305        //
;;;306    		
;;;307    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_161);
;;;308    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;309    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;310    		TEXT_SetText(hItem,"");
;;;311    		
;;;312            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_1);
;;;313    		BUTTON_SetPressed(hItem,1);
;;;314    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;315    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;316    		GUI_UC_SetEncodeUTF8();
;;;317            BUTTON_SetText(hItem, "电压设置");
;;;318        //
;;;319        // Initialization of 'Button'
;;;320        //
;;;321            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_2);
;;;322    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;323    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;324    		GUI_UC_SetEncodeUTF8();
;;;325            BUTTON_SetText(hItem, "电流设置");
;;;326        //
;;;327        // Initialization of 'Button'
;;;328        //
;;;329            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_3);
;;;330            
;;;331    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;332    		BUTTON_SetFont      (hItem,    &GUI_Font24_1);//设定按钮文本字体
;;;333    		GUI_UC_SetEncodeUTF8();
;;;334            BUTTON_SetText(hItem, "OVP");
;;;335        //
;;;336        // Initialization of 'Button'
;;;337        //
;;;338            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_4);
;;;339    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;340    		BUTTON_SetFont      (hItem,    &GUI_Font24_1);//设定按钮文本字体
;;;341    		GUI_UC_SetEncodeUTF8();
;;;342            BUTTON_SetText(hItem, "OCP");
;;;343        //
;;;344        // Initialization of 'Button'
;;;345        //
;;;346            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_5);
;;;347    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;348    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;349    		GUI_UC_SetEncodeUTF8();
;;;350            BUTTON_SetText(hItem, "系统设置");
;;;351    		
;;;352    		
;;;353    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_9);
;;;354    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;355            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;356    		GUI_UC_SetEncodeUTF8();
;;;357    		TEXT_SetText(hItem,"V:");
;;;358    		
;;;359    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_10);
;;;360    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;361            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;362    		GUI_UC_SetEncodeUTF8();
;;;363    		TEXT_SetText(hItem,"I:");
;;;364            
;;;365            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_15);
;;;366    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;367            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;368    		GUI_UC_SetEncodeUTF8();
;;;369    		TEXT_SetText(hItem,"V");
;;;370    		
;;;371    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_16);
;;;372    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;373            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;374    		GUI_UC_SetEncodeUTF8();
;;;375    		TEXT_SetText(hItem,"A");
;;;376            
;;;377    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_33);
;;;378    //		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;379    //        TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;380    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;381    //		GUI_UC_SetEncodeUTF8();
;;;382    //		TEXT_SetText(hItem,"输出电压");        
;;;383    //        
;;;384    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_34);
;;;385    //		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;386    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;387    //		GUI_UC_SetEncodeUTF8();
;;;388    //		TEXT_SetText(hItem,"限制电流");
;;;389    //		
;;;390    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;391            sprintf(buf,"%.3f",pow_cutoffc);
;;;392    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;393            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;394    		GUI_UC_SetEncodeUTF8();     
;;;395    		TEXT_SetText(hItem,buf);
;;;396            
;;;397            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_41);
;;;398    		TEXT_SetBkColor(hItem,GUI_BLUE);
;;;399            sprintf(buf,"%.2f",dis_output_v);
;;;400    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;401            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;402    		GUI_UC_SetEncodeUTF8();        
;;;403    		TEXT_SetText(hItem,buf);
;;;404            
;;;405            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_42);
;;;406            sprintf(buf,"%.3f",dis_output_c);
;;;407    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;408            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;409    		GUI_UC_SetEncodeUTF8();        
;;;410    		TEXT_SetText(hItem,buf);
;;;411            
;;;412            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_86);
;;;413            sprintf(buf,"%.2f",0.00);
;;;414    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;415            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;416    		GUI_UC_SetEncodeUTF8();        
;;;417    		TEXT_SetText(hItem,buf);
;;;418            
;;;419            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_87);
;;;420            sprintf(buf,"%.3f",0.000);
;;;421    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;422            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;423    		GUI_UC_SetEncodeUTF8();        
;;;424    		TEXT_SetText(hItem,buf);
;;;425            
;;;426            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_115);
;;;427            sprintf(buf,"%.3f",0.000);
;;;428            TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;429            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;430            GUI_UC_SetEncodeUTF8();        
;;;431            TEXT_SetText(hItem,buf);
;;;432            
;;;433            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_125);
;;;434            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;435            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;436            sprintf(buf,"%.1f",temp);
;;;437            TEXT_SetText(hItem,buf);
;;;438            
;;;439            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_144);
;;;440            sprintf(buf,"%.3f",load_cutoffv);
;;;441    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;442            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;443    		GUI_UC_SetEncodeUTF8();     
;;;444    		TEXT_SetText(hItem,buf);
;;;445    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_159);
;;;446            sprintf(buf,"%.3f",pow_cutoffc);
;;;447    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;448            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;449    		GUI_UC_SetEncodeUTF8();     
;;;450    		TEXT_SetText(hItem,buf);
;;;451    		
;;;452            
;;;453        // USER START (Optionally insert additional code for further widget initialization)
;;;454        // USER END
;;;455        break;
;;;456      case WM_NOTIFY_PARENT:
;;;457        Id    = WM_GetId(pMsg->hWinSrc);
;;;458        NCode = pMsg->Data.v;
;;;459        switch(Id) {
;;;460        case ID_BUTTON_0: // Notifications sent by 'Button'
;;;461          switch(NCode) {
;;;462          case WM_NOTIFICATION_CLICKED:
;;;463            // USER START (Optionally insert code for reacting on notification message)
;;;464            // USER END
;;;465            break;
;;;466          case WM_NOTIFICATION_RELEASED:
;;;467            // USER START (Optionally insert code for reacting on notification message)
;;;468            // USER END
;;;469            break;
;;;470          // USER START (Optionally insert additional code for further notification handling)
;;;471          // USER END
;;;472          }
;;;473          break;
;;;474        case ID_BUTTON_1: // Notifications sent by 'Button'
;;;475          switch(NCode) {
;;;476          case WM_NOTIFICATION_CLICKED:
;;;477            // USER START (Optionally insert code for reacting on notification message)
;;;478            // USER END
;;;479            break;
;;;480          case WM_NOTIFICATION_RELEASED:
;;;481    				
;;;482            // USER START (Optionally insert code for reacting on notification message)
;;;483            // USER END
;;;484            break;
;;;485          // USER START (Optionally insert additional code for further notification handling)
;;;486          // USER END
;;;487          }
;;;488          break;
;;;489        case ID_BUTTON_2: // Notifications sent by 'Button'
;;;490          switch(NCode) {
;;;491          case WM_NOTIFICATION_CLICKED:
;;;492            // USER START (Optionally insert code for reacting on notification message)
;;;493            // USER END
;;;494            break;
;;;495          case WM_NOTIFICATION_RELEASED:
;;;496            // USER START (Optionally insert code for reacting on notification message)
;;;497            // USER END
;;;498            break;
;;;499          // USER START (Optionally insert additional code for further notification handling)
;;;500          // USER END
;;;501          }
;;;502          break;
;;;503        case ID_BUTTON_3: // Notifications sent by 'Button'
;;;504          switch(NCode) {
;;;505          case WM_NOTIFICATION_CLICKED:
;;;506            // USER START (Optionally insert code for reacting on notification message)
;;;507            // USER END
;;;508            break;
;;;509          case WM_NOTIFICATION_RELEASED:
;;;510            // USER START (Optionally insert code for reacting on notification message)
;;;511            // USER END
;;;512            break;
;;;513          // USER START (Optionally insert additional code for further notification handling)
;;;514          // USER END
;;;515          }
;;;516          break;
;;;517        case ID_BUTTON_4: // Notifications sent by 'Button'
;;;518          switch(NCode) {
;;;519          case WM_NOTIFICATION_CLICKED:
;;;520            // USER START (Optionally insert code for reacting on notification message)
;;;521            // USER END
;;;522            break;
;;;523          case WM_NOTIFICATION_RELEASED:
;;;524            // USER START (Optionally insert code for reacting on notification message)
;;;525            // USER END
;;;526            break;
;;;527          // USER START (Optionally insert additional code for further notification handling)
;;;528          // USER END
;;;529          }
;;;530          break;
;;;531        case ID_BUTTON_5: // Notifications sent by 'Button'
;;;532          switch(NCode) {
;;;533          case WM_NOTIFICATION_CLICKED:
;;;534            // USER START (Optionally insert code for reacting on notification message)
;;;535            // USER END
;;;536            break;
;;;537          case WM_NOTIFICATION_RELEASED:
;;;538            // USER START (Optionally insert code for reacting on notification message)
;;;539            // USER END
;;;540            break;
;;;541          // USER START (Optionally insert additional code for further notification handling)
;;;542          // USER END
;;;543          }
;;;544          break;
;;;545        // USER START (Optionally insert additional code for further Ids)
;;;546        // USER END
;;;547        }
;;;548        break;
;;;549      // USER START (Optionally insert additional message handling)
;;;550      // USER END
;;;551      default:
;;;552        WM_DefaultProc(pMsg);
000068  4620              MOV      r0,r4
00006a  f7fffffe          BL       WM_DefaultProc
                  |L7.110|
;;;553        break;
;;;554      }
;;;555    }
00006e  b003              ADD      sp,sp,#0xc
000070  ecbd8b04          VPOP     {d8-d9}
000074  e8bd8ff0          POP      {r4-r11,pc}
                  |L7.120|
000078  f06f447f          MVN      r4,#0xff000000        ;103
00007c  4620              MOV      r0,r4                 ;103
00007e  f7fffffe          BL       GUI_SetColor
000082  f44f75f0          MOV      r5,#0x1e0             ;104
000086  231a              MOVS     r3,#0x1a              ;104
000088  462a              MOV      r2,r5                 ;104
00008a  2119              MOVS     r1,#0x19              ;104
00008c  2000              MOVS     r0,#0                 ;104
00008e  f7fffffe          BL       GUI_FillRect
000092  f2401219          MOV      r2,#0x119             ;105
000096  23d7              MOVS     r3,#0xd7              ;105
000098  211a              MOVS     r1,#0x1a              ;105
00009a  1e50              SUBS     r0,r2,#1              ;105
00009c  f7fffffe          BL       GUI_FillRect
0000a0  23d8              MOVS     r3,#0xd8              ;106
0000a2  462a              MOV      r2,r5                 ;106
0000a4  21d7              MOVS     r1,#0xd7              ;106
0000a6  2000              MOVS     r0,#0                 ;106
0000a8  f7fffffe          BL       GUI_FillRect
0000ac  f24a50ff          MOV      r0,#0xa5ff            ;107
0000b0  f7fffffe          BL       GUI_SetColor
0000b4  48df              LDR      r0,|L7.1076|
0000b6  f7fffffe          BL       GUI_SetFont
0000ba  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000be  2002              MOVS     r0,#2                 ;110
0000c0  f7fffffe          BL       GUI_SetTextMode
0000c4  2201              MOVS     r2,#1                 ;111
0000c6  2105              MOVS     r1,#5                 ;111
0000c8  a0db              ADR      r0,|L7.1080|
0000ca  f7fffffe          BL       GUI_DispStringAt
0000ce  4620              MOV      r0,r4                 ;112
0000d0  f7fffffe          BL       GUI_SetColor
0000d4  48da              LDR      r0,|L7.1088|
0000d6  f7fffffe          BL       GUI_SetFont
0000da  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000de  2002              MOVS     r0,#2                 ;115
0000e0  f7fffffe          BL       GUI_SetTextMode
0000e4  2203              MOVS     r2,#3                 ;116
0000e6  2182              MOVS     r1,#0x82              ;116
0000e8  a0d6              ADR      r0,|L7.1092|
0000ea  f7fffffe          BL       GUI_DispStringAt
0000ee  4cd9              LDR      r4,|L7.1108|
0000f0  4620              MOV      r0,r4                 ;117
0000f2  f7fffffe          BL       GUI_SetColor
0000f6  48d8              LDR      r0,|L7.1112|
0000f8  f7fffffe          BL       GUI_SetFont
0000fc  f44f7591          MOV      r5,#0x122             ;119
000100  2228              MOVS     r2,#0x28              ;119
000102  4629              MOV      r1,r5                 ;119
000104  a0d5              ADR      r0,|L7.1116|
000106  f7fffffe          BL       GUI_DispStringAt
00010a  225a              MOVS     r2,#0x5a              ;120
00010c  4629              MOV      r1,r5                 ;120
00010e  a0d5              ADR      r0,|L7.1124|
000110  f7fffffe          BL       GUI_DispStringAt
000114  4638              MOV      r0,r7                 ;121
000116  f7fffffe          BL       GUI_SetColor
00011a  48d4              LDR      r0,|L7.1132|
00011c  f7fffffe          BL       GUI_SetFont
000120  f24016b3          MOV      r6,#0x1b3             ;128
000124  2228              MOVS     r2,#0x28              ;128
000126  4631              MOV      r1,r6                 ;128
000128  a0d1              ADR      r0,|L7.1136|
00012a  f7fffffe          BL       GUI_DispStringAt
00012e  225a              MOVS     r2,#0x5a              ;129
000130  4631              MOV      r1,r6                 ;129
000132  a0d0              ADR      r0,|L7.1140|
000134  f7fffffe          BL       GUI_DispStringAt
000138  228c              MOVS     r2,#0x8c              ;130
00013a  4631              MOV      r1,r6                 ;130
00013c  a0cc              ADR      r0,|L7.1136|
00013e  f7fffffe          BL       GUI_DispStringAt
000142  22be              MOVS     r2,#0xbe              ;131
000144  4631              MOV      r1,r6                 ;131
000146  a0cb              ADR      r0,|L7.1140|
000148  f7fffffe          BL       GUI_DispStringAt
00014c  4620              MOV      r0,r4                 ;132
00014e  f7fffffe          BL       GUI_SetColor
000152  228c              MOVS     r2,#0x8c              ;133
000154  4629              MOV      r1,r5                 ;133
000156  e002              B        |L7.350|
                  |L7.344|
000158  e1f7              B        |L7.1354|
                  |L7.346|
00015a  e3f7              B        |L7.2380|
                  |L7.348|
00015c  e044              B        |L7.488|
                  |L7.350|
00015e  a0c6              ADR      r0,|L7.1144|
000160  f7fffffe          BL       GUI_DispStringAt
000164  22be              MOVS     r2,#0xbe              ;134
000166  4629              MOV      r1,r5                 ;134
000168  a0c4              ADR      r0,|L7.1148|
00016a  f7fffffe          BL       GUI_DispStringAt
00016e  f8d90084          LDR      r0,[r9,#0x84]         ;138  ; Run_Control
000172  b340              CBZ      r0,|L7.454|
000174  4640              MOV      r0,r8                 ;145
000176  f7fffffe          BL       GUI_SetColor
00017a  48c1              LDR      r0,|L7.1152|
00017c  f7fffffe          BL       GUI_SetFont
000180  22aa              MOVS     r2,#0xaa              ;147
000182  211c              MOVS     r1,#0x1c              ;147
000184  a0bf              ADR      r0,|L7.1156|
000186  f7fffffe          BL       GUI_DispStringAt
00018a  48bf              LDR      r0,|L7.1160|
00018c  f7fffffe          BL       GUI_SetFont
000190  22aa              MOVS     r2,#0xaa              ;149
000192  21f0              MOVS     r1,#0xf0              ;149
000194  a0bd              ADR      r0,|L7.1164|
000196  f7fffffe          BL       GUI_DispStringAt
                  |L7.410|
00019a  4638              MOV      r0,r7                 ;160
00019c  f7fffffe          BL       GUI_SetColor
0001a0  48bb              LDR      r0,|L7.1168|
0001a2  f7fffffe          BL       GUI_SetFont
0001a6  2202              MOVS     r2,#2                 ;162
0001a8  f44f71ab          MOV      r1,#0x156             ;162
0001ac  a0b9              ADR      r0,|L7.1172|
0001ae  f7fffffe          BL       GUI_DispStringAt
0001b2  48ae              LDR      r0,|L7.1132|
0001b4  f7fffffe          BL       GUI_SetFont
0001b8  2202              MOVS     r2,#2                 ;164
0001ba  f44f71af          MOV      r1,#0x15e             ;164
0001be  a0b6              ADR      r0,|L7.1176|
0001c0  f7fffffe          BL       GUI_DispStringAt
                  |L7.452|
0001c4  e753              B        |L7.110|
                  |L7.454|
0001c6  4640              MOV      r0,r8                 ;140
0001c8  f7fffffe          BL       GUI_SetColor
0001cc  48ac              LDR      r0,|L7.1152|
0001ce  f7fffffe          BL       GUI_SetFont
0001d2  22aa              MOVS     r2,#0xaa              ;142
0001d4  211c              MOVS     r1,#0x1c              ;142
0001d6  a0b1              ADR      r0,|L7.1180|
0001d8  f7fffffe          BL       GUI_DispStringAt
0001dc  22aa              MOVS     r2,#0xaa              ;143
0001de  21f0              MOVS     r1,#0xf0              ;143
0001e0  a0af              ADR      r0,|L7.1184|
0001e2  f7fffffe          BL       GUI_DispStringAt
0001e6  e7d8              B        |L7.410|
                  |L7.488|
0001e8  68e0              LDR      r0,[r4,#0xc]          ;174
0001ea  f7fffffe          BL       WM_GetTimerId
0001ee  2803              CMP      r0,#3                 ;174
0001f0  d1e8              BNE      |L7.452|
0001f2  4fac              LDR      r7,|L7.1188|
0001f4  f8df82b0          LDR      r8,|L7.1192|
0001f8  ed970a00          VLDR     s0,[r7,#0]            ;184
0001fc  edd80a00          VLDR     s1,[r8,#0]            ;184
000200  ee201a20          VMUL.F32 s2,s0,s1              ;184
000204  ed851a03          VSTR     s2,[r5,#0xc]          ;184
000208  ee801a20          VDIV.F32 s2,s0,s1              ;185
00020c  ed851a04          VSTR     s2,[r5,#0x10]         ;185
000210  48a6              LDR      r0,|L7.1196|
000212  7800              LDRB     r0,[r0,#0]            ;186  ; lock
000214  2801              CMP      r0,#1                 ;186
000216  d01a              BEQ      |L7.590|
000218  4631              MOV      r1,r6                 ;191
00021a  6860              LDR      r0,[r4,#4]            ;191
00021c  f7fffffe          BL       WM_GetDialogItem
000220  a18b              ADR      r1,|L7.1104|
000222  f7fffffe          BL       TEXT_SetText
                  |L7.550|
000226  49a2              LDR      r1,|L7.1200|
000228  6838              LDR      r0,[r7,#0]            ;194  ; DISS_POW_Voltage
00022a  4288              CMP      r0,r1                 ;194
00022c  da17              BGE      |L7.606|
00022e  4651              MOV      r1,r10                ;196
000230  6860              LDR      r0,[r4,#4]            ;196
000232  f7fffffe          BL       WM_GetDialogItem
000236  4606              MOV      r6,r0                 ;196
000238  ec532b18          VMOV     r2,r3,d8              ;197
00023c  a19d              ADR      r1,|L7.1204|
00023e  4668              MOV      r0,sp                 ;197
000240  f7fffffe          BL       __2sprintf
000244  4669              MOV      r1,sp                 ;198
000246  4630              MOV      r0,r6                 ;198
000248  f7fffffe          BL       TEXT_SetText
00024c  e01c              B        |L7.648|
                  |L7.590|
00024e  4631              MOV      r1,r6                 ;188
000250  6860              LDR      r0,[r4,#4]            ;188
000252  f7fffffe          BL       WM_GetDialogItem
000256  a199              ADR      r1,|L7.1212|
000258  f7fffffe          BL       TEXT_SetText
00025c  e7e3              B        |L7.550|
                  |L7.606|
00025e  4651              MOV      r1,r10                ;200
000260  6860              LDR      r0,[r4,#4]            ;200
000262  f7fffffe          BL       WM_GetDialogItem
000266  4606              MOV      r6,r0                 ;200
000268  4895              LDR      r0,|L7.1216|
00026a  6800              LDR      r0,[r0,#0]            ;201  ; DISS_Voltage
00026c  f7fffffe          BL       __aeabi_f2d
000270  ec410b10          VMOV     d0,r0,r1              ;201
000274  a193              ADR      r1,|L7.1220|
000276  ec532b10          VMOV     r2,r3,d0              ;201
00027a  4668              MOV      r0,sp                 ;201
00027c  f7fffffe          BL       __2sprintf
000280  4669              MOV      r1,sp                 ;202
000282  4630              MOV      r0,r6                 ;202
000284  f7fffffe          BL       TEXT_SetText
                  |L7.648|
000288  7828              LDRB     r0,[r5,#0]            ;214  ; pow_sw
00028a  2600              MOVS     r6,#0                 ;214
00028c  2801              CMP      r0,#1                 ;214
00028e  d043              BEQ      |L7.792|
000290  f6400195          MOV      r1,#0x895             ;264
000294  6860              LDR      r0,[r4,#4]            ;264
000296  f7fffffe          BL       WM_GetDialogItem
00029a  a16d              ADR      r1,|L7.1104|
00029c  f7fffffe          BL       TEXT_SetText
0002a0  f6400194          MOV      r1,#0x894             ;267
0002a4  6860              LDR      r0,[r4,#4]            ;267
0002a6  f7fffffe          BL       WM_GetDialogItem
0002aa  4607              MOV      r7,r0                 ;267
0002ac  ec532b18          VMOV     r2,r3,d8              ;268
0002b0  a184              ADR      r1,|L7.1220|
0002b2  4668              MOV      r0,sp                 ;268
0002b4  f7fffffe          BL       __2sprintf
0002b8  4669              MOV      r1,sp                 ;269
0002ba  4638              MOV      r0,r7                 ;269
0002bc  f7fffffe          BL       TEXT_SetText
0002c0  f640110b          MOV      r1,#0x90b             ;271
0002c4  6860              LDR      r0,[r4,#4]            ;271
0002c6  f7fffffe          BL       WM_GetDialogItem
0002ca  4607              MOV      r7,r0                 ;271
0002cc  ec532b18          VMOV     r2,r3,d8              ;272
0002d0  a17c              ADR      r1,|L7.1220|
0002d2  4668              MOV      r0,sp                 ;272
0002d4  f7fffffe          BL       __2sprintf
0002d8  4669              MOV      r1,sp                 ;273
0002da  4638              MOV      r0,r7                 ;273
0002dc  f7fffffe          BL       TEXT_SetText
0002e0  70ae              STRB     r6,[r5,#2]            ;275
                  |L7.738|
0002e2  f640110c          MOV      r1,#0x90c             ;281
0002e6  6860              LDR      r0,[r4,#4]            ;281
0002e8  f7fffffe          BL       WM_GetDialogItem
0002ec  4605              MOV      r5,r0                 ;281
0002ee  4877              LDR      r0,|L7.1228|
0002f0  6800              LDR      r0,[r0,#0]            ;282  ; temp
0002f2  f7fffffe          BL       __aeabi_f2d
0002f6  ec410b10          VMOV     d0,r0,r1              ;282
0002fa  a175              ADR      r1,|L7.1232|
0002fc  ec532b10          VMOV     r2,r3,d0              ;282
000300  4668              MOV      r0,sp                 ;282
000302  f7fffffe          BL       __2sprintf
000306  4669              MOV      r1,sp                 ;283
000308  4628              MOV      r0,r5                 ;283
00030a  f7fffffe          BL       TEXT_SetText
00030e  2114              MOVS     r1,#0x14              ;285
000310  68e0              LDR      r0,[r4,#0xc]          ;285
000312  f7fffffe          BL       WM_RestartTimer
000316  e6aa              B        |L7.110|
                  |L7.792|
000318  486f              LDR      r0,|L7.1240|
00031a  4970              LDR      r1,|L7.1244|
00031c  f8dfa1c0          LDR      r10,|L7.1248|
000320  6800              LDR      r0,[r0,#0]            ;216  ; DISS_Current
000322  4288              CMP      r0,r1                 ;216
000324  dd0d              BLE      |L7.834|
000326  2102              MOVS     r1,#2                 ;218
000328  486e              LDR      r0,|L7.1252|
00032a  f7fffffe          BL       GPIO_ResetBits
00032e  f44f4100          MOV      r1,#0x8000            ;219
000332  486d              LDR      r0,|L7.1256|
000334  f7fffffe          BL       GPIO_SetBits
000338  f88a6000          STRB     r6,[r10,#0]           ;221
00033c  702e              STRB     r6,[r5,#0]            ;222
00033e  486b              LDR      r0,|L7.1260|
000340  7006              STRB     r6,[r0,#0]            ;223
                  |L7.834|
000342  f6400194          MOV      r1,#0x894             ;225
000346  6860              LDR      r0,[r4,#4]            ;225
000348  f7fffffe          BL       WM_GetDialogItem
00034c  9002              STR      r0,[sp,#8]            ;225
00034e  f8d80000          LDR      r0,[r8,#0]            ;226  ; DISS_POW_Current
000352  f7fffffe          BL       __aeabi_f2d
000356  ec410b10          VMOV     d0,r0,r1              ;226
00035a  a15a              ADR      r1,|L7.1220|
00035c  ec532b10          VMOV     r2,r3,d0              ;226
000360  4668              MOV      r0,sp                 ;226
000362  f7fffffe          BL       __2sprintf
000366  4669              MOV      r1,sp                 ;227
000368  9802              LDR      r0,[sp,#8]            ;227
00036a  f7fffffe          BL       TEXT_SetText
00036e  f640110b          MOV      r1,#0x90b             ;229
000372  6860              LDR      r0,[r4,#4]            ;229
000374  f7fffffe          BL       WM_GetDialogItem
000378  9002              STR      r0,[sp,#8]            ;229
00037a  f8d90084          LDR      r0,[r9,#0x84]         ;230  ; Run_Control
00037e  b3e8              CBZ      r0,|L7.1020|
000380  6928              LDR      r0,[r5,#0x10]         ;234  ; DIS_R
000382  f7fffffe          BL       __aeabi_f2d
000386  ec410b10          VMOV     d0,r0,r1              ;234
00038a  a14e              ADR      r1,|L7.1220|
00038c  ec532b10          VMOV     r2,r3,d0              ;234
000390  4668              MOV      r0,sp                 ;234
000392  f7fffffe          BL       __2sprintf
                  |L7.918|
000396  4669              MOV      r1,sp                 ;237
000398  9802              LDR      r0,[sp,#8]            ;237
00039a  f7fffffe          BL       TEXT_SetText
00039e  7868              LDRB     r0,[r5,#1]            ;239  ; status_flash
0003a0  b368              CBZ      r0,|L7.1022|
0003a2  f6400195          MOV      r1,#0x895             ;247
0003a6  6860              LDR      r0,[r4,#4]            ;247
0003a8  f7fffffe          BL       WM_GetDialogItem
0003ac  a128              ADR      r1,|L7.1104|
0003ae  f7fffffe          BL       TEXT_SetText
0003b2  706e              STRB     r6,[r5,#1]            ;249
                  |L7.948|
0003b4  ed9b0a00          VLDR     s0,[r11,#0]           ;251
0003b8  eeb50ac0          VCMPE.F32 s0,#0.0               ;251
0003bc  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;251
0003c0  d006              BEQ      |L7.976|
0003c2  edd70a00          VLDR     s1,[r7,#0]            ;251
0003c6  eef40ac0          VCMPE.F32 s1,s0                 ;251
0003ca  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;251
0003ce  dc0d              BGT      |L7.1004|
                  |L7.976|
0003d0  ed950a02          VLDR     s0,[r5,#8]            ;251
0003d4  eeb50ac0          VCMPE.F32 s0,#0.0               ;251
0003d8  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;251
0003dc  d018              BEQ      |L7.1040|
0003de  edd80a00          VLDR     s1,[r8,#0]            ;251
0003e2  eef40ac0          VCMPE.F32 s1,s0                 ;251
0003e6  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;251
0003ea  dd11              BLE      |L7.1040|
                  |L7.1004|
0003ec  78a8              LDRB     r0,[r5,#2]            ;251  ; cdelay
0003ee  2814              CMP      r0,#0x14              ;251
0003f0  d90e              BLS      |L7.1040|
0003f2  2102              MOVS     r1,#2                 ;253
0003f4  483b              LDR      r0,|L7.1252|
0003f6  f7fffffe          BL       GPIO_ResetBits
0003fa  e001              B        |L7.1024|
                  |L7.1020|
0003fc  e07d              B        |L7.1274|
                  |L7.1022|
0003fe  e089              B        |L7.1300|
                  |L7.1024|
000400  f44f4100          MOV      r1,#0x8000            ;254
000404  4838              LDR      r0,|L7.1256|
000406  f7fffffe          BL       GPIO_SetBits
00040a  f88a6000          STRB     r6,[r10,#0]           ;256
00040e  e06f              B        |L7.1264|
                  |L7.1040|
000410  e097              B        |L7.1346|
000412  0000              DCW      0x0000
                  |L7.1044|
                          DCD      Run_Control
                  |L7.1048|
000418  42c80000          DCFS     0x42c80000 ; 100
                  |L7.1052|
00041c  447a0000          DCFS     0x447a0000 ; 1000
                  |L7.1056|
                          DCD      0x00d3d3d3
                  |L7.1060|
000424  00000000          DCFD     0x0000000000000000 ; 0
000428  00000000
                  |L7.1068|
                          DCD      load_cutoffv
                  |L7.1072|
                          DCD      ||.data||
                  |L7.1076|
                          DCD      GUI_Fontsymbol
                  |L7.1080|
000438  4a696e6b          DCB      "Jinko",0
00043c  6f00    
00043e  00                DCB      0
00043f  00                DCB      0
                  |L7.1088|
                          DCD      GUI_FontHZ20S
                  |L7.1092|
000444  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000448  878fe698
00044c  bee7a4ba
                  |L7.1104|
000450  00                DCB      0
000451  00                DCB      0
000452  00                DCB      0
000453  00                DCB      0
                  |L7.1108|
                          DCD      0x00ff8080
                  |L7.1112|
                          DCD      GUI_FontHZ16
                  |L7.1116|
00045c  e794b5e5          DCB      231,148,181,229,142,139,0
000460  8e8b00  
000463  00                DCB      0
                  |L7.1124|
000464  e794b5e6          DCB      231,148,181,230,181,129,0
000468  b58100  
00046b  00                DCB      0
                  |L7.1132|
                          DCD      GUI_Font24_1
                  |L7.1136|
000470  5600              DCB      "V",0
000472  00                DCB      0
000473  00                DCB      0
                  |L7.1140|
000474  4100              DCB      "A",0
000476  00                DCB      0
000477  00                DCB      0
                  |L7.1144|
000478  4f565000          DCB      "OVP",0
                  |L7.1148|
00047c  4f435000          DCB      "OCP",0
                  |L7.1152|
                          DCD      GUI_FontEN40
                  |L7.1156|
000484  523a00            DCB      "R:",0
000487  00                DCB      0
                  |L7.1160|
                          DCD      GUI_FontHZ32
                  |L7.1164|
00048c  cea900            DCB      206,169,0
00048f  00                DCB      0
                  |L7.1168|
                          DCD      GUI_Fontunit
                  |L7.1172|
000494  c2b000            DCB      194,176,0
000497  00                DCB      0
                  |L7.1176|
000498  4300              DCB      "C",0
00049a  00                DCB      0
00049b  00                DCB      0
                  |L7.1180|
00049c  503a00            DCB      "P:",0
00049f  00                DCB      0
                  |L7.1184|
0004a0  5700              DCB      "W",0
0004a2  00                DCB      0
0004a3  00                DCB      0
                  |L7.1188|
                          DCD      DISS_POW_Voltage
                  |L7.1192|
                          DCD      DISS_POW_Current
                  |L7.1196|
                          DCD      lock
                  |L7.1200|
                          DCD      0x3dcccccd
                  |L7.1204|
0004b4  252e3266          DCB      "%.2f",0
0004b8  00      
0004b9  00                DCB      0
0004ba  00                DCB      0
0004bb  00                DCB      0
                  |L7.1212|
0004bc  e9948100          DCB      233,148,129,0
                  |L7.1216|
                          DCD      DISS_Voltage
                  |L7.1220|
0004c4  252e3366          DCB      "%.3f",0
0004c8  00      
0004c9  00                DCB      0
0004ca  00                DCB      0
0004cb  00                DCB      0
                  |L7.1228|
                          DCD      temp
                  |L7.1232|
0004d0  252e3166          DCB      "%.1f",0
0004d4  00      
0004d5  00                DCB      0
0004d6  00                DCB      0
0004d7  00                DCB      0
                  |L7.1240|
                          DCD      DISS_Current
                  |L7.1244|
                          DCD      0x41200000
                  |L7.1248|
                          DCD      mode_sw
                  |L7.1252|
                          DCD      0x40020800
                  |L7.1256|
                          DCD      0x40020000
                  |L7.1260|
                          DCD      load_sw
                  |L7.1264|
0004f0  702e              STRB     r6,[r5,#0]            ;257
0004f2  48fe              LDR      r0,|L7.2284|
0004f4  7006              STRB     r6,[r0,#0]            ;258
0004f6  70ae              STRB     r6,[r5,#2]            ;259
0004f8  e6f3              B        |L7.738|
                  |L7.1274|
0004fa  68e8              LDR      r0,[r5,#0xc]          ;232  ; DIS_POW
0004fc  f7fffffe          BL       __aeabi_f2d
000500  ec410b10          VMOV     d0,r0,r1              ;232
000504  ec532b10          VMOV     r2,r3,d0              ;232
000508  f2af0148          ADR      r1,|L7.1220|
00050c  4668              MOV      r0,sp                 ;232
00050e  f7fffffe          BL       __2sprintf
000512  e740              B        |L7.918|
                  |L7.1300|
000514  f6400195          MOV      r1,#0x895             ;240
000518  6860              LDR      r0,[r4,#4]            ;240
00051a  f7fffffe          BL       WM_GetDialogItem
00051e  4681              MOV      r9,r0                 ;240
000520  21ff              MOVS     r1,#0xff              ;241
000522  4648              MOV      r0,r9                 ;241
000524  f7fffffe          BL       TEXT_SetTextColor
000528  49f1              LDR      r1,|L7.2288|
00052a  4648              MOV      r0,r9                 ;242
00052c  f7fffffe          BL       TEXT_SetFont
000530  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000534  a1ef              ADR      r1,|L7.2292|
000536  4648              MOV      r0,r9                 ;244
000538  f7fffffe          BL       TEXT_SetText
00053c  2001              MOVS     r0,#1                 ;245
00053e  7068              STRB     r0,[r5,#1]            ;245
000540  e738              B        |L7.948|
                  |L7.1346|
000542  78a8              LDRB     r0,[r5,#2]            ;261  ; cdelay
000544  1c40              ADDS     r0,r0,#1              ;261
000546  70a8              STRB     r0,[r5,#2]            ;261
000548  e6cb              B        |L7.738|
                  |L7.1354|
00054a  f8d49004          LDR      r9,[r4,#4]            ;292
00054e  2100              MOVS     r1,#0                 ;293
000550  4648              MOV      r0,r9                 ;293
000552  f7fffffe          BL       WINDOW_SetBkColor
000556  2300              MOVS     r3,#0                 ;294
000558  f44f72fa          MOV      r2,#0x1f4             ;294
00055c  2103              MOVS     r1,#3                 ;294
00055e  4648              MOV      r0,r9                 ;294
000560  f7fffffe          BL       WM_CreateTimer
000564  4631              MOV      r1,r6                 ;307
000566  6860              LDR      r0,[r4,#4]            ;307
000568  f7fffffe          BL       WM_GetDialogItem
00056c  4606              MOV      r6,r0                 ;307
00056e  21ff              MOVS     r1,#0xff              ;308
000570  4630              MOV      r0,r6                 ;308
000572  f7fffffe          BL       TEXT_SetTextColor
000576  49e2              LDR      r1,|L7.2304|
000578  4630              MOV      r0,r6                 ;309
00057a  f7fffffe          BL       TEXT_SetFont
00057e  f2af1130          ADR      r1,|L7.1104|
000582  4630              MOV      r0,r6                 ;310
000584  f7fffffe          BL       TEXT_SetText
000588  f6400102          MOV      r1,#0x802             ;312
00058c  6860              LDR      r0,[r4,#4]            ;312
00058e  f7fffffe          BL       WM_GetDialogItem
000592  4606              MOV      r6,r0                 ;312
000594  2101              MOVS     r1,#1                 ;313
000596  4630              MOV      r0,r6                 ;313
000598  f7fffffe          BL       BUTTON_SetPressed
00059c  49d4              LDR      r1,|L7.2288|
00059e  4630              MOV      r0,r6                 ;315
0005a0  f7fffffe          BL       BUTTON_SetFont
0005a4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005a8  a1d6              ADR      r1,|L7.2308|
0005aa  4630              MOV      r0,r6                 ;317
0005ac  f7fffffe          BL       BUTTON_SetText
0005b0  f6400103          MOV      r1,#0x803             ;321
0005b4  6860              LDR      r0,[r4,#4]            ;321
0005b6  f7fffffe          BL       WM_GetDialogItem
0005ba  4606              MOV      r6,r0                 ;321
0005bc  49cc              LDR      r1,|L7.2288|
0005be  4630              MOV      r0,r6                 ;323
0005c0  f7fffffe          BL       BUTTON_SetFont
0005c4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005c8  a1d2              ADR      r1,|L7.2324|
0005ca  4630              MOV      r0,r6                 ;325
0005cc  f7fffffe          BL       BUTTON_SetText
0005d0  f6400104          MOV      r1,#0x804             ;329
0005d4  6860              LDR      r0,[r4,#4]            ;329
0005d6  f7fffffe          BL       WM_GetDialogItem
0005da  4606              MOV      r6,r0                 ;329
0005dc  49d1              LDR      r1,|L7.2340|
0005de  4630              MOV      r0,r6                 ;332
0005e0  f7fffffe          BL       BUTTON_SetFont
0005e4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005e8  f2af1174          ADR      r1,|L7.1144|
0005ec  4630              MOV      r0,r6                 ;334
0005ee  f7fffffe          BL       BUTTON_SetText
0005f2  f6400105          MOV      r1,#0x805             ;338
0005f6  6860              LDR      r0,[r4,#4]            ;338
0005f8  f7fffffe          BL       WM_GetDialogItem
0005fc  4606              MOV      r6,r0                 ;338
0005fe  49c9              LDR      r1,|L7.2340|
000600  4630              MOV      r0,r6                 ;340
000602  f7fffffe          BL       BUTTON_SetFont
000606  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00060a  f2af1190          ADR      r1,|L7.1148|
00060e  4630              MOV      r0,r6                 ;342
000610  f7fffffe          BL       BUTTON_SetText
000614  f6400106          MOV      r1,#0x806             ;346
000618  6860              LDR      r0,[r4,#4]            ;346
00061a  f7fffffe          BL       WM_GetDialogItem
00061e  4606              MOV      r6,r0                 ;346
000620  49b3              LDR      r1,|L7.2288|
000622  4630              MOV      r0,r6                 ;348
000624  f7fffffe          BL       BUTTON_SetFont
000628  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00062c  a1be              ADR      r1,|L7.2344|
00062e  4630              MOV      r0,r6                 ;350
000630  f7fffffe          BL       BUTTON_SetText
000634  f6400107          MOV      r1,#0x807             ;353
000638  6860              LDR      r0,[r4,#4]            ;353
00063a  f7fffffe          BL       WM_GetDialogItem
00063e  4606              MOV      r6,r0                 ;353
000640  4641              MOV      r1,r8                 ;354
000642  4630              MOV      r0,r6                 ;354
000644  f7fffffe          BL       TEXT_SetTextColor
000648  49bb              LDR      r1,|L7.2360|
00064a  4630              MOV      r0,r6                 ;355
00064c  f7fffffe          BL       TEXT_SetFont
000650  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000654  a1b9              ADR      r1,|L7.2364|
000656  4630              MOV      r0,r6                 ;357
000658  f7fffffe          BL       TEXT_SetText
00065c  f6400108          MOV      r1,#0x808             ;359
000660  6860              LDR      r0,[r4,#4]            ;359
000662  f7fffffe          BL       WM_GetDialogItem
000666  4606              MOV      r6,r0                 ;359
000668  4641              MOV      r1,r8                 ;360
00066a  4630              MOV      r0,r6                 ;360
00066c  f7fffffe          BL       TEXT_SetTextColor
000670  49b1              LDR      r1,|L7.2360|
000672  4630              MOV      r0,r6                 ;361
000674  f7fffffe          BL       TEXT_SetFont
000678  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00067c  a1b0              ADR      r1,|L7.2368|
00067e  4630              MOV      r0,r6                 ;363
000680  f7fffffe          BL       TEXT_SetText
000684  f44f6102          MOV      r1,#0x820             ;365
000688  6860              LDR      r0,[r4,#4]            ;365
00068a  f7fffffe          BL       WM_GetDialogItem
00068e  4606              MOV      r6,r0                 ;365
000690  4641              MOV      r1,r8                 ;366
000692  4630              MOV      r0,r6                 ;366
000694  f7fffffe          BL       TEXT_SetTextColor
000698  49a7              LDR      r1,|L7.2360|
00069a  4630              MOV      r0,r6                 ;367
00069c  f7fffffe          BL       TEXT_SetFont
0006a0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006a4  f2af2138          ADR      r1,|L7.1136|
0006a8  4630              MOV      r0,r6                 ;369
0006aa  f7fffffe          BL       TEXT_SetText
0006ae  f6400121          MOV      r1,#0x821             ;371
0006b2  6860              LDR      r0,[r4,#4]            ;371
0006b4  f7fffffe          BL       WM_GetDialogItem
0006b8  4606              MOV      r6,r0                 ;371
0006ba  4641              MOV      r1,r8                 ;372
0006bc  4630              MOV      r0,r6                 ;372
0006be  f7fffffe          BL       TEXT_SetTextColor
0006c2  499d              LDR      r1,|L7.2360|
0006c4  4630              MOV      r0,r6                 ;373
0006c6  f7fffffe          BL       TEXT_SetFont
0006ca  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006ce  f2af215c          ADR      r1,|L7.1140|
0006d2  4630              MOV      r0,r6                 ;375
0006d4  f7fffffe          BL       TEXT_SetText
0006d8  f640162e          MOV      r6,#0x92e             ;390
0006dc  4631              MOV      r1,r6                 ;390
0006de  6860              LDR      r0,[r4,#4]            ;390
0006e0  f7fffffe          BL       WM_GetDialogItem
0006e4  4680              MOV      r8,r0                 ;390
0006e6  68a8              LDR      r0,[r5,#8]            ;391  ; pow_cutoffc
0006e8  f7fffffe          BL       __aeabi_f2d
0006ec  ec410b10          VMOV     d0,r0,r1              ;391
0006f0  ec532b10          VMOV     r2,r3,d0              ;391
0006f4  f2af2134          ADR      r1,|L7.1220|
0006f8  4668              MOV      r0,sp                 ;391
0006fa  f7fffffe          BL       __2sprintf
0006fe  4639              MOV      r1,r7                 ;392
000700  4640              MOV      r0,r8                 ;392
000702  f7fffffe          BL       TEXT_SetTextColor
000706  4987              LDR      r1,|L7.2340|
000708  4640              MOV      r0,r8                 ;393
00070a  f7fffffe          BL       TEXT_SetFont
00070e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000712  4669              MOV      r1,sp                 ;395
000714  4640              MOV      r0,r8                 ;395
000716  f7fffffe          BL       TEXT_SetText
00071a  f6400166          MOV      r1,#0x866             ;397
00071e  6860              LDR      r0,[r4,#4]            ;397
000720  f7fffffe          BL       WM_GetDialogItem
000724  4680              MOV      r8,r0                 ;397
000726  f44f017f          MOV      r1,#0xff0000          ;398
00072a  4640              MOV      r0,r8                 ;398
00072c  f7fffffe          BL       TEXT_SetBkColor
000730  ee190a90          VMOV     r0,s19                ;399
000734  f7fffffe          BL       __aeabi_f2d
000738  ec410b10          VMOV     d0,r0,r1              ;399
00073c  ec532b10          VMOV     r2,r3,d0              ;399
000740  f2af2190          ADR      r1,|L7.1204|
000744  4668              MOV      r0,sp                 ;399
000746  f7fffffe          BL       __2sprintf
00074a  4639              MOV      r1,r7                 ;400
00074c  4640              MOV      r0,r8                 ;400
00074e  f7fffffe          BL       TEXT_SetTextColor
000752  4974              LDR      r1,|L7.2340|
000754  4640              MOV      r0,r8                 ;401
000756  f7fffffe          BL       TEXT_SetFont
00075a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00075e  4669              MOV      r1,sp                 ;403
000760  4640              MOV      r0,r8                 ;403
000762  f7fffffe          BL       TEXT_SetText
000766  f6400167          MOV      r1,#0x867             ;405
00076a  6860              LDR      r0,[r4,#4]            ;405
00076c  f7fffffe          BL       WM_GetDialogItem
000770  4680              MOV      r8,r0                 ;405
000772  ee190a10          VMOV     r0,s18                ;406
000776  f7fffffe          BL       __aeabi_f2d
00077a  ec410b10          VMOV     d0,r0,r1              ;406
00077e  ec532b10          VMOV     r2,r3,d0              ;406
000782  f2af21c0          ADR      r1,|L7.1220|
000786  4668              MOV      r0,sp                 ;406
000788  f7fffffe          BL       __2sprintf
00078c  4639              MOV      r1,r7                 ;407
00078e  4640              MOV      r0,r8                 ;407
000790  f7fffffe          BL       TEXT_SetTextColor
000794  4963              LDR      r1,|L7.2340|
000796  4640              MOV      r0,r8                 ;408
000798  f7fffffe          BL       TEXT_SetFont
00079c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007a0  4669              MOV      r1,sp                 ;410
0007a2  4640              MOV      r0,r8                 ;410
0007a4  f7fffffe          BL       TEXT_SetText
0007a8  4651              MOV      r1,r10                ;412
0007aa  6860              LDR      r0,[r4,#4]            ;412
0007ac  f7fffffe          BL       WM_GetDialogItem
0007b0  4681              MOV      r9,r0                 ;412
0007b2  ec532b18          VMOV     r2,r3,d8              ;413
0007b6  f2af3104          ADR      r1,|L7.1204|
0007ba  4668              MOV      r0,sp                 ;413
0007bc  f7fffffe          BL       __2sprintf
0007c0  f64f78ff          MOV      r8,#0xffff            ;414
0007c4  4641              MOV      r1,r8                 ;414
0007c6  4648              MOV      r0,r9                 ;414
0007c8  f7fffffe          BL       TEXT_SetTextColor
0007cc  495d              LDR      r1,|L7.2372|
0007ce  4648              MOV      r0,r9                 ;415
0007d0  f7fffffe          BL       TEXT_SetFont
0007d4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d8  4669              MOV      r1,sp                 ;417
0007da  4648              MOV      r0,r9                 ;417
0007dc  f7fffffe          BL       TEXT_SetText
0007e0  f6400194          MOV      r1,#0x894             ;419
0007e4  6860              LDR      r0,[r4,#4]            ;419
0007e6  f7fffffe          BL       WM_GetDialogItem
0007ea  4681              MOV      r9,r0                 ;419
0007ec  ec532b18          VMOV     r2,r3,d8              ;420
0007f0  f2af3130          ADR      r1,|L7.1220|
0007f4  4668              MOV      r0,sp                 ;420
0007f6  f7fffffe          BL       __2sprintf
0007fa  4641              MOV      r1,r8                 ;421
0007fc  4648              MOV      r0,r9                 ;421
0007fe  f7fffffe          BL       TEXT_SetTextColor
000802  4950              LDR      r1,|L7.2372|
000804  4648              MOV      r0,r9                 ;422
000806  f7fffffe          BL       TEXT_SetFont
00080a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00080e  4669              MOV      r1,sp                 ;424
000810  4648              MOV      r0,r9                 ;424
000812  f7fffffe          BL       TEXT_SetText
000816  f640110b          MOV      r1,#0x90b             ;426
00081a  6860              LDR      r0,[r4,#4]            ;426
00081c  f7fffffe          BL       WM_GetDialogItem
000820  4681              MOV      r9,r0                 ;426
000822  ec532b18          VMOV     r2,r3,d8              ;427
000826  f2af3164          ADR      r1,|L7.1220|
00082a  4668              MOV      r0,sp                 ;427
00082c  f7fffffe          BL       __2sprintf
000830  4641              MOV      r1,r8                 ;428
000832  4648              MOV      r0,r9                 ;428
000834  f7fffffe          BL       TEXT_SetTextColor
000838  4942              LDR      r1,|L7.2372|
00083a  4648              MOV      r0,r9                 ;429
00083c  f7fffffe          BL       TEXT_SetFont
000840  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000844  4669              MOV      r1,sp                 ;431
000846  4648              MOV      r0,r9                 ;431
000848  f7fffffe          BL       TEXT_SetText
00084c  f640110c          MOV      r1,#0x90c             ;433
000850  6860              LDR      r0,[r4,#4]            ;433
000852  f7fffffe          BL       WM_GetDialogItem
000856  4680              MOV      r8,r0                 ;433
000858  4639              MOV      r1,r7                 ;434
00085a  4640              MOV      r0,r8                 ;434
00085c  f7fffffe          BL       TEXT_SetTextColor
000860  4930              LDR      r1,|L7.2340|
000862  4640              MOV      r0,r8                 ;435
000864  f7fffffe          BL       TEXT_SetFont
000868  4837              LDR      r0,|L7.2376|
00086a  6800              LDR      r0,[r0,#0]            ;436  ; temp
00086c  f7fffffe          BL       __aeabi_f2d
000870  ec410b10          VMOV     d0,r0,r1              ;436
000874  ec532b10          VMOV     r2,r3,d0              ;436
000878  f2af31ac          ADR      r1,|L7.1232|
00087c  4668              MOV      r0,sp                 ;436
00087e  f7fffffe          BL       __2sprintf
000882  4669              MOV      r1,sp                 ;437
000884  4640              MOV      r0,r8                 ;437
000886  f7fffffe          BL       TEXT_SetText
00088a  4631              MOV      r1,r6                 ;439
00088c  6860              LDR      r0,[r4,#4]            ;439
00088e  f7fffffe          BL       WM_GetDialogItem
000892  4606              MOV      r6,r0                 ;439
000894  f8db0000          LDR      r0,[r11,#0]           ;440  ; load_cutoffv
000898  f7fffffe          BL       __aeabi_f2d
00089c  ec410b10          VMOV     d0,r0,r1              ;440
0008a0  ec532b10          VMOV     r2,r3,d0              ;440
0008a4  f2af31e4          ADR      r1,|L7.1220|
0008a8  4668              MOV      r0,sp                 ;440
0008aa  f7fffffe          BL       __2sprintf
0008ae  4639              MOV      r1,r7                 ;441
0008b0  4630              MOV      r0,r6                 ;441
0008b2  f7fffffe          BL       TEXT_SetTextColor
0008b6  491b              LDR      r1,|L7.2340|
0008b8  4630              MOV      r0,r6                 ;442
0008ba  f7fffffe          BL       TEXT_SetFont
0008be  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0008c2  4669              MOV      r1,sp                 ;444
0008c4  4630              MOV      r0,r6                 ;444
0008c6  f7fffffe          BL       TEXT_SetText
0008ca  f640113a          MOV      r1,#0x93a             ;445
0008ce  6860              LDR      r0,[r4,#4]            ;445
0008d0  f7fffffe          BL       WM_GetDialogItem
0008d4  4604              MOV      r4,r0                 ;445
0008d6  68a8              LDR      r0,[r5,#8]            ;446  ; pow_cutoffc
0008d8  f7fffffe          BL       __aeabi_f2d
0008dc  ec410b10          VMOV     d0,r0,r1              ;446
0008e0  ec532b10          VMOV     r2,r3,d0              ;446
0008e4  f2af4124          ADR      r1,|L7.1220|
0008e8  4668              MOV      r0,sp                 ;446
0008ea  e030              B        |L7.2382|
                  |L7.2284|
                          DCD      load_sw
                  |L7.2288|
                          DCD      GUI_FontHZ16
                  |L7.2292|
0008f4  e58585e7          DCB      229,133,133,231,148,181,228,184,173,0
0008f8  94b5e4b8
0008fc  ad00    
0008fe  00                DCB      0
0008ff  00                DCB      0
                  |L7.2304|
                          DCD      GUI_FontHZ14
                  |L7.2308|
000904  e794b5e5          DCB      231,148,181,229,142,139,232,174,190,231,189,174,0
000908  8e8be8ae
00090c  bee7bdae
000910  00      
000911  00                DCB      0
000912  00                DCB      0
000913  00                DCB      0
                  |L7.2324|
000914  e794b5e6          DCB      231,148,181,230,181,129,232,174,190,231,189,174,0
000918  b581e8ae
00091c  bee7bdae
000920  00      
000921  00                DCB      0
000922  00                DCB      0
000923  00                DCB      0
                  |L7.2340|
                          DCD      GUI_Font24_1
                  |L7.2344|
000928  e7b3bbe7          DCB      231,179,187,231,187,159,232,174,190,231,189,174,0
00092c  bb9fe8ae
000930  bee7bdae
000934  00      
000935  00                DCB      0
000936  00                DCB      0
000937  00                DCB      0
                  |L7.2360|
                          DCD      GUI_FontEN40
                  |L7.2364|
00093c  563a00            DCB      "V:",0
00093f  00                DCB      0
                  |L7.2368|
000940  493a00            DCB      "I:",0
000943  00                DCB      0
                  |L7.2372|
                          DCD      GUI_FontD24x32
                  |L7.2376|
                          DCD      temp
                  |L7.2380|
00094c  e010              B        |L7.2416|
                  |L7.2382|
00094e  f7fffffe          BL       __2sprintf
000952  4639              MOV      r1,r7                 ;447
000954  4620              MOV      r0,r4                 ;447
000956  f7fffffe          BL       TEXT_SetTextColor
00095a  4907              LDR      r1,|L7.2424|
00095c  4620              MOV      r0,r4                 ;448
00095e  f7fffffe          BL       TEXT_SetFont
000962  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000966  4669              MOV      r1,sp                 ;450
000968  4620              MOV      r0,r4                 ;450
00096a  f7fffffe          BL       TEXT_SetText
00096e  e429              B        |L7.452|
                  |L7.2416|
000970  68a0              LDR      r0,[r4,#8]            ;457
000972  f7fffffe          BL       WM_GetId
000976  e425              B        |L7.452|
;;;556    
                          ENDP

                  |L7.2424|
                          DCD      GUI_Font24_1

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate1
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08000000          DCW      0x0800,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  08020053          DCW      0x0802,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080300a3          DCW      0x0803,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080400f3          DCW      0x0804,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  08050143          DCW      0x0805,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  08060193          DCW      0x0806,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0807001c          DCW      0x0807,0x001c
0000b4  00280040          DCW      0x0028,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0808001c          DCW      0x0808,0x001c
0000d0  00690040          DCW      0x0069,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  082000f0          DCW      0x0820,0x00f0
0000ec  00280020          DCW      0x0028,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  082100f0          DCW      0x0821,0x00f0
000108  006a0020          DCW      0x006a,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  0866017c          DCW      0x0866,0x017c
000124  00280035          DCW      0x0028,0x0035
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  08670172          DCW      0x0867,0x0172
000140  005a0041          DCW      0x005a,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  0893005f          DCW      0x0893,0x005f
00015c  00260096          DCW      0x0026,0x0096
000160  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  0894005f          DCW      0x0894,0x005f
000178  00670096          DCW      0x0067,0x0096
00017c  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  08950190          DCW      0x0895,0x0190
000194  00040032          DCW      0x0004,0x0032
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  090b005f          DCW      0x090b,0x005f
0001b0  00a80096          DCW      0x00a8,0x0096
0001b4  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  090c012c          DCW      0x090c,0x012c
0001cc  00020050          DCW      0x0002,0x0050
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  092e0172          DCW      0x092e,0x0172
0001e8  008c0041          DCW      0x008c,0x0041
0001ec  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  093a0172          DCW      0x093a,0x0172
000204  00be0041          DCW      0x00be,0x0041
000208  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  093c017c          DCW      0x093c,0x017c
000220  00080014          DCW      0x0008,0x0014
000224  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  pow_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  cdelay
000002  0000              DCB      0x00,0x00
                  hWinWind
                          DCD      0x00000000
                  pow_cutoffc
                          DCD      0x00000000
                  DIS_POW
                          DCD      0x00000000
                  DIS_R
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\menu.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___6_menu_c_pow_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___6_menu_c_pow_sw____REVSH|
#line 144
|__asm___6_menu_c_pow_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
