; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;581    
;;;582    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;583      if(page_sw == face_graph)
000002  4c23              LDR      r4,|L1.144|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;584      {      
;;;585      }else{
;;;586          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;587      }
;;;588      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;589      track = face_load;
000012  4920              LDR      r1,|L1.148|
000014  7008              STRB     r0,[r1,#0]
;;;590      set_sw = set_24;
000016  4920              LDR      r1,|L1.152|
000018  2017              MOVS     r0,#0x17
00001a  7008              STRB     r0,[r1,#0]
;;;591      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481f              LDR      r0,|L1.156|
00001e  eddf0a20          VLDR     s1,|L1.160|
000022  4e20              LDR      r6,|L1.164|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;592      SET_Current_Laod = load_c;
000034  4c1c              LDR      r4,|L1.168|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;593      if(SET_Current_Laod > 2500)
00003c  6920              LDR      r0,[r4,#0x10]  ; Run_Control
00003e  f64011c4          MOV      r1,#0x9c4
000042  4288              CMP      r0,r1
000044  d903              BLS      |L1.78|
;;;594      {
;;;595    	  C_SW(1);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       C_SW
00004c  e002              B        |L1.84|
                  |L1.78|
;;;596      }else{
;;;597    	  C_SW(0);
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       C_SW
                  |L1.84|
;;;598      }
;;;599      pass = 0;  
000054  4815              LDR      r0,|L1.172|
000056  2500              MOVS     r5,#0
000058  7005              STRB     r5,[r0,#0]
;;;600      mode_sw = mode_load;
00005a  4915              LDR      r1,|L1.176|
00005c  2002              MOVS     r0,#2
00005e  7008              STRB     r0,[r1,#0]
;;;601      SET_Voltage_Laod = load_v; 
000060  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000064  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;602    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;603    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;604    //   GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;605      TM1650_SET_LED(0x68,0x70);
000066  2170              MOVS     r1,#0x70
000068  2068              MOVS     r0,#0x68
00006a  f7fffffe          BL       TM1650_SET_LED
;;;606      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00006e  f44f5180          MOV      r1,#0x1000
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       GPIO_ResetBits
;;;607      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000078  f7fffffe          BL       WM_GetDesktopWindow
00007c  4603              MOV      r3,r0
00007e  9500              STR      r5,[sp,#0]
000080  4a0d              LDR      r2,|L1.184|
000082  2117              MOVS     r1,#0x17
000084  480d              LDR      r0,|L1.188|
000086  9501              STR      r5,[sp,#4]
000088  f7fffffe          BL       GUI_CreateDialogBox
00008c  6070              STR      r0,[r6,#4]  ; load_wind
;;;608      return load_wind;
;;;609    }
00008e  bd7c              POP      {r2-r6,pc}
;;;610    
                          ENDP

                  |L1.144|
                          DCD      page_sw
                  |L1.148|
                          DCD      track
                  |L1.152|
                          DCD      set_sw
                  |L1.156|
                          DCD      InFlashSave
                  |L1.160|
0000a0  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.164|
                          DCD      ||.data||
                  |L1.168|
                          DCD      Run_Control
                  |L1.172|
                          DCD      pass
                  |L1.176|
                          DCD      mode_sw
                  |L1.180|
                          DCD      0x40020c00
                  |L1.184|
                          DCD      _cbDialog2
                  |L1.188|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;911    }
;;;912    void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;913    {
;;;914    	switch(set_sw){
000004  482b              LDR      r0,|L2.180|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;915    		case set_25:
;;;916            {
;;;917    			WM_HWIN hItem;
;;;918    //            WM_InvalidateWindow(hWinWind);
;;;919                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  482b              LDR      r0,|L2.184|
;;;920    			if(bit > 1)
;;;921    			{
;;;922    				bit --;
;;;923    				set_limit[bit-1] = '\0';
00000a  4f2c              LDR      r7,|L2.188|
00000c  2400              MOVS     r4,#0                 ;919
00000e  6840              LDR      r0,[r0,#4]            ;919
000010  4d2b              LDR      r5,|L2.192|
;;;924    			}
;;;925    			if(bit == dot_flag)
000012  4e2c              LDR      r6,|L2.196|
000014  2918              CMP      r1,#0x18              ;914
000016  d01b              BEQ      |L2.80|
000018  2943              CMP      r1,#0x43              ;914
00001a  d031              BEQ      |L2.128|
00001c  2956              CMP      r1,#0x56              ;914
00001e  d147              BNE      |L2.176|
;;;926    			{
;;;927    				dot_flag = 0;
;;;928    			}
;;;929    			TEXT_SetText(hItem,set_limit);
;;;930    		}break;
;;;931    		case set_68:
;;;932            {
;;;933    			WM_HWIN hItem;
;;;934    //            WM_InvalidateWindow(hWinWind);
;;;935                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;936    			if(bit > 1)
;;;937    			{
;;;938    				bit --;
;;;939    				set_limit[bit-1] = '\0';
;;;940    			}
;;;941    			if(bit == dot_flag)
;;;942    			{
;;;943    				dot_flag = 0;
;;;944    			}
;;;945    			TEXT_SetText(hItem,set_limit);
;;;946    		}break;
;;;947    		case set_87:
;;;948            {
;;;949                WM_HWIN hItem;
;;;950    //            WM_InvalidateWindow(hWinWind);
;;;951                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;952    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;953    			{
;;;954    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;955    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;956    			}
;;;957    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;958    			{
;;;959    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;960    			}
;;;961    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491c              LDR      r1,|L2.188|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f640016e          MOV      r1,#0x86e             ;919
000054  f7fffffe          BL       WM_GetDialogItem
000058  7829              LDRB     r1,[r5,#0]            ;920  ; bit
00005a  2901              CMP      r1,#1                 ;920
00005c  d906              BLS      |L2.108|
00005e  7829              LDRB     r1,[r5,#0]            ;922  ; bit
000060  1e49              SUBS     r1,r1,#1              ;922
000062  7029              STRB     r1,[r5,#0]            ;922
000064  7829              LDRB     r1,[r5,#0]            ;923  ; bit
000066  4439              ADD      r1,r1,r7              ;923
000068  f8014c01          STRB     r4,[r1,#-1]           ;923
                  |L2.108|
00006c  7829              LDRB     r1,[r5,#0]            ;925  ; bit
00006e  7832              LDRB     r2,[r6,#0]            ;925  ; dot_flag
000070  4291              CMP      r1,r2                 ;925
000072  d100              BNE      |L2.118|
000074  7034              STRB     r4,[r6,#0]            ;927
                  |L2.118|
000076  e8bd41f0          POP      {r4-r8,lr}            ;929
00007a  4910              LDR      r1,|L2.188|
00007c  f7ffbffe          B.W      TEXT_SetText
                  |L2.128|
000080  f6401111          MOV      r1,#0x911             ;935
000084  f7fffffe          BL       WM_GetDialogItem
000088  7829              LDRB     r1,[r5,#0]            ;936  ; bit
00008a  2901              CMP      r1,#1                 ;936
00008c  d906              BLS      |L2.156|
00008e  7829              LDRB     r1,[r5,#0]            ;938  ; bit
000090  1e49              SUBS     r1,r1,#1              ;938
000092  7029              STRB     r1,[r5,#0]            ;938
000094  7829              LDRB     r1,[r5,#0]            ;939  ; bit
000096  4439              ADD      r1,r1,r7              ;939
000098  f8014c01          STRB     r4,[r1,#-1]           ;939
                  |L2.156|
00009c  7829              LDRB     r1,[r5,#0]            ;941  ; bit
00009e  7832              LDRB     r2,[r6,#0]            ;941  ; dot_flag
0000a0  4291              CMP      r1,r2                 ;941
0000a2  d100              BNE      |L2.166|
0000a4  7034              STRB     r4,[r6,#0]            ;943
                  |L2.166|
0000a6  e8bd41f0          POP      {r4-r8,lr}            ;945
0000aa  4904              LDR      r1,|L2.188|
0000ac  f7ffbffe          B.W      TEXT_SetText
                  |L2.176|
;;;962    		}break;
;;;963    	}
;;;964    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;965    
                          ENDP

                  |L2.180|
                          DCD      set_sw
                  |L2.184|
                          DCD      ||.data||
                  |L2.188|
                          DCD      set_limit
                  |L2.192|
                          DCD      bit
                  |L2.196|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;966    void INPUT_LOAD(char* num);            
;;;967    void INPUT_LOAD(char* num){
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;968    	u8 i;    
;;;969        switch(set_sw)
000006  4840              LDR      r0,|L3.264|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;970        {
;;;971            case set_25:
;;;972            {
;;;973                WM_HWIN hItem;
;;;974     //           WM_InvalidateWindow(load_wind);
;;;975                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  4840              LDR      r0,|L3.268|
;;;976    			if(bit < 6)
;;;977    			{
;;;978    				strcat(set_limit,num);
;;;979    			}
;;;980    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4c40              LDR      r4,|L3.272|
00000e  4d41              LDR      r5,|L3.276|
000010  6840              LDR      r0,[r0,#4]            ;975
000012  2a18              CMP      r2,#0x18              ;969
000014  d01b              BEQ      |L3.78|
000016  2a43              CMP      r2,#0x43              ;969
000018  d03e              BEQ      |L3.152|
00001a  2a56              CMP      r2,#0x56              ;969
00001c  d171              BNE      |L3.258|
;;;981    			{
;;;982    				
;;;983    			}else{			
;;;984    				
;;;985    				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;986    				{
;;;987    					dot_flag = bit;
;;;988    				}
;;;989    				bit ++;
;;;990    			}
;;;991    			TEXT_SetText(hItem,set_limit);
;;;992    //            switch(bit){
;;;993    //                case 1:
;;;994    //                {
;;;995    //					for(i=0;i<6;i++)
;;;996    //					{
;;;997    //						set_limit[i] = '\0';
;;;998    //					}
;;;999    //                    load_c = atoi(num) * 1000;
;;;1000   //                    strcat(set_limit,num);            
;;;1001   //                    TEXT_SetText(hItem,set_limit);
;;;1002   //                    
;;;1003   //                    bit = 2;
;;;1004   //                    break;
;;;1005   //                }
;;;1006   //                case 2:
;;;1007   //                {
;;;1008   //                    strcat(set_limit,num);            
;;;1009   //                    TEXT_SetText(hItem,set_limit);
;;;1010   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1011   //                    {
;;;1012   //                        dot_flag = 1;
;;;1013   //                    }else{
;;;1014   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1015   //                    }
;;;1016   //                    bit = 3;
;;;1017   //                    break;
;;;1018   //                }
;;;1019   //                case 3:
;;;1020   //                {
;;;1021   //                    strcat(set_limit,num);
;;;1022   //                    TEXT_SetText(hItem,set_limit);
;;;1023   //                    if(dot_flag == 0)
;;;1024   //                    {
;;;1025   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1026   //                        {                            
;;;1027   //                            dot_flag = 2;
;;;1028   //                        }else{
;;;1029   //                            load_c = 0;
;;;1030   //                        }
;;;1031   //                    }else{
;;;1032   //                        load_c = load_c + atoi(num) * 100;
;;;1033   //                    }                  
;;;1034   //                    bit = 4;
;;;1035   //                    break;
;;;1036   //                }
;;;1037   //                case 4:
;;;1038   //                {
;;;1039   //                    strcat(set_limit,num);
;;;1040   //                    TEXT_SetText(hItem,set_limit);
;;;1041   //                    if(dot_flag == 0)
;;;1042   //                    {
;;;1043   //                        load_c = 0;
;;;1044   //                    }else if(dot_flag == 2){
;;;1045   //                        load_c = load_c + atoi(num) * 100;
;;;1046   //                    }else{
;;;1047   //                        load_c = load_c + atoi(num) * 10;
;;;1048   //                    }                  
;;;1049   //                    bit = 5;
;;;1050   //                    break;
;;;1051   //                }
;;;1052   //                case 5:
;;;1053   //                {
;;;1054   //                    strcat(set_limit,num);
;;;1055   //                    TEXT_SetText(hItem,set_limit);
;;;1056   //                    if(dot_flag == 0)
;;;1057   //                    {
;;;1058   //                        load_c = 0;
;;;1059   //                    }else if(dot_flag == 1){
;;;1060   //                        load_c = load_c + atoi(num);
;;;1061   //                    }else{
;;;1062   //                        load_c = load_c + atoi(num) * 10;
;;;1063   //                    }                 
;;;1064   //                    bit = 6;
;;;1065   //                    break;
;;;1066   //                }
;;;1067   //                case 6:
;;;1068   //                {
;;;1069   //                    strcat(set_limit,num);
;;;1070   //                    TEXT_SetText(hItem,set_limit);
;;;1071   //                    if(dot_flag == 0)
;;;1072   //                    {
;;;1073   //                        load_c = 0;
;;;1074   //                    }else if(dot_flag == 2){
;;;1075   //                        load_c = load_c + atoi(num);
;;;1076   //                    }                 
;;;1077   //                    bit = 1;
;;;1078   //                    break;
;;;1079   //                }
;;;1080   //            }
;;;1081               break;
;;;1082               
;;;1083           }
;;;1084           case set_68:
;;;1085           {
;;;1086               WM_HWIN hItem;
;;;1087    //           WM_InvalidateWindow(load_wind);
;;;1088               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1089   			if(bit < 6)
;;;1090   			{
;;;1091   				strcat(set_limit,num);
;;;1092   			}
;;;1093   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1094   			{
;;;1095   				
;;;1096   			}else{			
;;;1097   				
;;;1098   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1099   				{
;;;1100   					dot_flag = bit;
;;;1101   				}
;;;1102   				bit ++;
;;;1103   			}
;;;1104   			TEXT_SetText(hItem,set_limit);
;;;1105   //            switch(bit){
;;;1106   //                case 1:
;;;1107   //                {
;;;1108   //					for(i=0;i<6;i++)
;;;1109   //					{
;;;1110   //						set_limit[i] = '\0';
;;;1111   //					}
;;;1112   //                    load_v = atoi(num) * 1000;
;;;1113   //                    strcat(set_limit,num);            
;;;1114   //                    TEXT_SetText(hItem,set_limit);
;;;1115   //                    
;;;1116   //                    bit = 2;
;;;1117   //                    break;
;;;1118   //                }
;;;1119   //                case 2:
;;;1120   //                {
;;;1121   //                    strcat(set_limit,num);            
;;;1122   //                    TEXT_SetText(hItem,set_limit);
;;;1123   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1124   //                    {
;;;1125   //                        dot_flag = 1;
;;;1126   //                    }else{
;;;1127   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1128   //                    }
;;;1129   //                    bit = 3;
;;;1130   //                    break;
;;;1131   //                }
;;;1132   //                case 3:
;;;1133   //                {
;;;1134   //                    strcat(set_limit,num);
;;;1135   //                    TEXT_SetText(hItem,set_limit);
;;;1136   //                    if(dot_flag == 0)
;;;1137   //                    {
;;;1138   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1139   //                        {                            
;;;1140   //                            dot_flag = 2;
;;;1141   //                        }else{
;;;1142   //                            load_v = 0;
;;;1143   //                        }
;;;1144   //                    }else{
;;;1145   //                        load_v = load_v + atoi(num) * 100;
;;;1146   //                    }                  
;;;1147   //                    bit = 4;
;;;1148   //                    break;
;;;1149   //                }
;;;1150   //                case 4:
;;;1151   //                {
;;;1152   //                    strcat(set_limit,num);
;;;1153   //                    TEXT_SetText(hItem,set_limit);
;;;1154   //                    if(dot_flag == 0)
;;;1155   //                    {
;;;1156   //                        load_v = 0;
;;;1157   //                    }else if(dot_flag == 2){
;;;1158   //                        load_v = load_v + atoi(num) * 100;
;;;1159   //                    }else{
;;;1160   //                        load_v = load_v + atoi(num) * 10;
;;;1161   //                    }                  
;;;1162   //                    bit = 5;
;;;1163   //                    break;
;;;1164   //                }
;;;1165   //                case 5:
;;;1166   //                {
;;;1167   //                    strcat(set_limit,num);
;;;1168   //                    TEXT_SetText(hItem,set_limit);
;;;1169   //                    if(dot_flag == 0)
;;;1170   //                    {
;;;1171   //                        load_v = 0;
;;;1172   //                    }else if(dot_flag == 1){
;;;1173   //                        load_v = load_v + atoi(num);
;;;1174   //                    }else{
;;;1175   //                        load_v = load_v + atoi(num) * 10;
;;;1176   //                    }                 
;;;1177   //                    bit = 6;
;;;1178   //                    break;
;;;1179   //                }
;;;1180   //                case 6:
;;;1181   //                {
;;;1182   //                    strcat(set_limit,num);
;;;1183   //                    TEXT_SetText(hItem,set_limit);
;;;1184   //                    if(dot_flag == 0)
;;;1185   //                    {
;;;1186   //                        load_v = 0;
;;;1187   //                    }else if(dot_flag == 2){
;;;1188   //                        load_v = load_v + atoi(num);
;;;1189   //                    }                 
;;;1190   //                    bit = 1;
;;;1191   //                    break;
;;;1192   //                }
;;;1193   //            }
;;;1194               break;
;;;1195               
;;;1196           }
;;;1197   		case set_87:
;;;1198           {
;;;1199               WM_HWIN hItem;
;;;1200    //           WM_InvalidateWindow(load_wind);
;;;1201               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00001e  f640112d          MOV      r1,#0x92d
000022  f7fffffe          BL       WM_GetDialogItem
000026  4607              MOV      r7,r0
;;;1202   			if(bit < 6)
000028  7828              LDRB     r0,[r5,#0]  ; bit
00002a  2806              CMP      r0,#6
00002c  d203              BCS      |L3.54|
;;;1203   			{
;;;1204   				strcat(set_limit,num);
00002e  4631              MOV      r1,r6
000030  4839              LDR      r0,|L3.280|
000032  f7fffffe          BL       strcat
                  |L3.54|
;;;1205   			}
;;;1206   			if(dot_flag != 0 && strcmp(num,".") == 0)
000036  7820              LDRB     r0,[r4,#0]  ; dot_flag
000038  b128              CBZ      r0,|L3.70|
00003a  a138              ADR      r1,|L3.284|
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       strcmp
000042  2800              CMP      r0,#0
000044  d057              BEQ      |L3.246|
                  |L3.70|
;;;1207   			{
;;;1208   				
;;;1209   			}else{			
;;;1210   				
;;;1211   				if(dot_flag == 0 && strcmp(num,".") == 0)
000046  7820              LDRB     r0,[r4,#0]  ; dot_flag
000048  2800              CMP      r0,#0
00004a  d04a              BEQ      |L3.226|
00004c  e050              B        |L3.240|
                  |L3.78|
00004e  f640016e          MOV      r1,#0x86e             ;975
000052  f7fffffe          BL       WM_GetDialogItem
000056  4607              MOV      r7,r0                 ;975
000058  7828              LDRB     r0,[r5,#0]            ;976  ; bit
00005a  2806              CMP      r0,#6                 ;976
00005c  d203              BCS      |L3.102|
00005e  4631              MOV      r1,r6                 ;978
000060  482d              LDR      r0,|L3.280|
000062  f7fffffe          BL       strcat
                  |L3.102|
000066  7820              LDRB     r0,[r4,#0]            ;980  ; dot_flag
000068  b120              CBZ      r0,|L3.116|
00006a  a12c              ADR      r1,|L3.284|
00006c  4630              MOV      r0,r6                 ;980
00006e  f7fffffe          BL       strcmp
000072  b158              CBZ      r0,|L3.140|
                  |L3.116|
000074  7820              LDRB     r0,[r4,#0]            ;985  ; dot_flag
000076  b930              CBNZ     r0,|L3.134|
000078  a128              ADR      r1,|L3.284|
00007a  4630              MOV      r0,r6                 ;985
00007c  f7fffffe          BL       strcmp
000080  b908              CBNZ     r0,|L3.134|
000082  7828              LDRB     r0,[r5,#0]            ;987  ; bit
000084  7020              STRB     r0,[r4,#0]            ;987
                  |L3.134|
000086  7828              LDRB     r0,[r5,#0]            ;989  ; bit
000088  1c40              ADDS     r0,r0,#1              ;989
00008a  7028              STRB     r0,[r5,#0]            ;989
                  |L3.140|
00008c  4638              MOV      r0,r7                 ;991
00008e  e8bd41f0          POP      {r4-r8,lr}            ;991
000092  4921              LDR      r1,|L3.280|
000094  f7ffbffe          B.W      TEXT_SetText
                  |L3.152|
000098  f6401111          MOV      r1,#0x911             ;1088
00009c  f7fffffe          BL       WM_GetDialogItem
0000a0  4607              MOV      r7,r0                 ;1088
0000a2  7828              LDRB     r0,[r5,#0]            ;1089  ; bit
0000a4  2806              CMP      r0,#6                 ;1089
0000a6  d203              BCS      |L3.176|
0000a8  4631              MOV      r1,r6                 ;1091
0000aa  481b              LDR      r0,|L3.280|
0000ac  f7fffffe          BL       strcat
                  |L3.176|
0000b0  7820              LDRB     r0,[r4,#0]            ;1093  ; dot_flag
0000b2  b120              CBZ      r0,|L3.190|
0000b4  a119              ADR      r1,|L3.284|
0000b6  4630              MOV      r0,r6                 ;1093
0000b8  f7fffffe          BL       strcmp
0000bc  b158              CBZ      r0,|L3.214|
                  |L3.190|
0000be  7820              LDRB     r0,[r4,#0]            ;1098  ; dot_flag
0000c0  b930              CBNZ     r0,|L3.208|
0000c2  a116              ADR      r1,|L3.284|
0000c4  4630              MOV      r0,r6                 ;1098
0000c6  f7fffffe          BL       strcmp
0000ca  b908              CBNZ     r0,|L3.208|
0000cc  7828              LDRB     r0,[r5,#0]            ;1100  ; bit
0000ce  7020              STRB     r0,[r4,#0]            ;1100
                  |L3.208|
0000d0  7828              LDRB     r0,[r5,#0]            ;1102  ; bit
0000d2  1c40              ADDS     r0,r0,#1              ;1102
0000d4  7028              STRB     r0,[r5,#0]            ;1102
                  |L3.214|
0000d6  4638              MOV      r0,r7                 ;1104
0000d8  e8bd41f0          POP      {r4-r8,lr}            ;1104
0000dc  490e              LDR      r1,|L3.280|
0000de  f7ffbffe          B.W      TEXT_SetText
                  |L3.226|
0000e2  a10e              ADR      r1,|L3.284|
0000e4  4630              MOV      r0,r6
0000e6  f7fffffe          BL       strcmp
0000ea  b908              CBNZ     r0,|L3.240|
;;;1212   				{
;;;1213   					dot_flag = bit;
0000ec  7828              LDRB     r0,[r5,#0]  ; bit
0000ee  7020              STRB     r0,[r4,#0]
                  |L3.240|
;;;1214   				}
;;;1215   				bit ++;
0000f0  7828              LDRB     r0,[r5,#0]  ; bit
0000f2  1c40              ADDS     r0,r0,#1
0000f4  7028              STRB     r0,[r5,#0]
                  |L3.246|
;;;1216   			}
;;;1217   			TEXT_SetText(hItem,set_limit);
0000f6  4638              MOV      r0,r7
0000f8  e8bd41f0          POP      {r4-r8,lr}
0000fc  4906              LDR      r1,|L3.280|
0000fe  f7ffbffe          B.W      TEXT_SetText
                  |L3.258|
;;;1218   //            switch(bit){
;;;1219   //                case 1:
;;;1220   //                {
;;;1221   //					for(i=0;i<6;i++)
;;;1222   //					{
;;;1223   //						set_limit[i] = '\0';
;;;1224   //					}
;;;1225   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1226   //                    strcat(set_limit,num);            
;;;1227   //                    TEXT_SetText(hItem,set_limit);
;;;1228   //                    
;;;1229   //                    bit = 2;
;;;1230   //                    break;
;;;1231   //                }
;;;1232   //                case 2:
;;;1233   //                {
;;;1234   //                    strcat(set_limit,num);            
;;;1235   //                    TEXT_SetText(hItem,set_limit);
;;;1236   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1237   //                    {
;;;1238   //                        dot_flag = 1;
;;;1239   //                    }else{
;;;1240   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1241   //                    }
;;;1242   //                    bit = 3;
;;;1243   //                    break;
;;;1244   //                }
;;;1245   //                case 3:
;;;1246   //                {
;;;1247   //                    strcat(set_limit,num);
;;;1248   //                    TEXT_SetText(hItem,set_limit);
;;;1249   //                    if(dot_flag == 0)
;;;1250   //                    {
;;;1251   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1252   //                        {                            
;;;1253   //                            dot_flag = 2;
;;;1254   //                        }else{
;;;1255   //                            set_load_cutoffv = 0;
;;;1256   //                        }
;;;1257   //                    }else{
;;;1258   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1259   //                    }                  
;;;1260   //                    bit = 4;
;;;1261   //                    break;
;;;1262   //                }
;;;1263   //                case 4:
;;;1264   //                {
;;;1265   //                    strcat(set_limit,num);
;;;1266   //                    TEXT_SetText(hItem,set_limit);
;;;1267   //                    if(dot_flag == 0)
;;;1268   //                    {
;;;1269   //                        set_load_cutoffv = 0;
;;;1270   //                    }else if(dot_flag == 2){
;;;1271   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1272   //                    }else{
;;;1273   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1274   //                    }                  
;;;1275   //                    bit = 5;
;;;1276   //                    break;
;;;1277   //                }
;;;1278   //                case 5:
;;;1279   //                {
;;;1280   //                    strcat(set_limit,num);
;;;1281   //                    TEXT_SetText(hItem,set_limit);
;;;1282   //                    if(dot_flag == 0)
;;;1283   //                    {
;;;1284   //                        set_load_cutoffv = 0;
;;;1285   //                    }else if(dot_flag == 1){
;;;1286   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1287   //                    }else{
;;;1288   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1289   //                    }                 
;;;1290   //                    bit = 6;
;;;1291   //                    break;
;;;1292   //                }
;;;1293   //                case 6:
;;;1294   //                {
;;;1295   //                    strcat(set_limit,num);
;;;1296   //                    TEXT_SetText(hItem,set_limit);
;;;1297   //                    if(dot_flag == 0)
;;;1298   //                    {
;;;1299   //                        set_load_cutoffv = 0;
;;;1300   //                    }else if(dot_flag == 2){
;;;1301   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1302   //                    }                 
;;;1303   //                    bit = 1;
;;;1304   //                    break;
;;;1305   //                }
;;;1306   //            }
;;;1307               break;
;;;1308               
;;;1309           }
;;;1310           default:break;
;;;1311       }
;;;1312   }
000102  e8bd81f0          POP      {r4-r8,pc}
;;;1313   
                          ENDP

000106  0000              DCW      0x0000
                  |L3.264|
                          DCD      set_sw
                  |L3.268|
                          DCD      ||.data||
                  |L3.272|
                          DCD      dot_flag
                  |L3.276|
                          DCD      bit
                  |L3.280|
                          DCD      set_limit
                  |L3.284|
00011c  2e00              DCB      ".",0
00011e  00                DCB      0
00011f  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;616    void LOAD_OP_DOWN(void);
;;;617    void LOAD_OP_DOWN(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;618    {
;;;619        switch(set_sw)
000004  4d34              LDR      r5,|L4.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;620        {
;;;621            case set_24:
;;;622            {
;;;623                WM_HWIN hItem;
;;;624                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
000008  4c34              LDR      r4,|L4.220|
;;;625                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00000a  f06f4670          MVN      r6,#0xf0000000
;;;626                TEXT_SetTextColor(hItem, GUI_WHITE);
00000e  1137              ASRS     r7,r6,#4
;;;627                
;;;628                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;629                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000010  f8df90cc          LDR      r9,|L4.224|
000014  6860              LDR      r0,[r4,#4]            ;619
000016  f44f6811          MOV      r8,#0x910             ;628
00001a  2917              CMP      r1,#0x17              ;619
00001c  d023              BEQ      |L4.102|
;;;630                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;631    
;;;632                set_sw = set_66;
;;;633                break;
;;;634            }
;;;635            case set_66:
;;;636            {
;;;637                WM_HWIN hItem;
;;;638                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;639                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;640                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;641                
;;;642                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00001e  f6401a0e          MOV      r10,#0x90e
000022  2941              CMP      r1,#0x41              ;619
000024  d03c              BEQ      |L4.160|
000026  2942              CMP      r1,#0x42              ;619
000028  d11b              BNE      |L4.98|
;;;643                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;644                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;645    
;;;646                set_sw = set_67;
;;;647                break;
;;;648            }
;;;649    		 case set_67:
;;;650            {
;;;651                WM_HWIN hItem;
;;;652                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
00002a  4651              MOV      r1,r10
00002c  f7fffffe          BL       WM_GetDialogItem
000030  4680              MOV      r8,r0
;;;653                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000032  4631              MOV      r1,r6
000034  4640              MOV      r0,r8
000036  f7fffffe          BL       TEXT_SetBkColor
;;;654                TEXT_SetTextColor(hItem, GUI_WHITE);
00003a  4639              MOV      r1,r7
00003c  4640              MOV      r0,r8
00003e  f7fffffe          BL       TEXT_SetTextColor
;;;655                
;;;656                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000042  f6401139          MOV      r1,#0x939
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;657                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4649              MOV      r1,r9
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;658                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;659    
;;;660                set_sw = set_86;
00005e  2055              MOVS     r0,#0x55
000060  7028              STRB     r0,[r5,#0]
                  |L4.98|
;;;661                break;
;;;662            }
;;;663        }   
;;;664    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L4.102|
000066  f640016d          MOV      r1,#0x86d             ;624
00006a  f7fffffe          BL       WM_GetDialogItem
00006e  4682              MOV      r10,r0                ;624
000070  4631              MOV      r1,r6                 ;625
000072  4650              MOV      r0,r10                ;625
000074  f7fffffe          BL       TEXT_SetBkColor
000078  4639              MOV      r1,r7                 ;626
00007a  4650              MOV      r0,r10                ;626
00007c  f7fffffe          BL       TEXT_SetTextColor
000080  4641              MOV      r1,r8                 ;628
000082  6860              LDR      r0,[r4,#4]            ;628  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;628
00008a  4649              MOV      r1,r9                 ;629
00008c  4620              MOV      r0,r4                 ;629
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;630
000094  4620              MOV      r0,r4                 ;630
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2041              MOVS     r0,#0x41              ;632
00009c  7028              STRB     r0,[r5,#0]            ;632
00009e  e7e0              B        |L4.98|
                  |L4.160|
0000a0  4641              MOV      r1,r8                 ;638
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4680              MOV      r8,r0                 ;638
0000a8  4631              MOV      r1,r6                 ;639
0000aa  4640              MOV      r0,r8                 ;639
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4639              MOV      r1,r7                 ;640
0000b2  4640              MOV      r0,r8                 ;640
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4651              MOV      r1,r10                ;642
0000ba  6860              LDR      r0,[r4,#4]            ;642  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;642
0000c2  4649              MOV      r1,r9                 ;643
0000c4  4620              MOV      r0,r4                 ;643
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;644
0000cc  4620              MOV      r0,r4                 ;644
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2042              MOVS     r0,#0x42              ;646
0000d4  7028              STRB     r0,[r5,#0]            ;646
0000d6  e7c4              B        |L4.98|
;;;665    
                          ENDP

                  |L4.216|
                          DCD      set_sw
                  |L4.220|
                          DCD      ||.data||
                  |L4.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;666    void LOAD_OP_UP(void);
;;;667    void LOAD_OP_UP(void)
000000  e92d47f0          PUSH     {r4-r10,lr}
;;;668    {
;;;669        switch(set_sw)
000004  4d34              LDR      r5,|L5.216|
000006  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;670        {
;;;671            case set_66:
;;;672            {
;;;673                WM_HWIN hItem;
;;;674                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000008  4c34              LDR      r4,|L5.220|
;;;675                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;676                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;677                
;;;678                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;679                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00000a  f8dfa0d4          LDR      r10,|L5.224|
00000e  f44f6611          MOV      r6,#0x910             ;674
000012  6860              LDR      r0,[r4,#4]            ;669
000014  f06f4870          MVN      r8,#0xf0000000        ;675
000018  f06f497f          MVN      r9,#0xff000000        ;676
00001c  2941              CMP      r1,#0x41              ;669
00001e  d022              BEQ      |L5.102|
;;;680                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;681    
;;;682                set_sw = set_24;
;;;683                break;
;;;684            }
;;;685            case set_67:
;;;686            {
;;;687                WM_HWIN hItem;
;;;688                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000020  1eb7              SUBS     r7,r6,#2
000022  2942              CMP      r1,#0x42              ;669
000024  d03c              BEQ      |L5.160|
000026  2955              CMP      r1,#0x55              ;669
000028  d11b              BNE      |L5.98|
;;;689                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;690                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;691                
;;;692                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;693                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;694                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;695    
;;;696                set_sw = set_66;
;;;697                break;
;;;698            }
;;;699    		case set_86:
;;;700            {
;;;701                WM_HWIN hItem;
;;;702                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002a  f6401139          MOV      r1,#0x939
00002e  f7fffffe          BL       WM_GetDialogItem
000032  4606              MOV      r6,r0
;;;703                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000034  4641              MOV      r1,r8
000036  4630              MOV      r0,r6
000038  f7fffffe          BL       TEXT_SetBkColor
;;;704                TEXT_SetTextColor(hItem, GUI_WHITE);
00003c  4649              MOV      r1,r9
00003e  4630              MOV      r0,r6
000040  f7fffffe          BL       TEXT_SetTextColor
;;;705                
;;;706                hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
000044  4639              MOV      r1,r7
000046  6860              LDR      r0,[r4,#4]  ; load_wind
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4604              MOV      r4,r0
;;;707                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00004e  4651              MOV      r1,r10
000050  4620              MOV      r0,r4
000052  f7fffffe          BL       TEXT_SetBkColor
;;;708                TEXT_SetTextColor(hItem, GUI_BLACK);
000056  2100              MOVS     r1,#0
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       TEXT_SetTextColor
;;;709    
;;;710                set_sw = set_67;
00005e  2042              MOVS     r0,#0x42
000060  7028              STRB     r0,[r5,#0]
                  |L5.98|
;;;711                break;
;;;712            }
;;;713        }   
;;;714    }
000062  e8bd87f0          POP      {r4-r10,pc}
                  |L5.102|
000066  4631              MOV      r1,r6                 ;674
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0                 ;674
00006e  4641              MOV      r1,r8                 ;675
000070  4630              MOV      r0,r6                 ;675
000072  f7fffffe          BL       TEXT_SetBkColor
000076  4649              MOV      r1,r9                 ;676
000078  4630              MOV      r0,r6                 ;676
00007a  f7fffffe          BL       TEXT_SetTextColor
00007e  f640016d          MOV      r1,#0x86d             ;678
000082  6860              LDR      r0,[r4,#4]            ;678  ; load_wind
000084  f7fffffe          BL       WM_GetDialogItem
000088  4604              MOV      r4,r0                 ;678
00008a  4651              MOV      r1,r10                ;679
00008c  4620              MOV      r0,r4                 ;679
00008e  f7fffffe          BL       TEXT_SetBkColor
000092  2100              MOVS     r1,#0                 ;680
000094  4620              MOV      r0,r4                 ;680
000096  f7fffffe          BL       TEXT_SetTextColor
00009a  2017              MOVS     r0,#0x17              ;682
00009c  7028              STRB     r0,[r5,#0]            ;682
00009e  e7e0              B        |L5.98|
                  |L5.160|
0000a0  4639              MOV      r1,r7                 ;688
0000a2  f7fffffe          BL       WM_GetDialogItem
0000a6  4607              MOV      r7,r0                 ;688
0000a8  4641              MOV      r1,r8                 ;689
0000aa  4638              MOV      r0,r7                 ;689
0000ac  f7fffffe          BL       TEXT_SetBkColor
0000b0  4649              MOV      r1,r9                 ;690
0000b2  4638              MOV      r0,r7                 ;690
0000b4  f7fffffe          BL       TEXT_SetTextColor
0000b8  4631              MOV      r1,r6                 ;692
0000ba  6860              LDR      r0,[r4,#4]            ;692  ; load_wind
0000bc  f7fffffe          BL       WM_GetDialogItem
0000c0  4604              MOV      r4,r0                 ;692
0000c2  4651              MOV      r1,r10                ;693
0000c4  4620              MOV      r0,r4                 ;693
0000c6  f7fffffe          BL       TEXT_SetBkColor
0000ca  2100              MOVS     r1,#0                 ;694
0000cc  4620              MOV      r0,r4                 ;694
0000ce  f7fffffe          BL       TEXT_SetTextColor
0000d2  2041              MOVS     r0,#0x41              ;696
0000d4  7028              STRB     r0,[r5,#0]            ;696
0000d6  e7c4              B        |L5.98|
;;;715    
                          ENDP

                  |L5.216|
                          DCD      set_sw
                  |L5.220|
                          DCD      ||.data||
                  |L5.224|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;717    void LOAD_SET(void);
;;;718    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b085              SUB      sp,sp,#0x14
;;;719        char    buf[6];
;;;720        float   dis_load_c;
;;;721        float   dis_load_v;
;;;722        vu8 i;
;;;723        switch(set_sw)
00000a  4dfa              LDR      r5,|L6.1012|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;724        {
;;;725            case set_24:
;;;726            {
;;;727                WM_HWIN hItem;
;;;728    //            WM_InvalidateWindow(load_wind);
;;;729                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;730                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;731                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;732                       
;;;733                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;734                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;735                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;736                for(i=0;i<6;i++)
;;;737                {
;;;738                    set_limit[i] = '\0';
;;;739                }
;;;740                set_sw = set_25;
;;;741                break;
;;;742            }
;;;743            case set_25:
;;;744            {
;;;745                WM_HWIN hItem;
;;;746    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;747                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;748                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;749                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;750    			if(dot_flag == 0){
;;;751    				load_c = atoi(set_limit)*1000;					
;;;752    			}else if(dot_flag != 0){
;;;753    				memset(buf, '\0', sizeof(buf));
;;;754    				strncpy(buf,set_limit,dot_flag + 3);
;;;755    				load_c = atof(buf)*1000;
00000e  ed9f8bfa          VLDR     d8,|L6.1016|
000012  4afd              LDR      r2,|L6.1032|
;;;756    			}
;;;757    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000014  f8dfa3e8          LDR      r10,|L6.1024|
;;;758                    load_c = 0;
;;;759                }
;;;760    			if(load_c > 2500)
;;;761    			{
;;;762    				C_SW(1);
000018  2701              MOVS     r7,#1
;;;763    			}else{
;;;764    				C_SW(0);
;;;765    			}
;;;766                SET_Current_Laod = load_c;            
;;;767    //            if(load_c > 3000)
;;;768    //			{
;;;769    //				C_SW(1);
;;;770    //			}else{
;;;771    //				C_SW(0);
;;;772    //			}
;;;773                dis_load_c = (float)SET_Current_Laod/1000;
;;;774                sprintf(buf,"%.3f",dis_load_c);
;;;775                TEXT_SetText(hItem,buf);
;;;776                
;;;777                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;778                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;779                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;780                Write_Limits();
;;;781                
;;;782                set_sw = set_24;
;;;783                bit = 1;
00001a  f8df83e8          LDR      r8,|L6.1028|
00001e  ed9f9afb          VLDR     s18,|L6.1036|
000022  4efb              LDR      r6,|L6.1040|
000024  f8dfb3ec          LDR      r11,|L6.1044|
000028  2400              MOVS     r4,#0                 ;738
00002a  f8df93ec          LDR      r9,|L6.1048|
00002e  6850              LDR      r0,[r2,#4]            ;723
000030  2942              CMP      r1,#0x42              ;723
000032  d07d              BEQ      |L6.304|
000034  dc25              BGT      |L6.130|
000036  2917              CMP      r1,#0x17              ;723
000038  d07b              BEQ      |L6.306|
00003a  2918              CMP      r1,#0x18              ;723
00003c  d07a              BEQ      |L6.308|
00003e  2941              CMP      r1,#0x41              ;723
000040  d179              BNE      |L6.310|
;;;784                dot_flag = 0;
;;;785                break;
;;;786            }
;;;787            case set_66:
;;;788            {
;;;789                WM_HWIN hItem;
;;;790    //            WM_InvalidateWindow(load_wind);
;;;791                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;792                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;793                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;794                       
;;;795                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;796                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49eb              LDR      r1,|L6.1052|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;797                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;798                for(i=0;i<6;i++)
00007e  9402              STR      r4,[sp,#8]
000080  e139              B        |L6.758|
                  |L6.130|
000082  2943              CMP      r1,#0x43              ;723
000084  d07d              BEQ      |L6.386|
;;;799                {
;;;800                    set_limit[i] = '\0';
;;;801                }
;;;802                set_sw = set_68;
;;;803                break;
;;;804            }
;;;805            case set_68:
;;;806            {
;;;807                WM_HWIN hItem;
;;;808                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;809                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;810                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;811    			if(dot_flag == 0){
;;;812    				load_v = atoi(set_limit)*1000;					
;;;813    			}else if(dot_flag != 0){
;;;814    				memset(buf, '\0', sizeof(buf));
;;;815    				strncpy(buf,set_limit,dot_flag + 3);
;;;816    				load_v = atof(buf)*1000;
;;;817    			}
;;;818    			if(load_v > 80000 || (float)load_v/1000 * DISS_Current > 200){
;;;819                    load_v = 0;
;;;820                }
;;;821                SET_Voltage_Laod = load_v;          
;;;822                
;;;823                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;824                sprintf(buf,"%.3f",dis_load_v);
;;;825                TEXT_SetText(hItem,buf);
;;;826                
;;;827                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;828                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;829                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;830                Write_Limits();
;;;831                
;;;832                set_sw = set_66;
;;;833                bit = 1;
;;;834                dot_flag = 0;
;;;835                break;
;;;836            }
;;;837            case set_67:
;;;838            {
;;;839                switch(flag_Load_CC)
;;;840                {
;;;841                    case 1:
;;;842                    {
;;;843                        WM_HWIN hItem;
;;;844                        hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;845                        TEXT_SetText(hItem,"CV");
;;;846    					flag_Load_CC = 0;
;;;847                        GPIO_SetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;848                        load_mode = 0;
;;;849                        Write_LOAD();
;;;850                        break;
;;;851                    }
;;;852                    case 0:
;;;853                    {
;;;854                         WM_HWIN hItem;
;;;855                         hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;856                         TEXT_SetText(hItem,"CC");
;;;857    					 flag_Load_CC = 1;
;;;858                         GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CC                     
;;;859                         load_mode =1;
;;;860                         Write_LOAD();
;;;861                         break;
;;;862                    }
;;;863                }   
;;;864            }break;
;;;865    		case set_86:
;;;866            {
;;;867                WM_HWIN hItem;
;;;868    //            WM_InvalidateWindow(load_wind);
;;;869                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000086  f6401a39          MOV      r10,#0x939
;;;870                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;871                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;872                       
;;;873                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00008a  f640162d          MOV      r6,#0x92d
00008e  2955              CMP      r1,#0x55              ;723
000090  d078              BEQ      |L6.388|
000092  2956              CMP      r1,#0x56              ;723
000094  d161              BNE      |L6.346|
;;;874                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;875                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;876                for(i=0;i<6;i++)
;;;877                {
;;;878                    set_limit[i] = '\0';
;;;879                }
;;;880                set_sw = set_87;
;;;881                break;
;;;882            }
;;;883            case set_87:
;;;884            {
;;;885                WM_HWIN hItem;
;;;886                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000096  4631              MOV      r1,r6
000098  4693              MOV      r11,r2
00009a  f7fffffe          BL       WM_GetDialogItem
00009e  9001              STR      r0,[sp,#4]
;;;887                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
0000a0  f06f4170          MVN      r1,#0xf0000000
0000a4  9801              LDR      r0,[sp,#4]
0000a6  f7fffffe          BL       TEXT_SetBkColor
;;;888                TEXT_SetTextColor(hItem, GUI_WHITE); 
0000aa  f06f417f          MVN      r1,#0xff000000
0000ae  9801              LDR      r0,[sp,#4]
0000b0  f7fffffe          BL       TEXT_SetTextColor
;;;889    			if(dot_flag == 0){
0000b4  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
;;;890    				set_load_cutoffv = atoi(set_limit)*1000;					
0000b8  4ed9              LDR      r6,|L6.1056|
0000ba  2800              CMP      r0,#0                 ;889
0000bc  d075              BEQ      |L6.426|
;;;891    			}else if(dot_flag != 0){
0000be  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
0000c2  b1a0              CBZ      r0,|L6.238|
;;;892    				memset(buf, '\0', sizeof(buf));
0000c4  9403              STR      r4,[sp,#0xc]
0000c6  9404              STR      r4,[sp,#0x10]
;;;893    				strncpy(buf,set_limit,dot_flag + 3);
0000c8  f8992000          LDRB     r2,[r9,#0]  ; dot_flag
0000cc  49d1              LDR      r1,|L6.1044|
0000ce  1cd2              ADDS     r2,r2,#3
0000d0  a803              ADD      r0,sp,#0xc
0000d2  f7fffffe          BL       strncpy
;;;894    				set_load_cutoffv = atof(buf)*1000;
0000d6  a803              ADD      r0,sp,#0xc
0000d8  f7fffffe          BL       __hardfp_atof
0000dc  ec532b18          VMOV     r2,r3,d8
0000e0  ec510b10          VMOV     r0,r1,d0
0000e4  f7fffffe          BL       __aeabi_dmul
0000e8  f7fffffe          BL       __aeabi_d2iz
0000ec  6130              STR      r0,[r6,#0x10]  ; InFlashSave
                  |L6.238|
;;;895    			}
;;;896                load_cutoffv = (float)set_load_cutoffv/1000;
0000ee  ed960a04          VLDR     s0,[r6,#0x10]
0000f2  eef80ac0          VCVT.F32.S32 s1,s0
0000f6  ee800a89          VDIV.F32 s0,s1,s18
0000fa  ed8b0a02          VSTR     s0,[r11,#8]
;;;897                sprintf(buf,"%.3f",load_cutoffv);
0000fe  ee100a10          VMOV     r0,s0
000102  f7fffffe          BL       __aeabi_f2d
000106  ec410b10          VMOV     d0,r0,r1
00010a  a1c6              ADR      r1,|L6.1060|
00010c  ec532b10          VMOV     r2,r3,d0
000110  a803              ADD      r0,sp,#0xc
000112  f7fffffe          BL       __2sprintf
;;;898                TEXT_SetText(hItem,buf);
000116  a903              ADD      r1,sp,#0xc
000118  9801              LDR      r0,[sp,#4]
00011a  f7fffffe          BL       TEXT_SetText
;;;899                
;;;900                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00011e  4651              MOV      r1,r10
000120  f8db0004          LDR      r0,[r11,#4]  ; load_wind
000124  f7fffffe          BL       WM_GetDialogItem
000128  4606              MOV      r6,r0
;;;901                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00012a  49bc              LDR      r1,|L6.1052|
00012c  4630              MOV      r0,r6
00012e  e003              B        |L6.312|
                  |L6.304|
000130  e18d              B        |L6.1102|
                  |L6.306|
000132  e017              B        |L6.356|
                  |L6.308|
000134  e049              B        |L6.458|
                  |L6.310|
000136  e010              B        |L6.346|
                  |L6.312|
000138  f7fffffe          BL       TEXT_SetBkColor
;;;902                TEXT_SetTextColor(hItem, GUI_BLACK);
00013c  2100              MOVS     r1,#0
00013e  4630              MOV      r0,r6
000140  f7fffffe          BL       TEXT_SetTextColor
;;;903                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
000144  4ab6              LDR      r2,|L6.1056|
000146  2128              MOVS     r1,#0x28
000148  48b8              LDR      r0,|L6.1068|
00014a  f7fffffe          BL       Flash_Write32BitDatas
;;;904                
;;;905                set_sw = set_86;
00014e  2055              MOVS     r0,#0x55
000150  7028              STRB     r0,[r5,#0]
;;;906                bit = 1;
000152  f8887000          STRB     r7,[r8,#0]
;;;907                dot_flag = 0;
000156  f8894000          STRB     r4,[r9,#0]
                  |L6.346|
;;;908                break;
;;;909            }
;;;910        }
;;;911    }
00015a  b005              ADD      sp,sp,#0x14
00015c  ecbd8b04          VPOP     {d8-d9}
000160  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.356|
000164  f640016d          MOV      r1,#0x86d             ;729
000168  4616              MOV      r6,r2                 ;729
00016a  f7fffffe          BL       WM_GetDialogItem
00016e  4607              MOV      r7,r0                 ;729
000170  f06f4170          MVN      r1,#0xf0000000        ;730
000174  4638              MOV      r0,r7                 ;730
000176  f7fffffe          BL       TEXT_SetBkColor
00017a  f06f417f          MVN      r1,#0xff000000        ;731
00017e  4638              MOV      r0,r7                 ;731
000180  e001              B        |L6.390|
                  |L6.386|
000182  e0bf              B        |L6.772|
                  |L6.388|
000184  e194              B        |L6.1200|
                  |L6.390|
000186  f7fffffe          BL       TEXT_SetTextColor
00018a  f640016e          MOV      r1,#0x86e             ;733
00018e  6870              LDR      r0,[r6,#4]            ;733  ; load_wind
000190  f7fffffe          BL       WM_GetDialogItem
000194  4606              MOV      r6,r0                 ;733
000196  49a1              LDR      r1,|L6.1052|
000198  4630              MOV      r0,r6                 ;734
00019a  f7fffffe          BL       TEXT_SetBkColor
00019e  2100              MOVS     r1,#0                 ;735
0001a0  4630              MOV      r0,r6                 ;735
0001a2  f7fffffe          BL       TEXT_SetTextColor
0001a6  9402              STR      r4,[sp,#8]            ;736
0001a8  e008              B        |L6.444|
                  |L6.426|
0001aa  e1ae              B        |L6.1290|
                  |L6.428|
0001ac  f89d0008          LDRB     r0,[sp,#8]            ;738
0001b0  f80b4000          STRB     r4,[r11,r0]           ;738
0001b4  f89d0008          LDRB     r0,[sp,#8]            ;736
0001b8  1c40              ADDS     r0,r0,#1              ;736
0001ba  9002              STR      r0,[sp,#8]            ;736
                  |L6.444|
0001bc  f89d0008          LDRB     r0,[sp,#8]            ;736
0001c0  2806              CMP      r0,#6                 ;736
0001c2  d3f3              BCC      |L6.428|
0001c4  2018              MOVS     r0,#0x18              ;740
0001c6  7028              STRB     r0,[r5,#0]            ;740
0001c8  e7c7              B        |L6.346|
                  |L6.458|
0001ca  f640016e          MOV      r1,#0x86e             ;747
0001ce  4693              MOV      r11,r2                ;747
0001d0  f7fffffe          BL       WM_GetDialogItem
0001d4  9001              STR      r0,[sp,#4]            ;747
0001d6  f06f4170          MVN      r1,#0xf0000000        ;748
0001da  9801              LDR      r0,[sp,#4]            ;748
0001dc  f7fffffe          BL       TEXT_SetBkColor
0001e0  f06f417f          MVN      r1,#0xff000000        ;749
0001e4  9801              LDR      r0,[sp,#4]            ;749
0001e6  f7fffffe          BL       TEXT_SetTextColor
0001ea  f8990000          LDRB     r0,[r9,#0]            ;750  ; dot_flag
0001ee  b3d8              CBZ      r0,|L6.616|
0001f0  f8990000          LDRB     r0,[r9,#0]            ;752  ; dot_flag
0001f4  b1a8              CBZ      r0,|L6.546|
0001f6  9403              STR      r4,[sp,#0xc]          ;753
0001f8  9404              STR      r4,[sp,#0x10]         ;753
0001fa  f8992000          LDRB     r2,[r9,#0]            ;754  ; dot_flag
0001fe  4985              LDR      r1,|L6.1044|
000200  1cd2              ADDS     r2,r2,#3              ;754
000202  a803              ADD      r0,sp,#0xc            ;754
000204  f7fffffe          BL       strncpy
000208  a803              ADD      r0,sp,#0xc            ;755
00020a  f7fffffe          BL       __hardfp_atof
00020e  ec532b18          VMOV     r2,r3,d8              ;755
000212  ec510b10          VMOV     r0,r1,d0              ;755
000216  f7fffffe          BL       __aeabi_dmul
00021a  f7fffffe          BL       __aeabi_d2uiz
00021e  f8c60094          STR      r0,[r6,#0x94]         ;755  ; Run_Control
                  |L6.546|
000222  f8d60094          LDR      r0,[r6,#0x94]         ;757  ; Run_Control
000226  f2475130          MOV      r1,#0x7530            ;757
00022a  4288              CMP      r0,r1                 ;757
00022c  d810              BHI      |L6.592|
00022e  f8d60094          LDR      r0,[r6,#0x94]         ;757  ; Run_Control
000232  ee000a10          VMOV     s0,r0                 ;757
000236  487e              LDR      r0,|L6.1072|
000238  eef80a40          VCVT.F32.U32 s1,s0                 ;757
00023c  ee800a89          VDIV.F32 s0,s1,s18             ;757
000240  edd00a00          VLDR     s1,[r0,#0]            ;757
000244  ee200a20          VMUL.F32 s0,s0,s1              ;757
000248  ee100a10          VMOV     r0,s0                 ;757
00024c  4550              CMP      r0,r10                ;757
00024e  dd01              BLE      |L6.596|
                  |L6.592|
000250  f8c64094          STR      r4,[r6,#0x94]         ;758  ; Run_Control
                  |L6.596|
000254  f8d60094          LDR      r0,[r6,#0x94]         ;760  ; Run_Control
000258  f64011c4          MOV      r1,#0x9c4             ;760
00025c  4288              CMP      r0,r1                 ;760
00025e  d90d              BLS      |L6.636|
000260  2001              MOVS     r0,#1                 ;762
000262  f7fffffe          BL       C_SW
000266  e00c              B        |L6.642|
                  |L6.616|
000268  e7ff              B        |L6.618|
                  |L6.618|
00026a  486a              LDR      r0,|L6.1044|
00026c  f7fffffe          BL       atoi
000270  f44f717a          MOV      r1,#0x3e8             ;751
000274  4348              MULS     r0,r1,r0              ;751
000276  f8c60094          STR      r0,[r6,#0x94]         ;751  ; Run_Control
00027a  e7d2              B        |L6.546|
                  |L6.636|
00027c  2000              MOVS     r0,#0                 ;764
00027e  f7fffffe          BL       C_SW
                  |L6.642|
000282  f8d60094          LDR      r0,[r6,#0x94]         ;766  ; Run_Control
000286  6130              STR      r0,[r6,#0x10]         ;766  ; Run_Control
000288  6930              LDR      r0,[r6,#0x10]         ;773  ; Run_Control
00028a  ee000a10          VMOV     s0,r0                 ;773
00028e  eef80a40          VCVT.F32.U32 s1,s0                 ;773
000292  ee800a89          VDIV.F32 s0,s1,s18             ;773
000296  ee100a10          VMOV     r0,s0                 ;774
00029a  f7fffffe          BL       __aeabi_f2d
00029e  ec410b10          VMOV     d0,r0,r1              ;774
0002a2  a160              ADR      r1,|L6.1060|
0002a4  ec532b10          VMOV     r2,r3,d0              ;774
0002a8  a803              ADD      r0,sp,#0xc            ;774
0002aa  f7fffffe          BL       __2sprintf
0002ae  a903              ADD      r1,sp,#0xc            ;775
0002b0  9801              LDR      r0,[sp,#4]            ;775
0002b2  f7fffffe          BL       TEXT_SetText
0002b6  f640016d          MOV      r1,#0x86d             ;777
0002ba  f8db0004          LDR      r0,[r11,#4]           ;777  ; load_wind
0002be  f7fffffe          BL       WM_GetDialogItem
0002c2  4606              MOV      r6,r0                 ;777
0002c4  4955              LDR      r1,|L6.1052|
0002c6  4630              MOV      r0,r6                 ;778
0002c8  f7fffffe          BL       TEXT_SetBkColor
0002cc  2100              MOVS     r1,#0                 ;779
0002ce  4630              MOV      r0,r6                 ;779
0002d0  f7fffffe          BL       TEXT_SetTextColor
0002d4  f7fffffe          BL       Write_Limits
0002d8  2017              MOVS     r0,#0x17              ;782
0002da  7028              STRB     r0,[r5,#0]            ;782
0002dc  f8887000          STRB     r7,[r8,#0]            ;783
0002e0  f8894000          STRB     r4,[r9,#0]            ;784
0002e4  e739              B        |L6.346|
                  |L6.742|
0002e6  f89d0008          LDRB     r0,[sp,#8]            ;800
0002ea  f80b4000          STRB     r4,[r11,r0]           ;800
0002ee  f89d0008          LDRB     r0,[sp,#8]            ;798
0002f2  1c40              ADDS     r0,r0,#1              ;798
0002f4  9002              STR      r0,[sp,#8]            ;798
                  |L6.758|
0002f6  f89d0008          LDRB     r0,[sp,#8]            ;798
0002fa  2806              CMP      r0,#6                 ;798
0002fc  d3f3              BCC      |L6.742|
0002fe  2043              MOVS     r0,#0x43              ;802
000300  7028              STRB     r0,[r5,#0]            ;802
000302  e72a              B        |L6.346|
                  |L6.772|
000304  f6401111          MOV      r1,#0x911             ;808
000308  4693              MOV      r11,r2                ;808
00030a  f7fffffe          BL       WM_GetDialogItem
00030e  9001              STR      r0,[sp,#4]            ;808
000310  f06f4170          MVN      r1,#0xf0000000        ;809
000314  9801              LDR      r0,[sp,#4]            ;809
000316  f7fffffe          BL       TEXT_SetBkColor
00031a  f06f417f          MVN      r1,#0xff000000        ;810
00031e  9801              LDR      r0,[sp,#4]            ;810
000320  f7fffffe          BL       TEXT_SetTextColor
000324  f8990000          LDRB     r0,[r9,#0]            ;811  ; dot_flag
000328  b3e8              CBZ      r0,|L6.934|
00032a  f8990000          LDRB     r0,[r9,#0]            ;813  ; dot_flag
00032e  b1a8              CBZ      r0,|L6.860|
000330  9403              STR      r4,[sp,#0xc]          ;814
000332  9404              STR      r4,[sp,#0x10]         ;814
000334  f8992000          LDRB     r2,[r9,#0]            ;815  ; dot_flag
000338  4936              LDR      r1,|L6.1044|
00033a  1cd2              ADDS     r2,r2,#3              ;815
00033c  a803              ADD      r0,sp,#0xc            ;815
00033e  f7fffffe          BL       strncpy
000342  a803              ADD      r0,sp,#0xc            ;816
000344  f7fffffe          BL       __hardfp_atof
000348  ec532b18          VMOV     r2,r3,d8              ;816
00034c  ec510b10          VMOV     r0,r1,d0              ;816
000350  f7fffffe          BL       __aeabi_dmul
000354  f7fffffe          BL       __aeabi_d2uiz
000358  f8c600a4          STR      r0,[r6,#0xa4]         ;816  ; Run_Control
                  |L6.860|
00035c  f8d600a4          LDR      r0,[r6,#0xa4]         ;818  ; Run_Control
000360  4934              LDR      r1,|L6.1076|
000362  4288              CMP      r0,r1                 ;818
000364  d810              BHI      |L6.904|
000366  f8d600a4          LDR      r0,[r6,#0xa4]         ;818  ; Run_Control
00036a  ee000a10          VMOV     s0,r0                 ;818
00036e  4832              LDR      r0,|L6.1080|
000370  eeb80a40          VCVT.F32.U32 s0,s0                 ;818
000374  eec00a09          VDIV.F32 s1,s0,s18             ;818
000378  ed900a00          VLDR     s0,[r0,#0]            ;818
00037c  ee200a80          VMUL.F32 s0,s1,s0              ;818
000380  ee100a10          VMOV     r0,s0                 ;818
000384  4550              CMP      r0,r10                ;818
000386  dd01              BLE      |L6.908|
                  |L6.904|
000388  f8c640a4          STR      r4,[r6,#0xa4]         ;819  ; Run_Control
                  |L6.908|
00038c  f8d600a4          LDR      r0,[r6,#0xa4]         ;821  ; Run_Control
000390  60f0              STR      r0,[r6,#0xc]          ;821  ; Run_Control
000392  68f0              LDR      r0,[r6,#0xc]          ;823  ; Run_Control
000394  ee000a10          VMOV     s0,r0                 ;823
000398  eef80a40          VCVT.F32.U32 s1,s0                 ;823
00039c  ee800a89          VDIV.F32 s0,s1,s18             ;823
0003a0  ee100a10          VMOV     r0,s0                 ;824
0003a4  e000              B        |L6.936|
                  |L6.934|
0003a6  e049              B        |L6.1084|
                  |L6.936|
0003a8  f7fffffe          BL       __aeabi_f2d
0003ac  ec410b10          VMOV     d0,r0,r1              ;824
0003b0  a11c              ADR      r1,|L6.1060|
0003b2  ec532b10          VMOV     r2,r3,d0              ;824
0003b6  a803              ADD      r0,sp,#0xc            ;824
0003b8  f7fffffe          BL       __2sprintf
0003bc  a903              ADD      r1,sp,#0xc            ;825
0003be  9801              LDR      r0,[sp,#4]            ;825
0003c0  f7fffffe          BL       TEXT_SetText
0003c4  f44f6111          MOV      r1,#0x910             ;827
0003c8  f8db0004          LDR      r0,[r11,#4]           ;827  ; load_wind
0003cc  f7fffffe          BL       WM_GetDialogItem
0003d0  4606              MOV      r6,r0                 ;827
0003d2  4912              LDR      r1,|L6.1052|
0003d4  4630              MOV      r0,r6                 ;828
0003d6  f7fffffe          BL       TEXT_SetBkColor
0003da  2100              MOVS     r1,#0                 ;829
0003dc  4630              MOV      r0,r6                 ;829
0003de  f7fffffe          BL       TEXT_SetTextColor
0003e2  f7fffffe          BL       Write_Limits
0003e6  2041              MOVS     r0,#0x41              ;832
0003e8  7028              STRB     r0,[r5,#0]            ;832
0003ea  f8887000          STRB     r7,[r8,#0]            ;833
0003ee  f8894000          STRB     r4,[r9,#0]            ;834
                  |L6.1010|
0003f2  e6b2              B        |L6.346|
                  |L6.1012|
                          DCD      set_sw
                  |L6.1016|
0003f8  00000000          DCFD     0x408f400000000000 ; 1000
0003fc  408f4000
                  |L6.1024|
                          DCD      0x43480000
                  |L6.1028|
                          DCD      bit
                  |L6.1032|
                          DCD      ||.data||
                  |L6.1036|
00040c  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1040|
                          DCD      Run_Control
                  |L6.1044|
                          DCD      set_limit
                  |L6.1048|
                          DCD      dot_flag
                  |L6.1052|
                          DCD      0x00bfffff
                  |L6.1056|
                          DCD      InFlashSave
                  |L6.1060|
000424  252e3366          DCB      "%.3f",0
000428  00      
000429  00                DCB      0
00042a  00                DCB      0
00042b  00                DCB      0
                  |L6.1068|
                          DCD      0x080e0000
                  |L6.1072|
                          DCD      DISS_Voltage
                  |L6.1076|
                          DCD      0x00013880
                  |L6.1080|
                          DCD      DISS_Current
                  |L6.1084|
00043c  4837              LDR      r0,|L6.1308|
00043e  f7fffffe          BL       atoi
000442  f44f717a          MOV      r1,#0x3e8             ;812
000446  4348              MULS     r0,r1,r0              ;812
000448  f8c600a4          STR      r0,[r6,#0xa4]         ;812  ; Run_Control
00044c  e786              B        |L6.860|
                  |L6.1102|
00044e  4d34              LDR      r5,|L6.1312|
000450  f8df80d0          LDR      r8,|L6.1316|
000454  f44f6680          MOV      r6,#0x400             ;847
000458  7829              LDRB     r1,[r5,#0]            ;839  ; flagD
00045a  f3c113c0          UBFX     r3,r1,#7,#1           ;839
00045e  f640110f          MOV      r1,#0x90f             ;844
000462  b19b              CBZ      r3,|L6.1164|
000464  2b01              CMP      r3,#1                 ;839
000466  d1c4              BNE      |L6.1010|
000468  4617              MOV      r7,r2                 ;844
00046a  f7fffffe          BL       WM_GetDialogItem
00046e  a12e              ADR      r1,|L6.1320|
000470  f7fffffe          BL       TEXT_SetText
000474  6828              LDR      r0,[r5,#0]            ;846  ; flagD
000476  f0200080          BIC      r0,r0,#0x80           ;846
00047a  6028              STR      r0,[r5,#0]            ;846  ; flagD
00047c  4631              MOV      r1,r6                 ;847
00047e  4640              MOV      r0,r8                 ;847
000480  f7fffffe          BL       GPIO_SetBits
000484  70bc              STRB     r4,[r7,#2]            ;848
000486  f7fffffe          BL       Write_LOAD
00048a  e666              B        |L6.346|
                  |L6.1164|
00048c  4614              MOV      r4,r2                 ;855
00048e  f7fffffe          BL       WM_GetDialogItem
000492  a126              ADR      r1,|L6.1324|
000494  f7fffffe          BL       TEXT_SetText
000498  6828              LDR      r0,[r5,#0]            ;857  ; flagD
00049a  f0400080          ORR      r0,r0,#0x80           ;857
00049e  6028              STR      r0,[r5,#0]            ;857  ; flagD
0004a0  4631              MOV      r1,r6                 ;858
0004a2  4640              MOV      r0,r8                 ;858
0004a4  f7fffffe          BL       GPIO_ResetBits
0004a8  70a7              STRB     r7,[r4,#2]            ;859
0004aa  f7fffffe          BL       Write_LOAD
0004ae  e654              B        |L6.346|
                  |L6.1200|
0004b0  4651              MOV      r1,r10                ;869
0004b2  4617              MOV      r7,r2                 ;869
0004b4  f7fffffe          BL       WM_GetDialogItem
0004b8  4680              MOV      r8,r0                 ;869
0004ba  f06f4170          MVN      r1,#0xf0000000        ;870
0004be  4640              MOV      r0,r8                 ;870
0004c0  f7fffffe          BL       TEXT_SetBkColor
0004c4  f06f417f          MVN      r1,#0xff000000        ;871
0004c8  4640              MOV      r0,r8                 ;871
0004ca  f7fffffe          BL       TEXT_SetTextColor
0004ce  4631              MOV      r1,r6                 ;873
0004d0  6878              LDR      r0,[r7,#4]            ;873  ; load_wind
0004d2  f7fffffe          BL       WM_GetDialogItem
0004d6  4606              MOV      r6,r0                 ;873
0004d8  4915              LDR      r1,|L6.1328|
0004da  4630              MOV      r0,r6                 ;874
0004dc  f7fffffe          BL       TEXT_SetBkColor
0004e0  2100              MOVS     r1,#0                 ;875
0004e2  4630              MOV      r0,r6                 ;875
0004e4  f7fffffe          BL       TEXT_SetTextColor
0004e8  9402              STR      r4,[sp,#8]            ;876
0004ea  e007              B        |L6.1276|
                  |L6.1260|
0004ec  f89d0008          LDRB     r0,[sp,#8]            ;878
0004f0  f80b4000          STRB     r4,[r11,r0]           ;878
0004f4  f89d0008          LDRB     r0,[sp,#8]            ;876
0004f8  1c40              ADDS     r0,r0,#1              ;876
0004fa  9002              STR      r0,[sp,#8]            ;876
                  |L6.1276|
0004fc  f89d0008          LDRB     r0,[sp,#8]            ;876
000500  2806              CMP      r0,#6                 ;876
000502  d3f3              BCC      |L6.1260|
000504  2056              MOVS     r0,#0x56              ;880
000506  7028              STRB     r0,[r5,#0]            ;880
000508  e627              B        |L6.346|
                  |L6.1290|
00050a  4804              LDR      r0,|L6.1308|
00050c  f7fffffe          BL       atoi
000510  f44f717a          MOV      r1,#0x3e8             ;890
000514  4348              MULS     r0,r1,r0              ;890
000516  6130              STR      r0,[r6,#0x10]         ;890  ; InFlashSave
000518  e5e9              B        |L6.238|
;;;912    void DEL_LOAD(void)
                          ENDP

00051a  0000              DCW      0x0000
                  |L6.1308|
                          DCD      set_limit
                  |L6.1312|
                          DCD      flagD
                  |L6.1316|
                          DCD      0x40020800
                  |L6.1320|
000528  435600            DCB      "CV",0
00052b  00                DCB      0
                  |L6.1324|
00052c  434300            DCB      "CC",0
00052f  00                DCB      0
                  |L6.1328|
                          DCD      0x00bfffff

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;610    
;;;611    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;612      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2117              MOVS     r1,#0x17
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;613      return load_wind;
;;;614    }
00001c  bd1c              POP      {r2-r4,pc}
;;;615    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;99     
;;;100    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b06          VPUSH    {d8-d10}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;101      WM_HWIN hItem;
;;;102      int     NCode;
;;;103      int     Id;
;;;104      char    buf[6];
;;;105      static vu8 status_flash;
;;;106      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4ffe              LDR      r7,|L8.1032|
00000e  6938              LDR      r0,[r7,#0x10]  ; Run_Control
000010  ee000a10          VMOV     s0,r0
000014  eeb80a40          VCVT.F32.U32 s0,s0
000018  eddf9afc          VLDR     s19,|L8.1036|
00001c  ee80aa29          VDIV.F32 s20,s0,s19
;;;107      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000020  68f8              LDR      r0,[r7,#0xc]  ; Run_Control
000022  ee000a10          VMOV     s0,r0
000026  eeb80a40          VCVT.F32.U32 s0,s0
00002a  ee809a29          VDIV.F32 s18,s0,s19
;;;108      static float olvbuff,oldv;
;;;109      static float testc1,testc2,testres;
;;;110      static vu8 testflag;
;;;111      // USER START (Optionally insert additional variables)
;;;112      // USER END
;;;113    
;;;114      switch (pMsg->MsgId) {
;;;115    
;;;116    	case WM_PAINT://无效化重绘
;;;117    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;118            GUI_FillRect(0,25,480,26);//画一条实线
;;;119            GUI_SetColor(GUI_ORANGE);
;;;120            GUI_SetFont(&GUI_Fontsymbol);
;;;121            GUI_UC_SetEncodeUTF8();
;;;122            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;123            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;124            GUI_SetColor(GUI_WHITE);
;;;125            GUI_SetFont(&GUI_FontHZ20S);
;;;126            GUI_UC_SetEncodeUTF8();
;;;127            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;128            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;129            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;130    //         GUI_SetFont(&GUI_FontD24x32);//
;;;131    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;132    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;133    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;134    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;135            GUI_SetFont(&GUI_Font24_1);
;;;136            GUI_DispStringAt("A",450,75);
;;;137            GUI_DispStringAt("V",450,100.);
;;;138            GUI_DispStringAt("V",450,150);
;;;139        
;;;140            GUI_SetFont(&GUI_FontEN40);
;;;141            GUI_SetColor(GUI_LIGHTGRAY);
00002e  f8df83e0          LDR      r8,|L8.1040|
;;;142            GUI_DispStringAt("C:", 28, 190);
;;;143            GUI_SetColor(GUI_LIGHTGRAY);
;;;144            GUI_DispStringAt("m", 217, 196);
;;;145            GUI_DispStringAt("AH", 238, 187);
;;;146            
;;;147            GUI_SetColor(GUI_GREEN);
;;;148            GUI_SetFont(&GUI_Fontunit);
;;;149            GUI_DispStringAt("°",342, 2);
;;;150            GUI_SetFont(&GUI_Font24_1);
;;;151            GUI_DispStringAt("C",350, 2);
;;;152            DrawLock();
;;;153    //        GUI_SetColor(GUI_WHITE);
;;;154    //        GUI_SetFont(&GUI_Fontset_font);
;;;155    //        GUI_DispStringAt("过放电压",290, 150);
;;;156    		break;
;;;157    	case WM_KEY://接受按键消息来处理按键功能
;;;158    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;159    		{ 
;;;160    			case GUI_KEY_TAB:
;;;161    
;;;162    			break;
;;;163    			
;;;164    			case GUI_KEY_ENTER:
;;;165    			break;
;;;166    		}
;;;167    	break;
;;;168    		
;;;169    	case WM_TIMER://定时模块消息
;;;170    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;171    	{
;;;172            lockstat2 = lockstat1;
;;;173            lockstat1 = lock;
;;;174            
;;;175    //        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;176    //        {
;;;177    //            testflag = 1;
;;;178    //        }else{
;;;179    //            testflag = 0;
;;;180    //            testc1 = testc2 = 0;
;;;181    //        }
;;;182    //        if(testflag == 1)
;;;183    //        {
;;;184    //            testc2 = testc1;
;;;185    //            testc1 = DISS_Current;
;;;186    //            if(testc1 < testc2)
;;;187    //            {
;;;188    //                testres = testc2;
;;;189    //                testflag = 0;
;;;190    //                testc1 = testc2 = 0;
;;;191    //            }
;;;192    //        }
;;;193            
;;;194            
;;;195            if(lockstat1 != lockstat2)
;;;196            {
;;;197                WM_InvalidateWindow(load_wind);
;;;198            }
;;;199    //         if(clear_flag3 == 1)
;;;200    //         {
;;;201    		
;;;202                if(DISS_Voltage < 0.3)
;;;203                {
;;;204                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;205                    sprintf(buf,"%.3f",0.000);       
;;;206                    TEXT_SetText(hItem,buf);
;;;207                }else{hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;209                    sprintf(buf,"%.3f",disloadv);       
;;;210                    TEXT_SetText(hItem,buf);
;;;211                }
;;;212    //         }else{
;;;213    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;214    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;215    //             TEXT_SetText(hItem,buf);
;;;216    //         }
;;;217            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;218                SET_Current_Laod = 0;
;;;219                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;220                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;221                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;222                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;223                    SET_Current_Laod = 0;
;;;224                }
;;;225                dis_load_c = (float)SET_Current_Laod/1000;
;;;226                sprintf(buf,"%.3f",dis_load_c);
;;;227                TEXT_SetText(hItem,buf);
;;;228            }
;;;229            
;;;230                
;;;231            
;;;232    //        test_load();
;;;233            
;;;234            if(load_sw == load_on)
;;;235            {
;;;236                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;237                {
;;;238                    alert_flag = 1;
;;;239                }else{
;;;240                    alert_flag = 0;
;;;241                }
;;;242                battery_c = (int)bc_raw;
;;;243                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;244                sprintf(buf,"%05d",battery_c);    
;;;245                TEXT_SetText(hItem,buf);
;;;246                
;;;247                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;248                sprintf(buf,"%.3f",DISS_Current);        
;;;249                TEXT_SetText(hItem,buf);
;;;250                if(status_flash == 0){
;;;251                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;252                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;253                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;254                    GUI_UC_SetEncodeUTF8();        
;;;255                    TEXT_SetText(hItem,"放电中");
;;;256                    status_flash = 1;
;;;257                }else{
;;;258                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;259                    TEXT_SetText(hItem,"");
;;;260                    status_flash = 0;
;;;261                }
;;;262                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;263    			{
;;;264    				Flag_Swtich_ON=0;
;;;265                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;266                    mode_sw = 0;
;;;267                    load_sw = load_off;
;;;268    			}
;;;269                
;;;270    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;271    //            {
;;;272    //                Flag_Swtich_ON=0;
;;;273    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;274    //                mode_sw = 0;
;;;275    //                load_sw = load_off;
;;;276    //                overloadv = olvbuff;
;;;277    //                olvbuff= 0;
;;;278    //            }else{
;;;279    //                olvbuff = DISS_Voltage;
;;;280    //                overloadv = 0;
;;;281    //            }
;;;282                
;;;283            }else{
;;;284                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;285                TEXT_SetText(hItem,"");
;;;286                
;;;287                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;288                sprintf(buf,"%.3f",0.000);        
;;;289                TEXT_SetText(hItem,buf);
;;;290            }
;;;291    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;292    //        sprintf(buf,"%.3f",overloadv);
;;;293    //        TEXT_SetText(hItem,buf);
;;;294            
;;;295            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;296            sprintf(buf,"%.1f",temp);
000032  f8dfb3e0          LDR      r11,|L8.1044|
000036  f6400a91          MOV      r10,#0x891            ;204
00003a  ed9f8bf7          VLDR     d8,|L8.1048|
00003e  6820              LDR      r0,[r4,#0]            ;114
000040  4df7              LDR      r5,|L8.1056|
000042  f44f467f          MOV      r6,#0xff00            ;147
000046  f06f497f          MVN      r9,#0xff000000        ;117
00004a  281d              CMP      r0,#0x1d              ;114
00004c  d07e              BEQ      |L8.332|
00004e  dc04              BGT      |L8.90|
000050  280e              CMP      r0,#0xe               ;114
000052  d00b              BEQ      |L8.108|
000054  280f              CMP      r0,#0xf               ;114
000056  d106              BNE      |L8.102|
000058  e00d              B        |L8.118|
                  |L8.90|
00005a  2826              CMP      r0,#0x26              ;114
00005c  d077              BEQ      |L8.334|
00005e  f5a07080          SUB      r0,r0,#0x100          ;114
000062  3813              SUBS     r0,r0,#0x13           ;114
000064  d07d              BEQ      |L8.354|
                  |L8.102|
;;;297            TEXT_SetText(hItem,buf);
;;;298            
;;;299    		WM_RestartTimer(pMsg->Data.v, 50);
;;;300    	}
;;;301    	break;
;;;302    	
;;;303        case WM_INIT_DIALOG://重绘外观
;;;304        //
;;;305        // Initialization of 'Window'
;;;306        //
;;;307            hItem = pMsg->hWin;
;;;308            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;309    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;310        //
;;;311        // Initialization of 'Button'
;;;312        //
;;;313    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;314    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;315    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;316    // 		GUI_UC_SetEncodeUTF8();
;;;317    // 		BUTTON_SetText(hItem,"充放电");
;;;318        //
;;;319        // Initialization of 'Button'
;;;320        //
;;;321            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;322    //		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;323    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;324    		GUI_UC_SetEncodeUTF8();
;;;325            BUTTON_SetText(hItem, "内阻测试");
;;;326        //
;;;327        // Initialization of 'Button'
;;;328        //
;;;329            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;330            BUTTON_SetPressed(hItem,1);
;;;331    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;332    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;333    		GUI_UC_SetEncodeUTF8();
;;;334            BUTTON_SetText(hItem, "程控负载");
;;;335        //
;;;336        // Initialization of 'Button'
;;;337        //
;;;338            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;339    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;340    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;341    		GUI_UC_SetEncodeUTF8();
;;;342            BUTTON_SetText(hItem, "程控电源");
;;;343        //
;;;344        // Initialization of 'Button'
;;;345        //
;;;346            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;347    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;348    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;349    		GUI_UC_SetEncodeUTF8();
;;;350            BUTTON_SetText(hItem, "充放电");
;;;351        //
;;;352        // Initialization of 'Button'
;;;353        //
;;;354            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;355    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;356    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;357    		GUI_UC_SetEncodeUTF8();
;;;358            BUTTON_SetText(hItem, "曲线");
;;;359    		
;;;360    		
;;;361    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;362    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;363            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;364    		GUI_UC_SetEncodeUTF8();
;;;365    		TEXT_SetText(hItem,"V:");
;;;366    		
;;;367    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;368    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;369            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;370    		GUI_UC_SetEncodeUTF8();
;;;371    		TEXT_SetText(hItem,"I:");
;;;372            
;;;373            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;374    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;375            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;376    		GUI_UC_SetEncodeUTF8();
;;;377    		TEXT_SetText(hItem,"V");
;;;378    		
;;;379    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;380    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;381            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;382    		GUI_UC_SetEncodeUTF8();
;;;383    		TEXT_SetText(hItem,"A");
;;;384            
;;;385            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;386    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;387            TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;388            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;389    		GUI_UC_SetEncodeUTF8();
;;;390    		TEXT_SetText(hItem,"负载电流");
;;;391            
;;;392            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;393            sprintf(buf,"%.3f",dis_load_c);
;;;394    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;395            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;396    		GUI_UC_SetEncodeUTF8();     
;;;397    		TEXT_SetText(hItem,buf);
;;;398            
;;;399            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;400            sprintf(buf,"%.3f",load_cutoffv);
;;;401    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;402            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;403    		GUI_UC_SetEncodeUTF8();     
;;;404    		TEXT_SetText(hItem,buf);
;;;405            
;;;406            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;407            sprintf(buf,"%.3f",0.000);
;;;408    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;409            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;410    		GUI_UC_SetEncodeUTF8();        
;;;411    		TEXT_SetText(hItem,buf);
;;;412            
;;;413            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;414            sprintf(buf,"%.3f",0.000);
;;;415    		TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;416            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;417    		GUI_UC_SetEncodeUTF8();        
;;;418    		TEXT_SetText(hItem,buf);
;;;419            
;;;420            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;421            sprintf(buf,"%05d",0);
;;;422            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;423            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;424            GUI_UC_SetEncodeUTF8();        
;;;425            TEXT_SetText(hItem,buf);
;;;426            
;;;427            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;428            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;429            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;430            GUI_UC_SetEncodeUTF8();        
;;;431            TEXT_SetText(hItem,"负载模式");
;;;432    		
;;;433    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;434            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;435            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;436            GUI_UC_SetEncodeUTF8();        
;;;437            TEXT_SetText(hItem,"截止电压");
;;;438            
;;;439            if(load_mode == 1)
;;;440            {
;;;441                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;442                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;443                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;444                GUI_UC_SetEncodeUTF8();
;;;445                GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;446                TEXT_SetText(hItem,"CC");
;;;447                flag_Load_CC = 1;
;;;448            }else if(load_mode == 0){
;;;449                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;450                TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;451                TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;452                GUI_UC_SetEncodeUTF8();  
;;;453                GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;454                TEXT_SetText(hItem,"CV");
;;;455                flag_Load_CC = 0;
;;;456            }
;;;457            
;;;458            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;459    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;460            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;461    		GUI_UC_SetEncodeUTF8();
;;;462    		TEXT_SetText(hItem,"负载电压");
;;;463            
;;;464            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;465            sprintf(buf,"%.3f",dis_load_v);
;;;466    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;467            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;468    		GUI_UC_SetEncodeUTF8();     
;;;469    		TEXT_SetText(hItem,buf);
;;;470            
;;;471            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;472            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;473            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;474            sprintf(buf,"%.1f",temp);
;;;475            TEXT_SetText(hItem,buf);
;;;476            
;;;477    
;;;478        // USER START (Optionally insert additional code for further widget initialization)
;;;479        // USER END
;;;480        break;
;;;481      case WM_NOTIFY_PARENT:
;;;482        Id    = WM_GetId(pMsg->hWinSrc);
;;;483        NCode = pMsg->Data.v;
;;;484        switch(Id) {
;;;485        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;486          switch(NCode) {
;;;487          case WM_NOTIFICATION_CLICKED:
;;;488            // USER START (Optionally insert code for reacting on notification message)
;;;489            // USER END
;;;490            break;
;;;491          case WM_NOTIFICATION_RELEASED:
;;;492            // USER START (Optionally insert code for reacting on notification message)
;;;493            // USER END
;;;494            break;
;;;495          // USER START (Optionally insert additional code for further notification handling)
;;;496          // USER END
;;;497          }
;;;498          break;
;;;499        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;500          switch(NCode) {
;;;501          case WM_NOTIFICATION_CLICKED:
;;;502            // USER START (Optionally insert code for reacting on notification message)
;;;503            // USER END
;;;504            break;
;;;505          case WM_NOTIFICATION_RELEASED:
;;;506    				
;;;507            // USER START (Optionally insert code for reacting on notification message)
;;;508            // USER END
;;;509            break;
;;;510          // USER START (Optionally insert additional code for further notification handling)
;;;511          // USER END
;;;512          }
;;;513          break;
;;;514        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;515          switch(NCode) {
;;;516          case WM_NOTIFICATION_CLICKED:
;;;517            // USER START (Optionally insert code for reacting on notification message)
;;;518            // USER END
;;;519            break;
;;;520          case WM_NOTIFICATION_RELEASED:
;;;521            // USER START (Optionally insert code for reacting on notification message)
;;;522            // USER END
;;;523            break;
;;;524          // USER START (Optionally insert additional code for further notification handling)
;;;525          // USER END
;;;526          }
;;;527          break;
;;;528        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;529          switch(NCode) {
;;;530          case WM_NOTIFICATION_CLICKED:
;;;531            // USER START (Optionally insert code for reacting on notification message)
;;;532            // USER END
;;;533            break;
;;;534          case WM_NOTIFICATION_RELEASED:
;;;535            // USER START (Optionally insert code for reacting on notification message)
;;;536            // USER END
;;;537            break;
;;;538          // USER START (Optionally insert additional code for further notification handling)
;;;539          // USER END
;;;540          }
;;;541          break;
;;;542        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;543          switch(NCode) {
;;;544          case WM_NOTIFICATION_CLICKED:
;;;545            // USER START (Optionally insert code for reacting on notification message)
;;;546            // USER END
;;;547            break;
;;;548          case WM_NOTIFICATION_RELEASED:
;;;549            // USER START (Optionally insert code for reacting on notification message)
;;;550            // USER END
;;;551            break;
;;;552          // USER START (Optionally insert additional code for further notification handling)
;;;553          // USER END
;;;554          }
;;;555          break;
;;;556        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;557          switch(NCode) {
;;;558          case WM_NOTIFICATION_CLICKED:
;;;559            // USER START (Optionally insert code for reacting on notification message)
;;;560            // USER END
;;;561            break;
;;;562          case WM_NOTIFICATION_RELEASED:
;;;563            // USER START (Optionally insert code for reacting on notification message)
;;;564            // USER END
;;;565            break;
;;;566          // USER START (Optionally insert additional code for further notification handling)
;;;567          // USER END
;;;568          }
;;;569          break;
;;;570        // USER START (Optionally insert additional code for further Ids)
;;;571        // USER END
;;;572        }
;;;573        break;
;;;574      // USER START (Optionally insert additional message handling)
;;;575      // USER END
;;;576      default:
;;;577        WM_DefaultProc(pMsg);
000066  4620              MOV      r0,r4
000068  f7fffffe          BL       WM_DefaultProc
                  |L8.108|
;;;578        break;
;;;579      }
;;;580    }
00006c  b003              ADD      sp,sp,#0xc
00006e  ecbd8b06          VPOP     {d8-d10}
000072  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.118|
000076  4648              MOV      r0,r9                 ;117
000078  f7fffffe          BL       GUI_SetColor
00007c  231a              MOVS     r3,#0x1a              ;118
00007e  f44f72f0          MOV      r2,#0x1e0             ;118
000082  2119              MOVS     r1,#0x19              ;118
000084  2000              MOVS     r0,#0                 ;118
000086  f7fffffe          BL       GUI_FillRect
00008a  f24a50ff          MOV      r0,#0xa5ff            ;119
00008e  f7fffffe          BL       GUI_SetColor
000092  48e4              LDR      r0,|L8.1060|
000094  f7fffffe          BL       GUI_SetFont
000098  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00009c  2002              MOVS     r0,#2                 ;122
00009e  f7fffffe          BL       GUI_SetTextMode
0000a2  2201              MOVS     r2,#1                 ;123
0000a4  2105              MOVS     r1,#5                 ;123
0000a6  a0e0              ADR      r0,|L8.1064|
0000a8  f7fffffe          BL       GUI_DispStringAt
0000ac  4648              MOV      r0,r9                 ;124
0000ae  f7fffffe          BL       GUI_SetColor
0000b2  48df              LDR      r0,|L8.1072|
0000b4  f7fffffe          BL       GUI_SetFont
0000b8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000bc  2002              MOVS     r0,#2                 ;127
0000be  f7fffffe          BL       GUI_SetTextMode
0000c2  2203              MOVS     r2,#3                 ;128
0000c4  2182              MOVS     r1,#0x82              ;128
0000c6  a0db              ADR      r0,|L8.1076|
0000c8  f7fffffe          BL       GUI_DispStringAt
0000cc  4648              MOV      r0,r9                 ;129
0000ce  f7fffffe          BL       GUI_SetColor
0000d2  48dc              LDR      r0,|L8.1092|
0000d4  f7fffffe          BL       GUI_SetFont
0000d8  f44f74e1          MOV      r4,#0x1c2             ;136
0000dc  224b              MOVS     r2,#0x4b              ;136
0000de  4621              MOV      r1,r4                 ;136
0000e0  a0d9              ADR      r0,|L8.1096|
0000e2  f7fffffe          BL       GUI_DispStringAt
0000e6  2264              MOVS     r2,#0x64              ;137
0000e8  4621              MOV      r1,r4                 ;137
0000ea  a0d8              ADR      r0,|L8.1100|
0000ec  f7fffffe          BL       GUI_DispStringAt
0000f0  2296              MOVS     r2,#0x96              ;138
0000f2  4621              MOV      r1,r4                 ;138
0000f4  a0d5              ADR      r0,|L8.1100|
0000f6  f7fffffe          BL       GUI_DispStringAt
0000fa  48d5              LDR      r0,|L8.1104|
0000fc  f7fffffe          BL       GUI_SetFont
000100  4640              MOV      r0,r8                 ;141
000102  f7fffffe          BL       GUI_SetColor
000106  22be              MOVS     r2,#0xbe              ;142
000108  211c              MOVS     r1,#0x1c              ;142
00010a  a0d2              ADR      r0,|L8.1108|
00010c  f7fffffe          BL       GUI_DispStringAt
000110  4640              MOV      r0,r8                 ;143
000112  f7fffffe          BL       GUI_SetColor
000116  22c4              MOVS     r2,#0xc4              ;144
000118  21d9              MOVS     r1,#0xd9              ;144
00011a  a0cf              ADR      r0,|L8.1112|
00011c  f7fffffe          BL       GUI_DispStringAt
000120  22bb              MOVS     r2,#0xbb              ;145
000122  21ee              MOVS     r1,#0xee              ;145
000124  a0cd              ADR      r0,|L8.1116|
000126  f7fffffe          BL       GUI_DispStringAt
00012a  4630              MOV      r0,r6                 ;147
00012c  f7fffffe          BL       GUI_SetColor
000130  48cb              LDR      r0,|L8.1120|
000132  f7fffffe          BL       GUI_SetFont
000136  2202              MOVS     r2,#2                 ;149
000138  f44f71ab          MOV      r1,#0x156             ;149
00013c  a0c9              ADR      r0,|L8.1124|
00013e  f7fffffe          BL       GUI_DispStringAt
000142  48c0              LDR      r0,|L8.1092|
000144  f7fffffe          BL       GUI_SetFont
000148  2202              MOVS     r2,#2                 ;151
00014a  e002              B        |L8.338|
                  |L8.332|
00014c  e142              B        |L8.980|
                  |L8.334|
00014e  e3b9              B        |L8.2244|
000150  e007              B        |L8.354|
                  |L8.338|
000152  f44f71af          MOV      r1,#0x15e             ;151
000156  a0c4              ADR      r0,|L8.1128|
000158  f7fffffe          BL       GUI_DispStringAt
00015c  f7fffffe          BL       DrawLock
                  |L8.352|
000160  e784              B        |L8.108|
                  |L8.354|
000162  68e0              LDR      r0,[r4,#0xc]          ;170
000164  f7fffffe          BL       WM_GetTimerId
000168  2802              CMP      r0,#2                 ;170
00016a  d1f9              BNE      |L8.352|
00016c  4abf              LDR      r2,|L8.1132|
00016e  49c0              LDR      r1,|L8.1136|
000170  7810              LDRB     r0,[r2,#0]            ;172  ; lockstat1
000172  7008              STRB     r0,[r1,#0]            ;172
000174  49bf              LDR      r1,|L8.1140|
000176  7809              LDRB     r1,[r1,#0]            ;173  ; lock
000178  7011              STRB     r1,[r2,#0]            ;173
00017a  4281              CMP      r1,r0                 ;195
00017c  d002              BEQ      |L8.388|
00017e  6868              LDR      r0,[r5,#4]            ;197  ; load_wind
000180  f7fffffe          BL       WM_InvalidateWindow
                  |L8.388|
000184  f8df82f0          LDR      r8,|L8.1144|
000188  49bc              LDR      r1,|L8.1148|
00018a  f8d80000          LDR      r0,[r8,#0]            ;202  ; DISS_Voltage
00018e  4288              CMP      r0,r1                 ;202
000190  da0f              BGE      |L8.434|
000192  4651              MOV      r1,r10                ;204
000194  6860              LDR      r0,[r4,#4]            ;204
000196  f7fffffe          BL       WM_GetDialogItem
00019a  4606              MOV      r6,r0                 ;204
00019c  ec532b18          VMOV     r2,r3,d8              ;205
0001a0  a1b7              ADR      r1,|L8.1152|
0001a2  4668              MOV      r0,sp                 ;205
0001a4  f7fffffe          BL       __2sprintf
0001a8  4669              MOV      r1,sp                 ;206
0001aa  4630              MOV      r0,r6                 ;206
0001ac  f7fffffe          BL       TEXT_SetText
0001b0  e014              B        |L8.476|
                  |L8.434|
0001b2  4651              MOV      r1,r10                ;208
0001b4  6860              LDR      r0,[r4,#4]            ;208
0001b6  f7fffffe          BL       WM_GetDialogItem
0001ba  4606              MOV      r6,r0                 ;208
0001bc  48b2              LDR      r0,|L8.1160|
0001be  6800              LDR      r0,[r0,#0]            ;209  ; disloadv
0001c0  f7fffffe          BL       __aeabi_f2d
0001c4  ec410b10          VMOV     d0,r0,r1              ;209
0001c8  a1ad              ADR      r1,|L8.1152|
0001ca  ec532b10          VMOV     r2,r3,d0              ;209
0001ce  4668              MOV      r0,sp                 ;209
0001d0  f7fffffe          BL       __2sprintf
0001d4  4669              MOV      r1,sp                 ;210
0001d6  4630              MOV      r0,r6                 ;210
0001d8  f7fffffe          BL       TEXT_SetText
                  |L8.476|
0001dc  6938              LDR      r0,[r7,#0x10]         ;217  ; Run_Control
0001de  f8dfa2ac          LDR      r10,|L8.1164|
0001e2  ee000a10          VMOV     s0,r0                 ;217
0001e6  2600              MOVS     r6,#0                 ;217
0001e8  eeb80a40          VCVT.F32.U32 s0,s0                 ;217
0001ec  eec00a29          VDIV.F32 s1,s0,s19             ;217
0001f0  ed980a00          VLDR     s0,[r8,#0]            ;217
0001f4  ee200a80          VMUL.F32 s0,s1,s0              ;217
0001f8  ee100a10          VMOV     r0,s0                 ;217
0001fc  4550              CMP      r0,r10                ;217
0001fe  dd3b              BLE      |L8.632|
000200  613e              STR      r6,[r7,#0x10]         ;218  ; Run_Control
000202  f640016e          MOV      r1,#0x86e             ;219
000206  6868              LDR      r0,[r5,#4]            ;219  ; load_wind
000208  f7fffffe          BL       WM_GetDialogItem
00020c  9002              STR      r0,[sp,#8]            ;219
00020e  f06f4170          MVN      r1,#0xf0000000        ;220
000212  9802              LDR      r0,[sp,#8]            ;220
000214  f7fffffe          BL       TEXT_SetBkColor
000218  4649              MOV      r1,r9                 ;221
00021a  9802              LDR      r0,[sp,#8]            ;221
00021c  f7fffffe          BL       TEXT_SetTextColor
000220  6938              LDR      r0,[r7,#0x10]         ;222  ; Run_Control
000222  f24d61d8          MOV      r1,#0xd6d8            ;222
000226  4288              CMP      r0,r1                 ;222
000228  d80e              BHI      |L8.584|
00022a  6938              LDR      r0,[r7,#0x10]         ;222  ; Run_Control
00022c  ee000a10          VMOV     s0,r0                 ;222
000230  eef80a40          VCVT.F32.U32 s1,s0                 ;222
000234  ee800aa9          VDIV.F32 s0,s1,s19             ;222
000238  edd80a00          VLDR     s1,[r8,#0]            ;222
00023c  ee200a20          VMUL.F32 s0,s0,s1              ;222
000240  ee100a10          VMOV     r0,s0                 ;222
000244  4550              CMP      r0,r10                ;222
000246  dd00              BLE      |L8.586|
                  |L8.584|
000248  613e              STR      r6,[r7,#0x10]         ;223  ; Run_Control
                  |L8.586|
00024a  6938              LDR      r0,[r7,#0x10]         ;225  ; Run_Control
00024c  ee000a10          VMOV     s0,r0                 ;225
000250  eef80a40          VCVT.F32.U32 s1,s0                 ;225
000254  ee800aa9          VDIV.F32 s0,s1,s19             ;225
000258  ee100a10          VMOV     r0,s0                 ;226
00025c  f7fffffe          BL       __aeabi_f2d
000260  ec410b10          VMOV     d0,r0,r1              ;226
000264  a186              ADR      r1,|L8.1152|
000266  ec532b10          VMOV     r2,r3,d0              ;226
00026a  4668              MOV      r0,sp                 ;226
00026c  f7fffffe          BL       __2sprintf
000270  4669              MOV      r1,sp                 ;227
000272  9802              LDR      r0,[sp,#8]            ;227
000274  f7fffffe          BL       TEXT_SetText
                  |L8.632|
000278  7828              LDRB     r0,[r5,#0]            ;234  ; load_sw
00027a  2801              CMP      r0,#1                 ;234
00027c  d032              BEQ      |L8.740|
00027e  f6400196          MOV      r1,#0x896             ;284
000282  6860              LDR      r0,[r4,#4]            ;284
000284  f7fffffe          BL       WM_GetDialogItem
000288  a16d              ADR      r1,|L8.1088|
00028a  f7fffffe          BL       TEXT_SetText
00028e  f6400192          MOV      r1,#0x892             ;287
000292  6860              LDR      r0,[r4,#4]            ;287
000294  f7fffffe          BL       WM_GetDialogItem
000298  4605              MOV      r5,r0                 ;287
00029a  ec532b18          VMOV     r2,r3,d8              ;288
00029e  a178              ADR      r1,|L8.1152|
0002a0  4668              MOV      r0,sp                 ;288
0002a2  f7fffffe          BL       __2sprintf
0002a6  4669              MOV      r1,sp                 ;289
0002a8  4628              MOV      r0,r5                 ;289
0002aa  f7fffffe          BL       TEXT_SetText
                  |L8.686|
0002ae  f6401112          MOV      r1,#0x912             ;295
0002b2  6860              LDR      r0,[r4,#4]            ;295
0002b4  f7fffffe          BL       WM_GetDialogItem
0002b8  4605              MOV      r5,r0                 ;295
0002ba  f8db0000          LDR      r0,[r11,#0]           ;296  ; temp
0002be  f7fffffe          BL       __aeabi_f2d
0002c2  ec410b10          VMOV     d0,r0,r1              ;296
0002c6  a172              ADR      r1,|L8.1168|
0002c8  ec532b10          VMOV     r2,r3,d0              ;296
0002cc  4668              MOV      r0,sp                 ;296
0002ce  f7fffffe          BL       __2sprintf
0002d2  4669              MOV      r1,sp                 ;297
0002d4  4628              MOV      r0,r5                 ;297
0002d6  f7fffffe          BL       TEXT_SetText
0002da  2132              MOVS     r1,#0x32              ;299
0002dc  68e0              LDR      r0,[r4,#0xc]          ;299
0002de  f7fffffe          BL       WM_RestartTimer
                  |L8.738|
0002e2  e6c3              B        |L8.108|
                  |L8.740|
0002e4  6939              LDR      r1,[r7,#0x10]         ;236  ; Run_Control
0002e6  f2475230          MOV      r2,#0x7530            ;236
0002ea  486b              LDR      r0,|L8.1176|
0002ec  2701              MOVS     r7,#1                 ;123
0002ee  4291              CMP      r1,r2                 ;236
0002f0  d301              BCC      |L8.758|
0002f2  7007              STRB     r7,[r0,#0]            ;238
0002f4  e000              B        |L8.760|
                  |L8.758|
0002f6  7006              STRB     r6,[r0,#0]            ;240
                  |L8.760|
0002f8  4868              LDR      r0,|L8.1180|
0002fa  f8df91a4          LDR      r9,|L8.1184|
0002fe  ed900a00          VLDR     s0,[r0,#0]            ;242
000302  eebd0ac0          VCVT.S32.F32 s0,s0                 ;242
000306  ee100a10          VMOV     r0,s0                 ;242
00030a  f8a90000          STRH     r0,[r9,#0]            ;242
00030e  f640110d          MOV      r1,#0x90d             ;243
000312  6860              LDR      r0,[r4,#4]            ;243
000314  f7fffffe          BL       WM_GetDialogItem
000318  4682              MOV      r10,r0                ;243
00031a  f8b92000          LDRH     r2,[r9,#0]            ;244  ; battery_c
00031e  a161              ADR      r1,|L8.1188|
000320  4668              MOV      r0,sp                 ;244
000322  f7fffffe          BL       __2sprintf
000326  4669              MOV      r1,sp                 ;245
000328  4650              MOV      r0,r10                ;245
00032a  f7fffffe          BL       TEXT_SetText
00032e  f6400192          MOV      r1,#0x892             ;247
000332  6860              LDR      r0,[r4,#4]            ;247
000334  f7fffffe          BL       WM_GetDialogItem
000338  4681              MOV      r9,r0                 ;247
00033a  485c              LDR      r0,|L8.1196|
00033c  6800              LDR      r0,[r0,#0]            ;248  ; DISS_Current
00033e  f7fffffe          BL       __aeabi_f2d
000342  ec410b10          VMOV     d0,r0,r1              ;248
000346  a14e              ADR      r1,|L8.1152|
000348  ec532b10          VMOV     r2,r3,d0              ;248
00034c  4668              MOV      r0,sp                 ;248
00034e  f7fffffe          BL       __2sprintf
000352  4669              MOV      r1,sp                 ;249
000354  4648              MOV      r0,r9                 ;249
000356  f7fffffe          BL       TEXT_SetText
00035a  7868              LDRB     r0,[r5,#1]            ;250  ; status_flash
00035c  b320              CBZ      r0,|L8.936|
00035e  f6400196          MOV      r1,#0x896             ;258
000362  6860              LDR      r0,[r4,#4]            ;258
000364  f7fffffe          BL       WM_GetDialogItem
000368  a135              ADR      r1,|L8.1088|
00036a  f7fffffe          BL       TEXT_SetText
00036e  706e              STRB     r6,[r5,#1]            ;260
                  |L8.880|
000370  ed950a02          VLDR     s0,[r5,#8]            ;262
000374  eeb50ac0          VCMPE.F32 s0,#0.0               ;262
000378  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;262
00037c  d097              BEQ      |L8.686|
00037e  edd80a00          VLDR     s1,[r8,#0]            ;262
000382  eef40ac0          VCMPE.F32 s1,s0                 ;262
000386  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;262
00038a  d290              BCS      |L8.686|
00038c  4848              LDR      r0,|L8.1200|
00038e  6801              LDR      r1,[r0,#0]            ;264  ; flagA
000390  f0210140          BIC      r1,r1,#0x40           ;264
000394  6001              STR      r1,[r0,#0]            ;264  ; flagA
000396  f44f4100          MOV      r1,#0x8000            ;265
00039a  4846              LDR      r0,|L8.1204|
00039c  f7fffffe          BL       GPIO_SetBits
0003a0  4845              LDR      r0,|L8.1208|
0003a2  7006              STRB     r6,[r0,#0]            ;266
0003a4  702e              STRB     r6,[r5,#0]            ;267
0003a6  e782              B        |L8.686|
                  |L8.936|
0003a8  f6400196          MOV      r1,#0x896             ;251
0003ac  6860              LDR      r0,[r4,#4]            ;251
0003ae  f7fffffe          BL       WM_GetDialogItem
0003b2  4681              MOV      r9,r0                 ;251
0003b4  21ff              MOVS     r1,#0xff              ;252
0003b6  4648              MOV      r0,r9                 ;252
0003b8  f7fffffe          BL       TEXT_SetTextColor
0003bc  493f              LDR      r1,|L8.1212|
0003be  4648              MOV      r0,r9                 ;253
0003c0  f7fffffe          BL       TEXT_SetFont
0003c4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003c8  a13d              ADR      r1,|L8.1216|
0003ca  4648              MOV      r0,r9                 ;255
0003cc  f7fffffe          BL       TEXT_SetText
0003d0  706f              STRB     r7,[r5,#1]            ;256
0003d2  e7cd              B        |L8.880|
                  |L8.980|
0003d4  6867              LDR      r7,[r4,#4]            ;307
0003d6  2100              MOVS     r1,#0                 ;308
0003d8  4638              MOV      r0,r7                 ;308
0003da  f7fffffe          BL       WINDOW_SetBkColor
0003de  2300              MOVS     r3,#0                 ;309
0003e0  f44f72fa          MOV      r2,#0x1f4             ;309
0003e4  2102              MOVS     r1,#2                 ;309
0003e6  4638              MOV      r0,r7                 ;309
0003e8  f7fffffe          BL       WM_CreateTimer
0003ec  f640010b          MOV      r1,#0x80b             ;321
0003f0  6860              LDR      r0,[r4,#4]            ;321
0003f2  f7fffffe          BL       WM_GetDialogItem
0003f6  4607              MOV      r7,r0                 ;321
0003f8  4930              LDR      r1,|L8.1212|
0003fa  4638              MOV      r0,r7                 ;323
0003fc  f7fffffe          BL       BUTTON_SetFont
000400  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000404  e062              B        |L8.1228|
000406  0000              DCW      0x0000
                  |L8.1032|
                          DCD      Run_Control
                  |L8.1036|
00040c  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1040|
                          DCD      0x00d3d3d3
                  |L8.1044|
                          DCD      temp
                  |L8.1048|
000418  00000000          DCFD     0x0000000000000000 ; 0
00041c  00000000
                  |L8.1056|
                          DCD      ||.data||
                  |L8.1060|
                          DCD      GUI_Fontsymbol
                  |L8.1064|
000428  4a696e6b          DCB      "Jinko",0
00042c  6f00    
00042e  00                DCB      0
00042f  00                DCB      0
                  |L8.1072|
                          DCD      GUI_FontHZ20S
                  |L8.1076|
000434  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000438  878fe698
00043c  bee7a4ba
                  |L8.1088|
000440  00                DCB      0
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
                          DCD      GUI_Font24_1
                  |L8.1096|
000448  4100              DCB      "A",0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L8.1100|
00044c  5600              DCB      "V",0
00044e  00                DCB      0
00044f  00                DCB      0
                  |L8.1104|
                          DCD      GUI_FontEN40
                  |L8.1108|
000454  433a00            DCB      "C:",0
000457  00                DCB      0
                  |L8.1112|
000458  6d00              DCB      "m",0
00045a  00                DCB      0
00045b  00                DCB      0
                  |L8.1116|
00045c  414800            DCB      "AH",0
00045f  00                DCB      0
                  |L8.1120|
                          DCD      GUI_Fontunit
                  |L8.1124|
000464  c2b000            DCB      194,176,0
000467  00                DCB      0
                  |L8.1128|
000468  4300              DCB      "C",0
00046a  00                DCB      0
00046b  00                DCB      0
                  |L8.1132|
                          DCD      lockstat1
                  |L8.1136|
                          DCD      lockstat2
                  |L8.1140|
                          DCD      lock
                  |L8.1144|
                          DCD      DISS_Voltage
                  |L8.1148|
                          DCD      0x3e99999a
                  |L8.1152|
000480  252e3366          DCB      "%.3f",0
000484  00      
000485  00                DCB      0
000486  00                DCB      0
000487  00                DCB      0
                  |L8.1160|
                          DCD      disloadv
                  |L8.1164|
                          DCD      0x43480000
                  |L8.1168|
000490  252e3166          DCB      "%.1f",0
000494  00      
000495  00                DCB      0
000496  00                DCB      0
000497  00                DCB      0
                  |L8.1176|
                          DCD      alert_flag
                  |L8.1180|
                          DCD      bc_raw
                  |L8.1184|
                          DCD      battery_c
                  |L8.1188|
0004a4  25303564          DCB      "%05d",0
0004a8  00      
0004a9  00                DCB      0
0004aa  00                DCB      0
0004ab  00                DCB      0
                  |L8.1196|
                          DCD      DISS_Current
                  |L8.1200|
                          DCD      flagA
                  |L8.1204|
                          DCD      0x40020000
                  |L8.1208|
                          DCD      mode_sw
                  |L8.1212|
                          DCD      GUI_FontHZ16
                  |L8.1216|
0004c0  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0004c4  94b5e4b8
0004c8  ad00    
0004ca  00                DCB      0
0004cb  00                DCB      0
                  |L8.1228|
0004cc  a1fe              ADR      r1,|L8.2248|
0004ce  4638              MOV      r0,r7                 ;325
0004d0  f7fffffe          BL       BUTTON_SetText
0004d4  f640010c          MOV      r1,#0x80c             ;329
0004d8  6860              LDR      r0,[r4,#4]            ;329
0004da  f7fffffe          BL       WM_GetDialogItem
0004de  4607              MOV      r7,r0                 ;329
0004e0  2101              MOVS     r1,#1                 ;330
0004e2  4638              MOV      r0,r7                 ;330
0004e4  f7fffffe          BL       BUTTON_SetPressed
0004e8  49fb              LDR      r1,|L8.2264|
0004ea  4638              MOV      r0,r7                 ;332
0004ec  f7fffffe          BL       BUTTON_SetFont
0004f0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004f4  a1f9              ADR      r1,|L8.2268|
0004f6  4638              MOV      r0,r7                 ;334
0004f8  f7fffffe          BL       BUTTON_SetText
0004fc  f640010d          MOV      r1,#0x80d             ;338
000500  6860              LDR      r0,[r4,#4]            ;338
000502  f7fffffe          BL       WM_GetDialogItem
000506  4607              MOV      r7,r0                 ;338
000508  49f3              LDR      r1,|L8.2264|
00050a  4638              MOV      r0,r7                 ;340
00050c  f7fffffe          BL       BUTTON_SetFont
000510  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000514  a1f5              ADR      r1,|L8.2284|
000516  4638              MOV      r0,r7                 ;342
000518  f7fffffe          BL       BUTTON_SetText
00051c  f640010e          MOV      r1,#0x80e             ;346
000520  6860              LDR      r0,[r4,#4]            ;346
000522  f7fffffe          BL       WM_GetDialogItem
000526  4607              MOV      r7,r0                 ;346
000528  49eb              LDR      r1,|L8.2264|
00052a  4638              MOV      r0,r7                 ;348
00052c  f7fffffe          BL       BUTTON_SetFont
000530  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000534  a1f1              ADR      r1,|L8.2300|
000536  4638              MOV      r0,r7                 ;350
000538  f7fffffe          BL       BUTTON_SetText
00053c  f640010f          MOV      r1,#0x80f             ;354
000540  6860              LDR      r0,[r4,#4]            ;354
000542  f7fffffe          BL       WM_GetDialogItem
000546  4607              MOV      r7,r0                 ;354
000548  49e3              LDR      r1,|L8.2264|
00054a  4638              MOV      r0,r7                 ;356
00054c  f7fffffe          BL       BUTTON_SetFont
000550  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000554  a1ec              ADR      r1,|L8.2312|
000556  4638              MOV      r0,r7                 ;358
000558  f7fffffe          BL       BUTTON_SetText
00055c  f44f6101          MOV      r1,#0x810             ;361
000560  6860              LDR      r0,[r4,#4]            ;361
000562  f7fffffe          BL       WM_GetDialogItem
000566  4607              MOV      r7,r0                 ;361
000568  4641              MOV      r1,r8                 ;362
00056a  4638              MOV      r0,r7                 ;362
00056c  f7fffffe          BL       TEXT_SetTextColor
000570  49e7              LDR      r1,|L8.2320|
000572  4638              MOV      r0,r7                 ;363
000574  f7fffffe          BL       TEXT_SetFont
000578  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00057c  a1e5              ADR      r1,|L8.2324|
00057e  4638              MOV      r0,r7                 ;365
000580  f7fffffe          BL       TEXT_SetText
000584  f6400111          MOV      r1,#0x811             ;367
000588  6860              LDR      r0,[r4,#4]            ;367
00058a  f7fffffe          BL       WM_GetDialogItem
00058e  4607              MOV      r7,r0                 ;367
000590  4641              MOV      r1,r8                 ;368
000592  4638              MOV      r0,r7                 ;368
000594  f7fffffe          BL       TEXT_SetTextColor
000598  49dd              LDR      r1,|L8.2320|
00059a  4638              MOV      r0,r7                 ;369
00059c  f7fffffe          BL       TEXT_SetFont
0005a0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005a4  a1dc              ADR      r1,|L8.2328|
0005a6  4638              MOV      r0,r7                 ;371
0005a8  f7fffffe          BL       TEXT_SetText
0005ac  f640011e          MOV      r1,#0x81e             ;373
0005b0  6860              LDR      r0,[r4,#4]            ;373
0005b2  f7fffffe          BL       WM_GetDialogItem
0005b6  4607              MOV      r7,r0                 ;373
0005b8  4641              MOV      r1,r8                 ;374
0005ba  4638              MOV      r0,r7                 ;374
0005bc  f7fffffe          BL       TEXT_SetTextColor
0005c0  49d3              LDR      r1,|L8.2320|
0005c2  4638              MOV      r0,r7                 ;375
0005c4  f7fffffe          BL       TEXT_SetFont
0005c8  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005cc  f2af1184          ADR      r1,|L8.1100|
0005d0  4638              MOV      r0,r7                 ;377
0005d2  f7fffffe          BL       TEXT_SetText
0005d6  f640011f          MOV      r1,#0x81f             ;379
0005da  6860              LDR      r0,[r4,#4]            ;379
0005dc  f7fffffe          BL       WM_GetDialogItem
0005e0  4607              MOV      r7,r0                 ;379
0005e2  4641              MOV      r1,r8                 ;380
0005e4  4638              MOV      r0,r7                 ;380
0005e6  f7fffffe          BL       TEXT_SetTextColor
0005ea  49c9              LDR      r1,|L8.2320|
0005ec  4638              MOV      r0,r7                 ;381
0005ee  f7fffffe          BL       TEXT_SetFont
0005f2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005f6  f2af11b0          ADR      r1,|L8.1096|
0005fa  4638              MOV      r0,r7                 ;383
0005fc  f7fffffe          BL       TEXT_SetText
000600  f640016d          MOV      r1,#0x86d             ;385
000604  6860              LDR      r0,[r4,#4]            ;385
000606  f7fffffe          BL       WM_GetDialogItem
00060a  4607              MOV      r7,r0                 ;385
00060c  2100              MOVS     r1,#0                 ;386
00060e  4638              MOV      r0,r7                 ;386
000610  f7fffffe          BL       TEXT_SetTextColor
000614  49c1              LDR      r1,|L8.2332|
000616  4638              MOV      r0,r7                 ;387
000618  f7fffffe          BL       TEXT_SetBkColor
00061c  49c0              LDR      r1,|L8.2336|
00061e  4638              MOV      r0,r7                 ;388
000620  f7fffffe          BL       TEXT_SetFont
000624  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000628  a1be              ADR      r1,|L8.2340|
00062a  4638              MOV      r0,r7                 ;390
00062c  f7fffffe          BL       TEXT_SetText
000630  f640016e          MOV      r1,#0x86e             ;392
000634  6860              LDR      r0,[r4,#4]            ;392
000636  f7fffffe          BL       WM_GetDialogItem
00063a  4607              MOV      r7,r0                 ;392
00063c  ee1a0a10          VMOV     r0,s20                ;393
000640  f7fffffe          BL       __aeabi_f2d
000644  ec410b10          VMOV     d0,r0,r1              ;393
000648  ec532b10          VMOV     r2,r3,d0              ;393
00064c  f2af11d0          ADR      r1,|L8.1152|
000650  4668              MOV      r0,sp                 ;393
000652  f7fffffe          BL       __2sprintf
000656  4649              MOV      r1,r9                 ;394
000658  4638              MOV      r0,r7                 ;394
00065a  f7fffffe          BL       TEXT_SetTextColor
00065e  49b5              LDR      r1,|L8.2356|
000660  4638              MOV      r0,r7                 ;395
000662  f7fffffe          BL       TEXT_SetFont
000666  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00066a  4669              MOV      r1,sp                 ;397
00066c  4638              MOV      r0,r7                 ;397
00066e  f7fffffe          BL       TEXT_SetText
000672  f640112d          MOV      r1,#0x92d             ;399
000676  6860              LDR      r0,[r4,#4]            ;399
000678  f7fffffe          BL       WM_GetDialogItem
00067c  4607              MOV      r7,r0                 ;399
00067e  68a8              LDR      r0,[r5,#8]            ;400  ; load_cutoffv
000680  f7fffffe          BL       __aeabi_f2d
000684  ec410b10          VMOV     d0,r0,r1              ;400
000688  ec532b10          VMOV     r2,r3,d0              ;400
00068c  f2af2110          ADR      r1,|L8.1152|
000690  4668              MOV      r0,sp                 ;400
000692  f7fffffe          BL       __2sprintf
000696  4649              MOV      r1,r9                 ;401
000698  4638              MOV      r0,r7                 ;401
00069a  f7fffffe          BL       TEXT_SetTextColor
00069e  49a5              LDR      r1,|L8.2356|
0006a0  4638              MOV      r0,r7                 ;402
0006a2  f7fffffe          BL       TEXT_SetFont
0006a6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006aa  4669              MOV      r1,sp                 ;404
0006ac  4638              MOV      r0,r7                 ;404
0006ae  f7fffffe          BL       TEXT_SetText
0006b2  4651              MOV      r1,r10                ;406
0006b4  6860              LDR      r0,[r4,#4]            ;406
0006b6  f7fffffe          BL       WM_GetDialogItem
0006ba  4607              MOV      r7,r0                 ;406
0006bc  ec532b18          VMOV     r2,r3,d8              ;407
0006c0  f2af2144          ADR      r1,|L8.1152|
0006c4  4668              MOV      r0,sp                 ;407
0006c6  f7fffffe          BL       __2sprintf
0006ca  4631              MOV      r1,r6                 ;408
0006cc  4638              MOV      r0,r7                 ;408
0006ce  f7fffffe          BL       TEXT_SetTextColor
0006d2  4999              LDR      r1,|L8.2360|
0006d4  4638              MOV      r0,r7                 ;409
0006d6  f7fffffe          BL       TEXT_SetFont
0006da  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006de  4669              MOV      r1,sp                 ;411
0006e0  4638              MOV      r0,r7                 ;411
0006e2  f7fffffe          BL       TEXT_SetText
0006e6  f6400192          MOV      r1,#0x892             ;413
0006ea  6860              LDR      r0,[r4,#4]            ;413
0006ec  f7fffffe          BL       WM_GetDialogItem
0006f0  4607              MOV      r7,r0                 ;413
0006f2  ec532b18          VMOV     r2,r3,d8              ;414
0006f6  f2af2178          ADR      r1,|L8.1152|
0006fa  4668              MOV      r0,sp                 ;414
0006fc  f7fffffe          BL       __2sprintf
000700  4631              MOV      r1,r6                 ;415
000702  4638              MOV      r0,r7                 ;415
000704  f7fffffe          BL       TEXT_SetTextColor
000708  498b              LDR      r1,|L8.2360|
00070a  4638              MOV      r0,r7                 ;416
00070c  f7fffffe          BL       TEXT_SetFont
000710  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000714  4669              MOV      r1,sp                 ;418
000716  4638              MOV      r0,r7                 ;418
000718  f7fffffe          BL       TEXT_SetText
00071c  f640110d          MOV      r1,#0x90d             ;420
000720  6860              LDR      r0,[r4,#4]            ;420
000722  f7fffffe          BL       WM_GetDialogItem
000726  4607              MOV      r7,r0                 ;420
000728  2200              MOVS     r2,#0                 ;421
00072a  f2af2188          ADR      r1,|L8.1188|
00072e  4668              MOV      r0,sp                 ;421
000730  f7fffffe          BL       __2sprintf
000734  4631              MOV      r1,r6                 ;422
000736  4638              MOV      r0,r7                 ;422
000738  f7fffffe          BL       TEXT_SetTextColor
00073c  497e              LDR      r1,|L8.2360|
00073e  4638              MOV      r0,r7                 ;423
000740  f7fffffe          BL       TEXT_SetFont
000744  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000748  4669              MOV      r1,sp                 ;425
00074a  4638              MOV      r0,r7                 ;425
00074c  f7fffffe          BL       TEXT_SetText
000750  f640110e          MOV      r1,#0x90e             ;427
000754  6860              LDR      r0,[r4,#4]            ;427
000756  f7fffffe          BL       WM_GetDialogItem
00075a  4607              MOV      r7,r0                 ;427
00075c  4649              MOV      r1,r9                 ;428
00075e  4638              MOV      r0,r7                 ;428
000760  f7fffffe          BL       TEXT_SetTextColor
000764  496e              LDR      r1,|L8.2336|
000766  4638              MOV      r0,r7                 ;429
000768  f7fffffe          BL       TEXT_SetFont
00076c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000770  a172              ADR      r1,|L8.2364|
000772  4638              MOV      r0,r7                 ;431
000774  f7fffffe          BL       TEXT_SetText
000778  f6401139          MOV      r1,#0x939             ;433
00077c  6860              LDR      r0,[r4,#4]            ;433
00077e  f7fffffe          BL       WM_GetDialogItem
000782  4607              MOV      r7,r0                 ;433
000784  4649              MOV      r1,r9                 ;434
000786  4638              MOV      r0,r7                 ;434
000788  f7fffffe          BL       TEXT_SetTextColor
00078c  4964              LDR      r1,|L8.2336|
00078e  4638              MOV      r0,r7                 ;435
000790  f7fffffe          BL       TEXT_SetFont
000794  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000798  a16c              ADR      r1,|L8.2380|
00079a  4638              MOV      r0,r7                 ;437
00079c  f7fffffe          BL       TEXT_SetText
0007a0  78a8              LDRB     r0,[r5,#2]            ;439  ; load_mode
0007a2  f8df81b8          LDR      r8,|L8.2396|
0007a6  4d6e              LDR      r5,|L8.2400|
0007a8  f640110f          MOV      r1,#0x90f             ;441
0007ac  f44f6780          MOV      r7,#0x400             ;445
0007b0  2801              CMP      r0,#1                 ;439
0007b2  d001              BEQ      |L8.1976|
0007b4  b1d8              CBZ      r0,|L8.2030|
0007b6  e034              B        |L8.2082|
                  |L8.1976|
0007b8  6860              LDR      r0,[r4,#4]            ;441
0007ba  f7fffffe          BL       WM_GetDialogItem
0007be  4682              MOV      r10,r0                ;441
0007c0  4649              MOV      r1,r9                 ;442
0007c2  4650              MOV      r0,r10                ;442
0007c4  f7fffffe          BL       TEXT_SetTextColor
0007c8  495a              LDR      r1,|L8.2356|
0007ca  4650              MOV      r0,r10                ;443
0007cc  f7fffffe          BL       TEXT_SetFont
0007d0  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0007d4  4639              MOV      r1,r7                 ;445
0007d6  4640              MOV      r0,r8                 ;445
0007d8  f7fffffe          BL       GPIO_SetBits
0007dc  a161              ADR      r1,|L8.2404|
0007de  4650              MOV      r0,r10                ;446
0007e0  f7fffffe          BL       TEXT_SetText
0007e4  6828              LDR      r0,[r5,#0]            ;447  ; flagD
0007e6  f0400080          ORR      r0,r0,#0x80           ;447
0007ea  6028              STR      r0,[r5,#0]            ;447  ; flagD
0007ec  e019              B        |L8.2082|
                  |L8.2030|
0007ee  6860              LDR      r0,[r4,#4]            ;449
0007f0  f7fffffe          BL       WM_GetDialogItem
0007f4  4682              MOV      r10,r0                ;449
0007f6  4649              MOV      r1,r9                 ;450
0007f8  4650              MOV      r0,r10                ;450
0007fa  f7fffffe          BL       TEXT_SetTextColor
0007fe  494d              LDR      r1,|L8.2356|
000800  4650              MOV      r0,r10                ;451
000802  f7fffffe          BL       TEXT_SetFont
000806  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00080a  4639              MOV      r1,r7                 ;453
00080c  4640              MOV      r0,r8                 ;453
00080e  f7fffffe          BL       GPIO_ResetBits
000812  a155              ADR      r1,|L8.2408|
000814  4650              MOV      r0,r10                ;454
000816  f7fffffe          BL       TEXT_SetText
00081a  6828              LDR      r0,[r5,#0]            ;455  ; flagD
00081c  f0200080          BIC      r0,r0,#0x80           ;455
000820  6028              STR      r0,[r5,#0]            ;455  ; flagD
                  |L8.2082|
000822  f44f6111          MOV      r1,#0x910             ;458
000826  6860              LDR      r0,[r4,#4]            ;458
000828  f7fffffe          BL       WM_GetDialogItem
00082c  4605              MOV      r5,r0                 ;458
00082e  4649              MOV      r1,r9                 ;459
000830  4628              MOV      r0,r5                 ;459
000832  f7fffffe          BL       TEXT_SetTextColor
000836  493a              LDR      r1,|L8.2336|
000838  4628              MOV      r0,r5                 ;460
00083a  f7fffffe          BL       TEXT_SetFont
00083e  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000842  a14a              ADR      r1,|L8.2412|
000844  4628              MOV      r0,r5                 ;462
000846  f7fffffe          BL       TEXT_SetText
00084a  f6401111          MOV      r1,#0x911             ;464
00084e  6860              LDR      r0,[r4,#4]            ;464
000850  f7fffffe          BL       WM_GetDialogItem
000854  4605              MOV      r5,r0                 ;464
000856  ee190a10          VMOV     r0,s18                ;465
00085a  f7fffffe          BL       __aeabi_f2d
00085e  ec410b10          VMOV     d0,r0,r1              ;465
000862  ec532b10          VMOV     r2,r3,d0              ;465
000866  f2af31e8          ADR      r1,|L8.1152|
00086a  4668              MOV      r0,sp                 ;465
00086c  f7fffffe          BL       __2sprintf
000870  4649              MOV      r1,r9                 ;466
000872  4628              MOV      r0,r5                 ;466
000874  f7fffffe          BL       TEXT_SetTextColor
000878  492e              LDR      r1,|L8.2356|
00087a  4628              MOV      r0,r5                 ;467
00087c  f7fffffe          BL       TEXT_SetFont
000880  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000884  4669              MOV      r1,sp                 ;469
000886  4628              MOV      r0,r5                 ;469
000888  f7fffffe          BL       TEXT_SetText
00088c  f6401112          MOV      r1,#0x912             ;471
000890  6860              LDR      r0,[r4,#4]            ;471
000892  f7fffffe          BL       WM_GetDialogItem
000896  4604              MOV      r4,r0                 ;471
000898  4631              MOV      r1,r6                 ;472
00089a  4620              MOV      r0,r4                 ;472
00089c  f7fffffe          BL       TEXT_SetTextColor
0008a0  4924              LDR      r1,|L8.2356|
0008a2  4620              MOV      r0,r4                 ;473
0008a4  f7fffffe          BL       TEXT_SetFont
0008a8  f8db0000          LDR      r0,[r11,#0]           ;474  ; temp
0008ac  f7fffffe          BL       __aeabi_f2d
0008b0  ec410b10          VMOV     d0,r0,r1              ;474
0008b4  ec532b10          VMOV     r2,r3,d0              ;474
0008b8  f2af412c          ADR      r1,|L8.1168|
0008bc  4668              MOV      r0,sp                 ;474
0008be  f7fffffe          BL       __2sprintf
0008c2  e05b              B        |L8.2428|
                  |L8.2244|
0008c4  e05f              B        |L8.2438|
0008c6  0000              DCW      0x0000
                  |L8.2248|
0008c8  e58685e9          DCB      229,134,133,233,152,187,230,181,139,232,175,149,0
0008cc  98bbe6b5
0008d0  8be8af95
0008d4  00      
0008d5  00                DCB      0
0008d6  00                DCB      0
0008d7  00                DCB      0
                  |L8.2264|
                          DCD      GUI_FontHZ16
                  |L8.2268|
0008dc  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
0008e0  8ea7e8b4
0008e4  9fe8bdbd
0008e8  00      
0008e9  00                DCB      0
0008ea  00                DCB      0
0008eb  00                DCB      0
                  |L8.2284|
0008ec  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
0008f0  8ea7e794
0008f4  b5e6ba90
0008f8  00      
0008f9  00                DCB      0
0008fa  00                DCB      0
0008fb  00                DCB      0
                  |L8.2300|
0008fc  e58585e6          DCB      229,133,133,230,148,190,231,148,181,0
000900  94bee794
000904  b500    
000906  00                DCB      0
000907  00                DCB      0
                  |L8.2312|
000908  e69bb2e7          DCB      230,155,178,231,186,191,0
00090c  babf00  
00090f  00                DCB      0
                  |L8.2320|
                          DCD      GUI_FontEN40
                  |L8.2324|
000914  563a00            DCB      "V:",0
000917  00                DCB      0
                  |L8.2328|
000918  493a00            DCB      "I:",0
00091b  00                DCB      0
                  |L8.2332|
                          DCD      0x00bfffff
                  |L8.2336|
                          DCD      GUI_Fontset_font
                  |L8.2340|
000924  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,230,181,129,0
000928  bdbde794
00092c  b5e6b581
000930  00      
000931  00                DCB      0
000932  00                DCB      0
000933  00                DCB      0
                  |L8.2356|
                          DCD      GUI_Font24_1
                  |L8.2360|
                          DCD      GUI_FontD24x32
                  |L8.2364|
00093c  e8b49fe8          DCB      232,180,159,232,189,189,230,168,161,229,188,143,0
000940  bdbde6a8
000944  a1e5bc8f
000948  00      
000949  00                DCB      0
00094a  00                DCB      0
00094b  00                DCB      0
                  |L8.2380|
00094c  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
000950  ada2e794
000954  b5e58e8b
000958  00      
000959  00                DCB      0
00095a  00                DCB      0
00095b  00                DCB      0
                  |L8.2396|
                          DCD      0x40020800
                  |L8.2400|
                          DCD      flagD
                  |L8.2404|
000964  434300            DCB      "CC",0
000967  00                DCB      0
                  |L8.2408|
000968  435600            DCB      "CV",0
00096b  00                DCB      0
                  |L8.2412|
00096c  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
000970  bdbde794
000974  b5e58e8b
000978  00      
000979  00                DCB      0
00097a  00                DCB      0
00097b  00                DCB      0
                  |L8.2428|
00097c  4669              MOV      r1,sp                 ;475
00097e  4620              MOV      r0,r4                 ;475
000980  f7fffffe          BL       TEXT_SetText
000984  e4ad              B        |L8.738|
                  |L8.2438|
000986  68a0              LDR      r0,[r4,#8]            ;482
000988  f7fffffe          BL       WM_GetId
00098c  e4a9              B        |L8.738|
;;;581    
                          ENDP


                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1313   
;;;1314   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1315   {
;;;1316   
;;;1317       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1318       {
;;;1319           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1320           {
;;;1321              if(para_set4 == set_4_on){
;;;1322                   BEEP_Tiggr();
;;;1323               }
;;;1324               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1325               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1317
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1317  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1317
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1326           }else{
;;;1327               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1328               TM1650_SET_LED(0x48,0x71);
;;;1329               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1330           }        
;;;1331       }else
;;;1332       {
;;;1333           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1334           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1319
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1319
00003c  6b93              LDR      r3,[r2,#0x38]         ;1319  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1319
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1319
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1319
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1319
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1319  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1319
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1319
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1319
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1319
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1321  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1321
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1324
000072  2068              MOVS     r0,#0x68              ;1324
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1325
00007a  4628              MOV      r0,r5                 ;1325
00007c  e8bd4070          POP      {r4-r6,lr}            ;1325
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1327
000086  4628              MOV      r0,r5                 ;1327
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1328
00008e  2048              MOVS     r0,#0x48              ;1328
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1329
000098  21f2              MOVS     r1,#0xf2              ;1329
00009a  2068              MOVS     r0,#0x68              ;1329
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1335       }
;;;1336   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080b0053          DCW      0x080b,0x0053
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080c00a3          DCW      0x080c,0x00a3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
00005c  080d00f3          DCW      0x080d,0x00f3
000060  00e2004d          DCW      0x00e2,0x004d
000064  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000078  080e0143          DCW      0x080e,0x0143
00007c  00e2004d          DCW      0x00e2,0x004d
000080  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000094  080f0193          DCW      0x080f,0x0193
000098  00e2004d          DCW      0x00e2,0x004d
00009c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  0810001c          DCW      0x0810,0x001c
0000b4  00320040          DCW      0x0032,0x0040
0000b8  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  0811001c          DCW      0x0811,0x001c
0000d0  00780040          DCW      0x0078,0x0040
0000d4  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  081e00f0          DCW      0x081e,0x00f0
0000ec  00320020          DCW      0x0032,0x0020
0000f0  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  081f00f0          DCW      0x081f,0x00f0
000108  00790020          DCW      0x0079,0x0020
00010c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  086d0122          DCW      0x086d,0x0122
000124  004b0050          DCW      0x004b,0x0050
000128  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  086e017c          DCW      0x086e,0x017c
000140  004b0041          DCW      0x004b,0x0041
000144  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  090e0122          DCW      0x090e,0x0122
00015c  007d0050          DCW      0x007d,0x0050
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  09390122          DCW      0x0939,0x0122
000178  00960050          DCW      0x0096,0x0050
00017c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  090f017c          DCW      0x090f,0x017c
000194  007d0041          DCW      0x007d,0x0041
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  09100122          DCW      0x0910,0x0122
0001b0  00640050          DCW      0x0064,0x0050
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  0911017c          DCW      0x0911,0x017c
0001cc  00640041          DCW      0x0064,0x0041
0001d0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001e4  0891005f          DCW      0x0891,0x005f
0001e8  00300096          DCW      0x0030,0x0096
0001ec  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000200  0892005f          DCW      0x0892,0x005f
000204  00740096          DCW      0x0074,0x0096
000208  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00021c  08960190          DCW      0x0896,0x0190
000220  00040032          DCW      0x0004,0x0032
000224  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000238  090d005f          DCW      0x090d,0x005f
00023c  00b80096          DCW      0x00b8,0x0096
000240  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000254  0912012c          DCW      0x0912,0x012c
000258  00020050          DCW      0x0002,0x0050
00025c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000270  092d017c          DCW      0x092d,0x017c
000274  00960041          DCW      0x0096,0x0041
000278  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  00                DCB      0x00
                  load_mode
000002  0000              DCB      0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
