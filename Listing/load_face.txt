; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\load_face.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\load_face.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\load_face.crf --no_multibyte_chars ..\APP\load_Face.c]
                          THUMB

                          AREA ||i.CreateWindow2||, CODE, READONLY, ALIGN=2

                  CreateWindow2 PROC
;;;598    
;;;599    WM_HWIN CreateWindow2(void) {
000000  b57c              PUSH     {r2-r6,lr}
;;;600      if(page_sw == face_graph)
000002  4c23              LDR      r4,|L1.144|
000004  7820              LDRB     r0,[r4,#0]  ; page_sw
000006  2800              CMP      r0,#0
000008  d001              BEQ      |L1.14|
;;;601      {      
;;;602      }else{
;;;603          IO_OFF();
00000a  f7fffffe          BL       IO_OFF
                  |L1.14|
;;;604      }
;;;605      page_sw = face_load;
00000e  2004              MOVS     r0,#4
000010  7020              STRB     r0,[r4,#0]
;;;606      track = face_load;
000012  4920              LDR      r1,|L1.148|
000014  7008              STRB     r0,[r1,#0]
;;;607      set_sw = set_66;
000016  4920              LDR      r1,|L1.152|
000018  2041              MOVS     r0,#0x41
00001a  7008              STRB     r0,[r1,#0]
;;;608      load_cutoffv = (float)set_load_cutoffv/1000;
00001c  481f              LDR      r0,|L1.156|
00001e  eddf0a20          VLDR     s1,|L1.160|
000022  4e20              LDR      r6,|L1.164|
000024  ed900a04          VLDR     s0,[r0,#0x10]
000028  eeb80ac0          VCVT.F32.S32 s0,s0
00002c  ee801a20          VDIV.F32 s2,s0,s1
000030  ed861a02          VSTR     s2,[r6,#8]
;;;609      SET_Current_Laod = load_c;
000034  4c1c              LDR      r4,|L1.168|
000036  f8d40094          LDR      r0,[r4,#0x94]  ; Run_Control
00003a  6120              STR      r0,[r4,#0x10]  ; Run_Control
;;;610      if(SET_Current_Laod > 2500)
00003c  6920              LDR      r0,[r4,#0x10]  ; Run_Control
00003e  f64011c4          MOV      r1,#0x9c4
000042  4288              CMP      r0,r1
000044  d903              BLS      |L1.78|
;;;611      {
;;;612    	  C_SW(1);
000046  2001              MOVS     r0,#1
000048  f7fffffe          BL       C_SW
00004c  e002              B        |L1.84|
                  |L1.78|
;;;613      }else{
;;;614    	  C_SW(0);
00004e  2000              MOVS     r0,#0
000050  f7fffffe          BL       C_SW
                  |L1.84|
;;;615      }
;;;616      pass = 0;  
000054  4815              LDR      r0,|L1.172|
000056  2500              MOVS     r5,#0
000058  7005              STRB     r5,[r0,#0]
;;;617      mode_sw = mode_load;
00005a  4915              LDR      r1,|L1.176|
00005c  2002              MOVS     r0,#2
00005e  7008              STRB     r0,[r1,#0]
;;;618      SET_Voltage_Laod = load_v; 
000060  f8d400a4          LDR      r0,[r4,#0xa4]  ; Run_Control
000064  60e0              STR      r0,[r4,#0xc]  ; Run_Control
;;;619    //   GPIO_SetBits(GPIOA,GPIO_Pin_15);//电子负载OFF
;;;620    //   GPIO_ResetBits(GPIOC,GPIO_Pin_1);//关闭电源输出
;;;621    //   //GPIO_SetBits(GPIOC,GPIO_Pin_13);//关闭电源输出继电器
;;;622      TM1650_SET_LED(0x68,0x70);
000066  2170              MOVS     r1,#0x70
000068  2068              MOVS     r0,#0x68
00006a  f7fffffe          BL       TM1650_SET_LED
;;;623      GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
00006e  f44f5180          MOV      r1,#0x1000
000072  4810              LDR      r0,|L1.180|
000074  f7fffffe          BL       GPIO_ResetBits
;;;624      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000078  f7fffffe          BL       WM_GetDesktopWindow
00007c  4603              MOV      r3,r0
00007e  9500              STR      r5,[sp,#0]
000080  4a0d              LDR      r2,|L1.184|
000082  2111              MOVS     r1,#0x11
000084  480d              LDR      r0,|L1.188|
000086  9501              STR      r5,[sp,#4]
000088  f7fffffe          BL       GUI_CreateDialogBox
00008c  6070              STR      r0,[r6,#4]  ; load_wind
;;;625      return load_wind;
;;;626    }
00008e  bd7c              POP      {r2-r6,pc}
;;;627    
                          ENDP

                  |L1.144|
                          DCD      page_sw
                  |L1.148|
                          DCD      track
                  |L1.152|
                          DCD      set_sw
                  |L1.156|
                          DCD      InFlashSave
                  |L1.160|
0000a0  447a0000          DCFS     0x447a0000 ; 1000
                  |L1.164|
                          DCD      ||.data||
                  |L1.168|
                          DCD      Run_Control
                  |L1.172|
                          DCD      pass
                  |L1.176|
                          DCD      mode_sw
                  |L1.180|
                          DCD      0x40020c00
                  |L1.184|
                          DCD      _cbDialog2
                  |L1.188|
                          DCD      ||.constdata||

                          AREA ||i.DEL_LOAD||, CODE, READONLY, ALIGN=2

                  DEL_LOAD PROC
;;;928    }
;;;929    void DEL_LOAD(void)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;930    {
;;;931    	switch(set_sw){
000004  482b              LDR      r0,|L2.180|
000006  7801              LDRB     r1,[r0,#0]  ; set_sw
;;;932    		case set_25:
;;;933            {
;;;934    			WM_HWIN hItem;
;;;935    //            WM_InvalidateWindow(hWinWind);
;;;936                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
000008  482b              LDR      r0,|L2.184|
;;;937    			if(bit > 1)
;;;938    			{
;;;939    				bit --;
;;;940    				set_limit[bit-1] = '\0';
00000a  4f2c              LDR      r7,|L2.188|
00000c  2400              MOVS     r4,#0                 ;936
00000e  6840              LDR      r0,[r0,#4]            ;936
000010  4d2b              LDR      r5,|L2.192|
;;;941    			}
;;;942    			if(bit == dot_flag)
000012  4e2c              LDR      r6,|L2.196|
000014  2918              CMP      r1,#0x18              ;931
000016  d01b              BEQ      |L2.80|
000018  2943              CMP      r1,#0x43              ;931
00001a  d031              BEQ      |L2.128|
00001c  2956              CMP      r1,#0x56              ;931
00001e  d147              BNE      |L2.176|
;;;943    			{
;;;944    				dot_flag = 0;
;;;945    			}
;;;946    			TEXT_SetText(hItem,set_limit);
;;;947    		}break;
;;;948    		case set_68:
;;;949            {
;;;950    			WM_HWIN hItem;
;;;951    //            WM_InvalidateWindow(hWinWind);
;;;952                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;953    			if(bit > 1)
;;;954    			{
;;;955    				bit --;
;;;956    				set_limit[bit-1] = '\0';
;;;957    			}
;;;958    			if(bit == dot_flag)
;;;959    			{
;;;960    				dot_flag = 0;
;;;961    			}
;;;962    			TEXT_SetText(hItem,set_limit);
;;;963    		}break;
;;;964    		case set_87:
;;;965            {
;;;966                WM_HWIN hItem;
;;;967    //            WM_InvalidateWindow(hWinWind);
;;;968                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000020  f640112d          MOV      r1,#0x92d
000024  f7fffffe          BL       WM_GetDialogItem
;;;969    			if(bit > 1)
000028  7829              LDRB     r1,[r5,#0]  ; bit
00002a  2901              CMP      r1,#1
00002c  d906              BLS      |L2.60|
;;;970    			{
;;;971    				bit --;
00002e  7829              LDRB     r1,[r5,#0]  ; bit
000030  1e49              SUBS     r1,r1,#1
000032  7029              STRB     r1,[r5,#0]
;;;972    				set_limit[bit-1] = '\0';
000034  7829              LDRB     r1,[r5,#0]  ; bit
000036  4439              ADD      r1,r1,r7
000038  f8014c01          STRB     r4,[r1,#-1]
                  |L2.60|
;;;973    			}
;;;974    			if(bit == dot_flag)
00003c  7829              LDRB     r1,[r5,#0]  ; bit
00003e  7832              LDRB     r2,[r6,#0]  ; dot_flag
000040  4291              CMP      r1,r2
000042  d100              BNE      |L2.70|
;;;975    			{
;;;976    				dot_flag = 0;
000044  7034              STRB     r4,[r6,#0]
                  |L2.70|
;;;977    			}
;;;978    			TEXT_SetText(hItem,set_limit);
000046  e8bd41f0          POP      {r4-r8,lr}
00004a  491c              LDR      r1,|L2.188|
00004c  f7ffbffe          B.W      TEXT_SetText
                  |L2.80|
000050  f640016e          MOV      r1,#0x86e             ;936
000054  f7fffffe          BL       WM_GetDialogItem
000058  7829              LDRB     r1,[r5,#0]            ;937  ; bit
00005a  2901              CMP      r1,#1                 ;937
00005c  d906              BLS      |L2.108|
00005e  7829              LDRB     r1,[r5,#0]            ;939  ; bit
000060  1e49              SUBS     r1,r1,#1              ;939
000062  7029              STRB     r1,[r5,#0]            ;939
000064  7829              LDRB     r1,[r5,#0]            ;940  ; bit
000066  4439              ADD      r1,r1,r7              ;940
000068  f8014c01          STRB     r4,[r1,#-1]           ;940
                  |L2.108|
00006c  7829              LDRB     r1,[r5,#0]            ;942  ; bit
00006e  7832              LDRB     r2,[r6,#0]            ;942  ; dot_flag
000070  4291              CMP      r1,r2                 ;942
000072  d100              BNE      |L2.118|
000074  7034              STRB     r4,[r6,#0]            ;944
                  |L2.118|
000076  e8bd41f0          POP      {r4-r8,lr}            ;946
00007a  4910              LDR      r1,|L2.188|
00007c  f7ffbffe          B.W      TEXT_SetText
                  |L2.128|
000080  f6401111          MOV      r1,#0x911             ;952
000084  f7fffffe          BL       WM_GetDialogItem
000088  7829              LDRB     r1,[r5,#0]            ;953  ; bit
00008a  2901              CMP      r1,#1                 ;953
00008c  d906              BLS      |L2.156|
00008e  7829              LDRB     r1,[r5,#0]            ;955  ; bit
000090  1e49              SUBS     r1,r1,#1              ;955
000092  7029              STRB     r1,[r5,#0]            ;955
000094  7829              LDRB     r1,[r5,#0]            ;956  ; bit
000096  4439              ADD      r1,r1,r7              ;956
000098  f8014c01          STRB     r4,[r1,#-1]           ;956
                  |L2.156|
00009c  7829              LDRB     r1,[r5,#0]            ;958  ; bit
00009e  7832              LDRB     r2,[r6,#0]            ;958  ; dot_flag
0000a0  4291              CMP      r1,r2                 ;958
0000a2  d100              BNE      |L2.166|
0000a4  7034              STRB     r4,[r6,#0]            ;960
                  |L2.166|
0000a6  e8bd41f0          POP      {r4-r8,lr}            ;962
0000aa  4904              LDR      r1,|L2.188|
0000ac  f7ffbffe          B.W      TEXT_SetText
                  |L2.176|
;;;979    		}break;
;;;980    	}
;;;981    }
0000b0  e8bd81f0          POP      {r4-r8,pc}
;;;982    
                          ENDP

                  |L2.180|
                          DCD      set_sw
                  |L2.184|
                          DCD      ||.data||
                  |L2.188|
                          DCD      set_limit
                  |L2.192|
                          DCD      bit
                  |L2.196|
                          DCD      dot_flag

                          AREA ||i.INPUT_LOAD||, CODE, READONLY, ALIGN=2

                  INPUT_LOAD PROC
;;;983    void INPUT_LOAD(char* num);            
;;;984    void INPUT_LOAD(char* num){
000000  e92d41f0          PUSH     {r4-r8,lr}
000004  4606              MOV      r6,r0
;;;985    	u8 i;    
;;;986        switch(set_sw)
000006  4840              LDR      r0,|L3.264|
000008  7802              LDRB     r2,[r0,#0]  ; set_sw
;;;987        {
;;;988            case set_25:
;;;989            {
;;;990                WM_HWIN hItem;
;;;991     //           WM_InvalidateWindow(load_wind);
;;;992                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
00000a  4840              LDR      r0,|L3.268|
;;;993    			if(bit < 6)
;;;994    			{
;;;995    				strcat(set_limit,num);
;;;996    			}
;;;997    			if(dot_flag != 0 && strcmp(num,".") == 0)
00000c  4c40              LDR      r4,|L3.272|
00000e  4d41              LDR      r5,|L3.276|
000010  6840              LDR      r0,[r0,#4]            ;992
000012  2a18              CMP      r2,#0x18              ;986
000014  d01b              BEQ      |L3.78|
000016  2a43              CMP      r2,#0x43              ;986
000018  d03e              BEQ      |L3.152|
00001a  2a56              CMP      r2,#0x56              ;986
00001c  d171              BNE      |L3.258|
;;;998    			{
;;;999    				
;;;1000   			}else{			
;;;1001   				
;;;1002   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1003   				{
;;;1004   					dot_flag = bit;
;;;1005   				}
;;;1006   				bit ++;
;;;1007   			}
;;;1008   			TEXT_SetText(hItem,set_limit);
;;;1009   //            switch(bit){
;;;1010   //                case 1:
;;;1011   //                {
;;;1012   //					for(i=0;i<6;i++)
;;;1013   //					{
;;;1014   //						set_limit[i] = '\0';
;;;1015   //					}
;;;1016   //                    load_c = atoi(num) * 1000;
;;;1017   //                    strcat(set_limit,num);            
;;;1018   //                    TEXT_SetText(hItem,set_limit);
;;;1019   //                    
;;;1020   //                    bit = 2;
;;;1021   //                    break;
;;;1022   //                }
;;;1023   //                case 2:
;;;1024   //                {
;;;1025   //                    strcat(set_limit,num);            
;;;1026   //                    TEXT_SetText(hItem,set_limit);
;;;1027   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1028   //                    {
;;;1029   //                        dot_flag = 1;
;;;1030   //                    }else{
;;;1031   //                        load_c = load_c * 10 + atoi(num) * 1000;
;;;1032   //                    }
;;;1033   //                    bit = 3;
;;;1034   //                    break;
;;;1035   //                }
;;;1036   //                case 3:
;;;1037   //                {
;;;1038   //                    strcat(set_limit,num);
;;;1039   //                    TEXT_SetText(hItem,set_limit);
;;;1040   //                    if(dot_flag == 0)
;;;1041   //                    {
;;;1042   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1043   //                        {                            
;;;1044   //                            dot_flag = 2;
;;;1045   //                        }else{
;;;1046   //                            load_c = 0;
;;;1047   //                        }
;;;1048   //                    }else{
;;;1049   //                        load_c = load_c + atoi(num) * 100;
;;;1050   //                    }                  
;;;1051   //                    bit = 4;
;;;1052   //                    break;
;;;1053   //                }
;;;1054   //                case 4:
;;;1055   //                {
;;;1056   //                    strcat(set_limit,num);
;;;1057   //                    TEXT_SetText(hItem,set_limit);
;;;1058   //                    if(dot_flag == 0)
;;;1059   //                    {
;;;1060   //                        load_c = 0;
;;;1061   //                    }else if(dot_flag == 2){
;;;1062   //                        load_c = load_c + atoi(num) * 100;
;;;1063   //                    }else{
;;;1064   //                        load_c = load_c + atoi(num) * 10;
;;;1065   //                    }                  
;;;1066   //                    bit = 5;
;;;1067   //                    break;
;;;1068   //                }
;;;1069   //                case 5:
;;;1070   //                {
;;;1071   //                    strcat(set_limit,num);
;;;1072   //                    TEXT_SetText(hItem,set_limit);
;;;1073   //                    if(dot_flag == 0)
;;;1074   //                    {
;;;1075   //                        load_c = 0;
;;;1076   //                    }else if(dot_flag == 1){
;;;1077   //                        load_c = load_c + atoi(num);
;;;1078   //                    }else{
;;;1079   //                        load_c = load_c + atoi(num) * 10;
;;;1080   //                    }                 
;;;1081   //                    bit = 6;
;;;1082   //                    break;
;;;1083   //                }
;;;1084   //                case 6:
;;;1085   //                {
;;;1086   //                    strcat(set_limit,num);
;;;1087   //                    TEXT_SetText(hItem,set_limit);
;;;1088   //                    if(dot_flag == 0)
;;;1089   //                    {
;;;1090   //                        load_c = 0;
;;;1091   //                    }else if(dot_flag == 2){
;;;1092   //                        load_c = load_c + atoi(num);
;;;1093   //                    }                 
;;;1094   //                    bit = 1;
;;;1095   //                    break;
;;;1096   //                }
;;;1097   //            }
;;;1098               break;
;;;1099               
;;;1100           }
;;;1101           case set_68:
;;;1102           {
;;;1103               WM_HWIN hItem;
;;;1104    //           WM_InvalidateWindow(load_wind);
;;;1105               hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;1106   			if(bit < 6)
;;;1107   			{
;;;1108   				strcat(set_limit,num);
;;;1109   			}
;;;1110   			if(dot_flag != 0 && strcmp(num,".") == 0)
;;;1111   			{
;;;1112   				
;;;1113   			}else{			
;;;1114   				
;;;1115   				if(dot_flag == 0 && strcmp(num,".") == 0)
;;;1116   				{
;;;1117   					dot_flag = bit;
;;;1118   				}
;;;1119   				bit ++;
;;;1120   			}
;;;1121   			TEXT_SetText(hItem,set_limit);
;;;1122   //            switch(bit){
;;;1123   //                case 1:
;;;1124   //                {
;;;1125   //					for(i=0;i<6;i++)
;;;1126   //					{
;;;1127   //						set_limit[i] = '\0';
;;;1128   //					}
;;;1129   //                    load_v = atoi(num) * 1000;
;;;1130   //                    strcat(set_limit,num);            
;;;1131   //                    TEXT_SetText(hItem,set_limit);
;;;1132   //                    
;;;1133   //                    bit = 2;
;;;1134   //                    break;
;;;1135   //                }
;;;1136   //                case 2:
;;;1137   //                {
;;;1138   //                    strcat(set_limit,num);            
;;;1139   //                    TEXT_SetText(hItem,set_limit);
;;;1140   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1141   //                    {
;;;1142   //                        dot_flag = 1;
;;;1143   //                    }else{
;;;1144   //                        load_v = load_v * 10 + atoi(num) * 1000;
;;;1145   //                    }
;;;1146   //                    bit = 3;
;;;1147   //                    break;
;;;1148   //                }
;;;1149   //                case 3:
;;;1150   //                {
;;;1151   //                    strcat(set_limit,num);
;;;1152   //                    TEXT_SetText(hItem,set_limit);
;;;1153   //                    if(dot_flag == 0)
;;;1154   //                    {
;;;1155   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1156   //                        {                            
;;;1157   //                            dot_flag = 2;
;;;1158   //                        }else{
;;;1159   //                            load_v = 0;
;;;1160   //                        }
;;;1161   //                    }else{
;;;1162   //                        load_v = load_v + atoi(num) * 100;
;;;1163   //                    }                  
;;;1164   //                    bit = 4;
;;;1165   //                    break;
;;;1166   //                }
;;;1167   //                case 4:
;;;1168   //                {
;;;1169   //                    strcat(set_limit,num);
;;;1170   //                    TEXT_SetText(hItem,set_limit);
;;;1171   //                    if(dot_flag == 0)
;;;1172   //                    {
;;;1173   //                        load_v = 0;
;;;1174   //                    }else if(dot_flag == 2){
;;;1175   //                        load_v = load_v + atoi(num) * 100;
;;;1176   //                    }else{
;;;1177   //                        load_v = load_v + atoi(num) * 10;
;;;1178   //                    }                  
;;;1179   //                    bit = 5;
;;;1180   //                    break;
;;;1181   //                }
;;;1182   //                case 5:
;;;1183   //                {
;;;1184   //                    strcat(set_limit,num);
;;;1185   //                    TEXT_SetText(hItem,set_limit);
;;;1186   //                    if(dot_flag == 0)
;;;1187   //                    {
;;;1188   //                        load_v = 0;
;;;1189   //                    }else if(dot_flag == 1){
;;;1190   //                        load_v = load_v + atoi(num);
;;;1191   //                    }else{
;;;1192   //                        load_v = load_v + atoi(num) * 10;
;;;1193   //                    }                 
;;;1194   //                    bit = 6;
;;;1195   //                    break;
;;;1196   //                }
;;;1197   //                case 6:
;;;1198   //                {
;;;1199   //                    strcat(set_limit,num);
;;;1200   //                    TEXT_SetText(hItem,set_limit);
;;;1201   //                    if(dot_flag == 0)
;;;1202   //                    {
;;;1203   //                        load_v = 0;
;;;1204   //                    }else if(dot_flag == 2){
;;;1205   //                        load_v = load_v + atoi(num);
;;;1206   //                    }                 
;;;1207   //                    bit = 1;
;;;1208   //                    break;
;;;1209   //                }
;;;1210   //            }
;;;1211               break;
;;;1212               
;;;1213           }
;;;1214   		case set_87:
;;;1215           {
;;;1216               WM_HWIN hItem;
;;;1217    //           WM_InvalidateWindow(load_wind);
;;;1218               hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
00001e  f640112d          MOV      r1,#0x92d
000022  f7fffffe          BL       WM_GetDialogItem
000026  4607              MOV      r7,r0
;;;1219   			if(bit < 6)
000028  7828              LDRB     r0,[r5,#0]  ; bit
00002a  2806              CMP      r0,#6
00002c  d203              BCS      |L3.54|
;;;1220   			{
;;;1221   				strcat(set_limit,num);
00002e  4631              MOV      r1,r6
000030  4839              LDR      r0,|L3.280|
000032  f7fffffe          BL       strcat
                  |L3.54|
;;;1222   			}
;;;1223   			if(dot_flag != 0 && strcmp(num,".") == 0)
000036  7820              LDRB     r0,[r4,#0]  ; dot_flag
000038  b128              CBZ      r0,|L3.70|
00003a  a138              ADR      r1,|L3.284|
00003c  4630              MOV      r0,r6
00003e  f7fffffe          BL       strcmp
000042  2800              CMP      r0,#0
000044  d057              BEQ      |L3.246|
                  |L3.70|
;;;1224   			{
;;;1225   				
;;;1226   			}else{			
;;;1227   				
;;;1228   				if(dot_flag == 0 && strcmp(num,".") == 0)
000046  7820              LDRB     r0,[r4,#0]  ; dot_flag
000048  2800              CMP      r0,#0
00004a  d04a              BEQ      |L3.226|
00004c  e050              B        |L3.240|
                  |L3.78|
00004e  f640016e          MOV      r1,#0x86e             ;992
000052  f7fffffe          BL       WM_GetDialogItem
000056  4607              MOV      r7,r0                 ;992
000058  7828              LDRB     r0,[r5,#0]            ;993  ; bit
00005a  2806              CMP      r0,#6                 ;993
00005c  d203              BCS      |L3.102|
00005e  4631              MOV      r1,r6                 ;995
000060  482d              LDR      r0,|L3.280|
000062  f7fffffe          BL       strcat
                  |L3.102|
000066  7820              LDRB     r0,[r4,#0]            ;997  ; dot_flag
000068  b120              CBZ      r0,|L3.116|
00006a  a12c              ADR      r1,|L3.284|
00006c  4630              MOV      r0,r6                 ;997
00006e  f7fffffe          BL       strcmp
000072  b158              CBZ      r0,|L3.140|
                  |L3.116|
000074  7820              LDRB     r0,[r4,#0]            ;1002  ; dot_flag
000076  b930              CBNZ     r0,|L3.134|
000078  a128              ADR      r1,|L3.284|
00007a  4630              MOV      r0,r6                 ;1002
00007c  f7fffffe          BL       strcmp
000080  b908              CBNZ     r0,|L3.134|
000082  7828              LDRB     r0,[r5,#0]            ;1004  ; bit
000084  7020              STRB     r0,[r4,#0]            ;1004
                  |L3.134|
000086  7828              LDRB     r0,[r5,#0]            ;1006  ; bit
000088  1c40              ADDS     r0,r0,#1              ;1006
00008a  7028              STRB     r0,[r5,#0]            ;1006
                  |L3.140|
00008c  4638              MOV      r0,r7                 ;1008
00008e  e8bd41f0          POP      {r4-r8,lr}            ;1008
000092  4921              LDR      r1,|L3.280|
000094  f7ffbffe          B.W      TEXT_SetText
                  |L3.152|
000098  f6401111          MOV      r1,#0x911             ;1105
00009c  f7fffffe          BL       WM_GetDialogItem
0000a0  4607              MOV      r7,r0                 ;1105
0000a2  7828              LDRB     r0,[r5,#0]            ;1106  ; bit
0000a4  2806              CMP      r0,#6                 ;1106
0000a6  d203              BCS      |L3.176|
0000a8  4631              MOV      r1,r6                 ;1108
0000aa  481b              LDR      r0,|L3.280|
0000ac  f7fffffe          BL       strcat
                  |L3.176|
0000b0  7820              LDRB     r0,[r4,#0]            ;1110  ; dot_flag
0000b2  b120              CBZ      r0,|L3.190|
0000b4  a119              ADR      r1,|L3.284|
0000b6  4630              MOV      r0,r6                 ;1110
0000b8  f7fffffe          BL       strcmp
0000bc  b158              CBZ      r0,|L3.214|
                  |L3.190|
0000be  7820              LDRB     r0,[r4,#0]            ;1115  ; dot_flag
0000c0  b930              CBNZ     r0,|L3.208|
0000c2  a116              ADR      r1,|L3.284|
0000c4  4630              MOV      r0,r6                 ;1115
0000c6  f7fffffe          BL       strcmp
0000ca  b908              CBNZ     r0,|L3.208|
0000cc  7828              LDRB     r0,[r5,#0]            ;1117  ; bit
0000ce  7020              STRB     r0,[r4,#0]            ;1117
                  |L3.208|
0000d0  7828              LDRB     r0,[r5,#0]            ;1119  ; bit
0000d2  1c40              ADDS     r0,r0,#1              ;1119
0000d4  7028              STRB     r0,[r5,#0]            ;1119
                  |L3.214|
0000d6  4638              MOV      r0,r7                 ;1121
0000d8  e8bd41f0          POP      {r4-r8,lr}            ;1121
0000dc  490e              LDR      r1,|L3.280|
0000de  f7ffbffe          B.W      TEXT_SetText
                  |L3.226|
0000e2  a10e              ADR      r1,|L3.284|
0000e4  4630              MOV      r0,r6
0000e6  f7fffffe          BL       strcmp
0000ea  b908              CBNZ     r0,|L3.240|
;;;1229   				{
;;;1230   					dot_flag = bit;
0000ec  7828              LDRB     r0,[r5,#0]  ; bit
0000ee  7020              STRB     r0,[r4,#0]
                  |L3.240|
;;;1231   				}
;;;1232   				bit ++;
0000f0  7828              LDRB     r0,[r5,#0]  ; bit
0000f2  1c40              ADDS     r0,r0,#1
0000f4  7028              STRB     r0,[r5,#0]
                  |L3.246|
;;;1233   			}
;;;1234   			TEXT_SetText(hItem,set_limit);
0000f6  4638              MOV      r0,r7
0000f8  e8bd41f0          POP      {r4-r8,lr}
0000fc  4906              LDR      r1,|L3.280|
0000fe  f7ffbffe          B.W      TEXT_SetText
                  |L3.258|
;;;1235   //            switch(bit){
;;;1236   //                case 1:
;;;1237   //                {
;;;1238   //					for(i=0;i<6;i++)
;;;1239   //					{
;;;1240   //						set_limit[i] = '\0';
;;;1241   //					}
;;;1242   //                    set_load_cutoffv = atoi(num) * 1000;
;;;1243   //                    strcat(set_limit,num);            
;;;1244   //                    TEXT_SetText(hItem,set_limit);
;;;1245   //                    
;;;1246   //                    bit = 2;
;;;1247   //                    break;
;;;1248   //                }
;;;1249   //                case 2:
;;;1250   //                {
;;;1251   //                    strcat(set_limit,num);            
;;;1252   //                    TEXT_SetText(hItem,set_limit);
;;;1253   //                    if(set_limit[1] == 0x2e)//判断输入是否为小数点
;;;1254   //                    {
;;;1255   //                        dot_flag = 1;
;;;1256   //                    }else{
;;;1257   //                        set_load_cutoffv = set_load_cutoffv * 10 + atoi(num) * 1000;
;;;1258   //                    }
;;;1259   //                    bit = 3;
;;;1260   //                    break;
;;;1261   //                }
;;;1262   //                case 3:
;;;1263   //                {
;;;1264   //                    strcat(set_limit,num);
;;;1265   //                    TEXT_SetText(hItem,set_limit);
;;;1266   //                    if(dot_flag == 0)
;;;1267   //                    {
;;;1268   //                        if(set_limit[2] == 0x2e)//判断输入是否为小数点
;;;1269   //                        {                            
;;;1270   //                            dot_flag = 2;
;;;1271   //                        }else{
;;;1272   //                            set_load_cutoffv = 0;
;;;1273   //                        }
;;;1274   //                    }else{
;;;1275   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1276   //                    }                  
;;;1277   //                    bit = 4;
;;;1278   //                    break;
;;;1279   //                }
;;;1280   //                case 4:
;;;1281   //                {
;;;1282   //                    strcat(set_limit,num);
;;;1283   //                    TEXT_SetText(hItem,set_limit);
;;;1284   //                    if(dot_flag == 0)
;;;1285   //                    {
;;;1286   //                        set_load_cutoffv = 0;
;;;1287   //                    }else if(dot_flag == 2){
;;;1288   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 100;
;;;1289   //                    }else{
;;;1290   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1291   //                    }                  
;;;1292   //                    bit = 5;
;;;1293   //                    break;
;;;1294   //                }
;;;1295   //                case 5:
;;;1296   //                {
;;;1297   //                    strcat(set_limit,num);
;;;1298   //                    TEXT_SetText(hItem,set_limit);
;;;1299   //                    if(dot_flag == 0)
;;;1300   //                    {
;;;1301   //                        set_load_cutoffv = 0;
;;;1302   //                    }else if(dot_flag == 1){
;;;1303   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1304   //                    }else{
;;;1305   //                        set_load_cutoffv = set_load_cutoffv + atoi(num) * 10;
;;;1306   //                    }                 
;;;1307   //                    bit = 6;
;;;1308   //                    break;
;;;1309   //                }
;;;1310   //                case 6:
;;;1311   //                {
;;;1312   //                    strcat(set_limit,num);
;;;1313   //                    TEXT_SetText(hItem,set_limit);
;;;1314   //                    if(dot_flag == 0)
;;;1315   //                    {
;;;1316   //                        set_load_cutoffv = 0;
;;;1317   //                    }else if(dot_flag == 2){
;;;1318   //                        set_load_cutoffv = set_load_cutoffv + atoi(num);
;;;1319   //                    }                 
;;;1320   //                    bit = 1;
;;;1321   //                    break;
;;;1322   //                }
;;;1323   //            }
;;;1324               break;
;;;1325               
;;;1326           }
;;;1327           default:break;
;;;1328       }
;;;1329   }
000102  e8bd81f0          POP      {r4-r8,pc}
;;;1330   
                          ENDP

000106  0000              DCW      0x0000
                  |L3.264|
                          DCD      set_sw
                  |L3.268|
                          DCD      ||.data||
                  |L3.272|
                          DCD      dot_flag
                  |L3.276|
                          DCD      bit
                  |L3.280|
                          DCD      set_limit
                  |L3.284|
00011c  2e00              DCB      ".",0
00011e  00                DCB      0
00011f  00                DCB      0

                          AREA ||i.LOAD_OP_DOWN||, CODE, READONLY, ALIGN=2

                  LOAD_OP_DOWN PROC
;;;633    void LOAD_OP_DOWN(void);
;;;634    void LOAD_OP_DOWN(void)
000000  b570              PUSH     {r4-r6,lr}
;;;635    {
;;;636        switch(set_sw)
000002  4d13              LDR      r5,|L4.80|
000004  7828              LDRB     r0,[r5,#0]  ; set_sw
000006  2841              CMP      r0,#0x41
000008  d120              BNE      |L4.76|
;;;637        {
;;;638    //        case set_24:
;;;639    //        {
;;;640    //            WM_HWIN hItem;
;;;641    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;642    //            TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;643    //            TEXT_SetTextColor(hItem, GUI_WHITE);
;;;644    //            
;;;645    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;646    //            TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;647    //            TEXT_SetTextColor(hItem, GUI_BLACK);
;;;648    
;;;649    //            set_sw = set_66;
;;;650    //            break;
;;;651    //        }
;;;652    //        case set_66:
;;;653    //        {
;;;654    //            WM_HWIN hItem;
;;;655    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;656    //            TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;657    //            TEXT_SetTextColor(hItem, GUI_WHITE);
;;;658    //            
;;;659    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
;;;660    //            TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;661    //            TEXT_SetTextColor(hItem, GUI_BLACK);
;;;662    
;;;663    //            set_sw = set_67;
;;;664    //            break;
;;;665    //        }
;;;666    		 case set_66:
;;;667            {
;;;668                WM_HWIN hItem;
;;;669                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
00000a  4c12              LDR      r4,|L4.84|
00000c  f44f6111          MOV      r1,#0x910
000010  6860              LDR      r0,[r4,#4]  ; load_wind
000012  f7fffffe          BL       WM_GetDialogItem
000016  4606              MOV      r6,r0
;;;670                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000018  f06f4170          MVN      r1,#0xf0000000
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       TEXT_SetBkColor
;;;671                TEXT_SetTextColor(hItem, GUI_WHITE);
000022  f06f417f          MVN      r1,#0xff000000
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       TEXT_SetTextColor
;;;672                
;;;673                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00002c  f6401139          MOV      r1,#0x939
000030  6860              LDR      r0,[r4,#4]  ; load_wind
000032  f7fffffe          BL       WM_GetDialogItem
000036  4604              MOV      r4,r0
;;;674                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000038  4907              LDR      r1,|L4.88|
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       TEXT_SetBkColor
;;;675                TEXT_SetTextColor(hItem, GUI_BLACK);
000040  2100              MOVS     r1,#0
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       TEXT_SetTextColor
;;;676    
;;;677                set_sw = set_86;
000048  2055              MOVS     r0,#0x55
00004a  7028              STRB     r0,[r5,#0]
                  |L4.76|
;;;678                break;
;;;679            }
;;;680        }   
;;;681    }
00004c  bd70              POP      {r4-r6,pc}
;;;682    
                          ENDP

00004e  0000              DCW      0x0000
                  |L4.80|
                          DCD      set_sw
                  |L4.84|
                          DCD      ||.data||
                  |L4.88|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_OP_UP||, CODE, READONLY, ALIGN=2

                  LOAD_OP_UP PROC
;;;683    void LOAD_OP_UP(void);
;;;684    void LOAD_OP_UP(void)
000000  b570              PUSH     {r4-r6,lr}
;;;685    {
;;;686        switch(set_sw)
000002  4d13              LDR      r5,|L5.80|
000004  7828              LDRB     r0,[r5,#0]  ; set_sw
000006  2855              CMP      r0,#0x55
000008  d120              BNE      |L5.76|
;;;687        {
;;;688    //        case set_66:
;;;689    //        {
;;;690    //            WM_HWIN hItem;
;;;691    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;692    //            TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;693    //            TEXT_SetTextColor(hItem, GUI_WHITE);
;;;694    //            
;;;695    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;696    //            TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;697    //            TEXT_SetTextColor(hItem, GUI_BLACK);
;;;698    
;;;699    //            set_sw = set_24;
;;;700    //            break;
;;;701    //        }
;;;702    //        case set_67:
;;;703    //        {
;;;704    //            WM_HWIN hItem;
;;;705    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_120);
;;;706    //            TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;707    //            TEXT_SetTextColor(hItem, GUI_WHITE);
;;;708    //            
;;;709    //            hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;710    //            TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;711    //            TEXT_SetTextColor(hItem, GUI_BLACK);
;;;712    
;;;713    //            set_sw = set_66;
;;;714    //            break;
;;;715    //        }
;;;716    		case set_86:
;;;717            {
;;;718                WM_HWIN hItem;
;;;719                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00000a  4c12              LDR      r4,|L5.84|
00000c  f6401139          MOV      r1,#0x939
000010  6860              LDR      r0,[r4,#4]  ; load_wind
000012  f7fffffe          BL       WM_GetDialogItem
000016  4606              MOV      r6,r0
;;;720                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
000018  f06f4170          MVN      r1,#0xf0000000
00001c  4630              MOV      r0,r6
00001e  f7fffffe          BL       TEXT_SetBkColor
;;;721                TEXT_SetTextColor(hItem, GUI_WHITE);
000022  f06f417f          MVN      r1,#0xff000000
000026  4630              MOV      r0,r6
000028  f7fffffe          BL       TEXT_SetTextColor
;;;722                
;;;723                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
00002c  f44f6111          MOV      r1,#0x910
000030  6860              LDR      r0,[r4,#4]  ; load_wind
000032  f7fffffe          BL       WM_GetDialogItem
000036  4604              MOV      r4,r0
;;;724                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000038  4907              LDR      r1,|L5.88|
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       TEXT_SetBkColor
;;;725                TEXT_SetTextColor(hItem, GUI_BLACK);
000040  2100              MOVS     r1,#0
000042  4620              MOV      r0,r4
000044  f7fffffe          BL       TEXT_SetTextColor
;;;726    
;;;727                set_sw = set_66;
000048  2041              MOVS     r0,#0x41
00004a  7028              STRB     r0,[r5,#0]
                  |L5.76|
;;;728                break;
;;;729            }
;;;730        }   
;;;731    }
00004c  bd70              POP      {r4-r6,pc}
;;;732    
                          ENDP

00004e  0000              DCW      0x0000
                  |L5.80|
                          DCD      set_sw
                  |L5.84|
                          DCD      ||.data||
                  |L5.88|
                          DCD      0x00bfffff

                          AREA ||i.LOAD_SET||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                  LOAD_SET PROC
;;;734    void LOAD_SET(void);
;;;735    void LOAD_SET(void) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b085              SUB      sp,sp,#0x14
;;;736        char    buf[6];
;;;737        float   dis_load_c;
;;;738        float   dis_load_v;
;;;739        vu8 i;
;;;740        switch(set_sw)
00000a  4dfd              LDR      r5,|L6.1024|
00000c  7829              LDRB     r1,[r5,#0]  ; set_sw
;;;741        {
;;;742            case set_24:
;;;743            {
;;;744                WM_HWIN hItem;
;;;745    //            WM_InvalidateWindow(load_wind);
;;;746                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;747                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;748                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;749                       
;;;750                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;751                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;752                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;753                for(i=0;i<6;i++)
;;;754                {
;;;755                    set_limit[i] = '\0';
;;;756                }
;;;757                set_sw = set_25;
;;;758                break;
;;;759            }
;;;760            case set_25:
;;;761            {
;;;762                WM_HWIN hItem;
;;;763    //            WM_InvalidateWindow(lo\\JK_BTSET\../drive/AD7689.c\AD7689_Bufferad_wind);
;;;764                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;765                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;766                TEXT_SetTextColor(hItem, GUI_WHITE);  
;;;767    			if(dot_flag == 0){
;;;768    				load_c = atoi(set_limit)*1000;					
;;;769    			}else if(dot_flag != 0){
;;;770    				memset(buf, '\0', sizeof(buf));
;;;771    				strncpy(buf,set_limit,dot_flag + 3);
;;;772    				load_c = atof(buf)*1000;
00000e  ed9f8bfd          VLDR     d8,|L6.1028|
;;;773    			}
;;;774    			if(load_c > 30000 || (float)load_c/1000 * DISS_Voltage > 200){
000012  f8dfa3f8          LDR      r10,|L6.1036|
;;;775                    load_c = 0;
;;;776                }
;;;777    			if(load_c > 2500)
;;;778    			{
;;;779    				C_SW(1);
;;;780    			}else{
;;;781    				C_SW(0);
;;;782    			}
;;;783                SET_Current_Laod = load_c;            
;;;784    //            if(load_c > 3000)
;;;785    //			{
;;;786    //				C_SW(1);
;;;787    //			}else{
;;;788    //				C_SW(0);
;;;789    //			}
;;;790                dis_load_c = (float)SET_Current_Laod/1000;
;;;791                sprintf(buf,"%.3f",dis_load_c);
;;;792                TEXT_SetText(hItem,buf);
;;;793                
;;;794                hItem = WM_GetDialogItem(load_wind, ID_TEXT_48);
;;;795                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;796                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;797                Write_Limits();
;;;798                
;;;799                set_sw = set_24;
;;;800                bit = 1;
000016  f8df83f8          LDR      r8,|L6.1040|
00001a  2701              MOVS     r7,#1                 ;779
00001c  4afd              LDR      r2,|L6.1044|
00001e  ed9f9afe          VLDR     s18,|L6.1048|
000022  4efe              LDR      r6,|L6.1052|
000024  f8dfb3f8          LDR      r11,|L6.1056|
000028  2400              MOVS     r4,#0                 ;755
00002a  f8df93f8          LDR      r9,|L6.1060|
00002e  6850              LDR      r0,[r2,#4]            ;740
000030  2943              CMP      r1,#0x43              ;740
000032  d07d              BEQ      |L6.304|
000034  dc25              BGT      |L6.130|
000036  2917              CMP      r1,#0x17              ;740
000038  d07b              BEQ      |L6.306|
00003a  2918              CMP      r1,#0x18              ;740
00003c  d07a              BEQ      |L6.308|
00003e  2941              CMP      r1,#0x41              ;740
000040  d179              BNE      |L6.310|
;;;801                dot_flag = 0;
;;;802                break;
;;;803            }
;;;804            case set_66:
;;;805            {
;;;806                WM_HWIN hItem;
;;;807    //            WM_InvalidateWindow(load_wind);
;;;808                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
000042  f44f6111          MOV      r1,#0x910
000046  4616              MOV      r6,r2
000048  f7fffffe          BL       WM_GetDialogItem
00004c  4607              MOV      r7,r0
;;;809                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00004e  f06f4170          MVN      r1,#0xf0000000
000052  4638              MOV      r0,r7
000054  f7fffffe          BL       TEXT_SetBkColor
;;;810                TEXT_SetTextColor(hItem, GUI_WHITE);
000058  f06f417f          MVN      r1,#0xff000000
00005c  4638              MOV      r0,r7
00005e  f7fffffe          BL       TEXT_SetTextColor
;;;811                       
;;;812                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
000062  f6401111          MOV      r1,#0x911
000066  6870              LDR      r0,[r6,#4]  ; load_wind
000068  f7fffffe          BL       WM_GetDialogItem
00006c  4606              MOV      r6,r0
;;;813                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
00006e  49ee              LDR      r1,|L6.1064|
000070  4630              MOV      r0,r6
000072  f7fffffe          BL       TEXT_SetBkColor
;;;814                TEXT_SetTextColor(hItem, GUI_BLACK);
000076  2100              MOVS     r1,#0
000078  4630              MOV      r0,r6
00007a  f7fffffe          BL       TEXT_SetTextColor
;;;815                for(i=0;i<6;i++)
00007e  9402              STR      r4,[sp,#8]
000080  e136              B        |L6.752|
                  |L6.130|
;;;816                {
;;;817                    set_limit[i] = '\0';
;;;818                }
;;;819                set_sw = set_68;
;;;820                break;
;;;821            }
;;;822            case set_68:
;;;823            {
;;;824                WM_HWIN hItem;
;;;825                hItem = WM_GetDialogItem(load_wind, ID_TEXT_123);
;;;826                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;827                TEXT_SetTextColor(hItem, GUI_WHITE); 
;;;828    			if(dot_flag == 0){
;;;829    				load_v = atoi(set_limit)*1000;					
;;;830    			}else if(dot_flag != 0){
;;;831    				memset(buf, '\0', sizeof(buf));
;;;832    				strncpy(buf,set_limit,dot_flag + 3);
;;;833    				load_v = atof(buf)*1000;
;;;834    			}
;;;835    			if(load_v > 60000 || (float)load_v/1000 * DISS_Current > 200){
;;;836                    load_v = 0;
;;;837                }
;;;838                SET_Voltage_Laod = load_v;          
;;;839                pow_v = load_v/10;
;;;840                dis_load_v = (float)SET_Voltage_Laod/1000;
;;;841                sprintf(buf,"%.3f",dis_load_v);
;;;842                TEXT_SetText(hItem,buf);
;;;843                
;;;844                hItem = WM_GetDialogItem(load_wind, ID_TEXT_122);
;;;845                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;846                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;847                Write_Limits();
;;;848                
;;;849                set_sw = set_66;
;;;850                bit = 1;
;;;851                dot_flag = 0;
;;;852                break;
;;;853            }
;;;854    //        case set_67:
;;;855    //        {
;;;856    //            switch(flag_Load_CC)
;;;857    //            {
;;;858    //                case 1:
;;;859    //                {
;;;860    //                    WM_HWIN hItem;
;;;861    //                    hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;862    //                    TEXT_SetText(hItem,"CV");
;;;863    //					flag_Load_CC = 0;
;;;864    //                    GPIO_SetBits(GPIOC,GPIO_Pin_10);//CV                  
;;;865    //                    load_mode = 0;
;;;866    //                    Write_LOAD();
;;;867    //                    break;
;;;868    //                }
;;;869    //                case 0:
;;;870    //                {
;;;871    //                     WM_HWIN hItem;
;;;872    //                     hItem = WM_GetDialogItem(load_wind, ID_TEXT_121);
;;;873    //                     TEXT_SetText(hItem,"CC");
;;;874    //					 flag_Load_CC = 1;
;;;875    //                     GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CC                     
;;;876    //                     load_mode =1;
;;;877    //                     Write_LOAD();
;;;878    //                     break;
;;;879    //                }
;;;880    //            }   
;;;881    //        }break;
;;;882    		case set_86:
;;;883            {
;;;884                WM_HWIN hItem;
;;;885    //            WM_InvalidateWindow(load_wind);
;;;886                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
000082  f6401a39          MOV      r10,#0x939
;;;887                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;888                TEXT_SetTextColor(hItem, GUI_WHITE);
;;;889                       
;;;890                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000086  f640162d          MOV      r6,#0x92d
00008a  2955              CMP      r1,#0x55              ;740
00008c  d07e              BEQ      |L6.396|
00008e  2956              CMP      r1,#0x56              ;740
000090  d161              BNE      |L6.342|
;;;891                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
;;;892                TEXT_SetTextColor(hItem, GUI_BLACK);
;;;893                for(i=0;i<6;i++)
;;;894                {
;;;895                    set_limit[i] = '\0';
;;;896                }
;;;897                set_sw = set_87;
;;;898                break;
;;;899            }
;;;900            case set_87:
;;;901            {
;;;902                WM_HWIN hItem;
;;;903                hItem = WM_GetDialogItem(load_wind, ID_TEXT_143);
000092  4631              MOV      r1,r6
000094  4693              MOV      r11,r2
000096  f7fffffe          BL       WM_GetDialogItem
00009a  9001              STR      r0,[sp,#4]
;;;904                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
00009c  f06f4170          MVN      r1,#0xf0000000
0000a0  9801              LDR      r0,[sp,#4]
0000a2  f7fffffe          BL       TEXT_SetBkColor
;;;905                TEXT_SetTextColor(hItem, GUI_WHITE); 
0000a6  f06f417f          MVN      r1,#0xff000000
0000aa  9801              LDR      r0,[sp,#4]
0000ac  f7fffffe          BL       TEXT_SetTextColor
;;;906    			if(dot_flag == 0){
0000b0  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
;;;907    				set_load_cutoffv = atoi(set_limit)*1000;					
0000b4  4edd              LDR      r6,|L6.1068|
0000b6  2800              CMP      r0,#0                 ;906
0000b8  d069              BEQ      |L6.398|
;;;908    			}else if(dot_flag != 0){
0000ba  f8990000          LDRB     r0,[r9,#0]  ; dot_flag
0000be  b1a0              CBZ      r0,|L6.234|
;;;909    				memset(buf, '\0', sizeof(buf));
0000c0  9403              STR      r4,[sp,#0xc]
0000c2  9404              STR      r4,[sp,#0x10]
;;;910    				strncpy(buf,set_limit,dot_flag + 3);
0000c4  f8992000          LDRB     r2,[r9,#0]  ; dot_flag
0000c8  49d5              LDR      r1,|L6.1056|
0000ca  1cd2              ADDS     r2,r2,#3
0000cc  a803              ADD      r0,sp,#0xc
0000ce  f7fffffe          BL       strncpy
;;;911    				set_load_cutoffv = atof(buf)*1000;
0000d2  a803              ADD      r0,sp,#0xc
0000d4  f7fffffe          BL       __hardfp_atof
0000d8  ec532b18          VMOV     r2,r3,d8
0000dc  ec510b10          VMOV     r0,r1,d0
0000e0  f7fffffe          BL       __aeabi_dmul
0000e4  f7fffffe          BL       __aeabi_d2iz
0000e8  6130              STR      r0,[r6,#0x10]  ; InFlashSave
                  |L6.234|
;;;912    			}
;;;913                load_cutoffv = (float)set_load_cutoffv/1000;
0000ea  ed960a04          VLDR     s0,[r6,#0x10]
0000ee  eef80ac0          VCVT.F32.S32 s1,s0
0000f2  ee800a89          VDIV.F32 s0,s1,s18
0000f6  ed8b0a02          VSTR     s0,[r11,#8]
;;;914                sprintf(buf,"%.3f",load_cutoffv);
0000fa  ee100a10          VMOV     r0,s0
0000fe  f7fffffe          BL       __aeabi_f2d
000102  ec410b10          VMOV     d0,r0,r1
000106  a1ca              ADR      r1,|L6.1072|
000108  ec532b10          VMOV     r2,r3,d0
00010c  a803              ADD      r0,sp,#0xc
00010e  f7fffffe          BL       __2sprintf
;;;915                TEXT_SetText(hItem,buf);
000112  a903              ADD      r1,sp,#0xc
000114  9801              LDR      r0,[sp,#4]
000116  f7fffffe          BL       TEXT_SetText
;;;916                
;;;917                hItem = WM_GetDialogItem(load_wind, ID_TEXT_158);
00011a  4651              MOV      r1,r10
00011c  f8db0004          LDR      r0,[r11,#4]  ; load_wind
000120  f7fffffe          BL       WM_GetDialogItem
000124  4606              MOV      r6,r0
;;;918                TEXT_SetBkColor(hItem,0x00BFFFFF);//选项背景色设为米色
000126  49c0              LDR      r1,|L6.1064|
000128  4630              MOV      r0,r6
00012a  f7fffffe          BL       TEXT_SetBkColor
;;;919                TEXT_SetTextColor(hItem, GUI_BLACK);
00012e  e003              B        |L6.312|
                  |L6.304|
000130  e0e5              B        |L6.766|
                  |L6.306|
000132  e015              B        |L6.352|
                  |L6.308|
000134  e046              B        |L6.452|
                  |L6.310|
000136  e00e              B        |L6.342|
                  |L6.312|
000138  2100              MOVS     r1,#0
00013a  4630              MOV      r0,r6
00013c  f7fffffe          BL       TEXT_SetTextColor
;;;920                Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
000140  4aba              LDR      r2,|L6.1068|
000142  2128              MOVS     r1,#0x28
000144  48bc              LDR      r0,|L6.1080|
000146  f7fffffe          BL       Flash_Write32BitDatas
;;;921                
;;;922                set_sw = set_86;
00014a  2055              MOVS     r0,#0x55
00014c  7028              STRB     r0,[r5,#0]
;;;923                bit = 1;
00014e  f8887000          STRB     r7,[r8,#0]
;;;924                dot_flag = 0;
000152  f8894000          STRB     r4,[r9,#0]
                  |L6.342|
;;;925                break;
;;;926            }
;;;927        }
;;;928    }
000156  b005              ADD      sp,sp,#0x14
000158  ecbd8b04          VPOP     {d8-d9}
00015c  e8bd8ff0          POP      {r4-r11,pc}
                  |L6.352|
000160  f640016d          MOV      r1,#0x86d             ;746
000164  4616              MOV      r6,r2                 ;746
000166  f7fffffe          BL       WM_GetDialogItem
00016a  4607              MOV      r7,r0                 ;746
00016c  f06f4170          MVN      r1,#0xf0000000        ;747
000170  4638              MOV      r0,r7                 ;747
000172  f7fffffe          BL       TEXT_SetBkColor
000176  f06f417f          MVN      r1,#0xff000000        ;748
00017a  4638              MOV      r0,r7                 ;748
00017c  f7fffffe          BL       TEXT_SetTextColor
000180  f640016e          MOV      r1,#0x86e             ;750
000184  6870              LDR      r0,[r6,#4]            ;750  ; load_wind
000186  f7fffffe          BL       WM_GetDialogItem
00018a  e001              B        |L6.400|
                  |L6.396|
00018c  e163              B        |L6.1110|
                  |L6.398|
00018e  e18f              B        |L6.1200|
                  |L6.400|
000190  4606              MOV      r6,r0                 ;750
000192  49a5              LDR      r1,|L6.1064|
000194  4630              MOV      r0,r6                 ;751
000196  f7fffffe          BL       TEXT_SetBkColor
00019a  2100              MOVS     r1,#0                 ;752
00019c  4630              MOV      r0,r6                 ;752
00019e  f7fffffe          BL       TEXT_SetTextColor
0001a2  9402              STR      r4,[sp,#8]            ;753
0001a4  e007              B        |L6.438|
                  |L6.422|
0001a6  f89d0008          LDRB     r0,[sp,#8]            ;755
0001aa  f80b4000          STRB     r4,[r11,r0]           ;755
0001ae  f89d0008          LDRB     r0,[sp,#8]            ;753
0001b2  1c40              ADDS     r0,r0,#1              ;753
0001b4  9002              STR      r0,[sp,#8]            ;753
                  |L6.438|
0001b6  f89d0008          LDRB     r0,[sp,#8]            ;753
0001ba  2806              CMP      r0,#6                 ;753
0001bc  d3f3              BCC      |L6.422|
0001be  2018              MOVS     r0,#0x18              ;757
0001c0  7028              STRB     r0,[r5,#0]            ;757
0001c2  e7c8              B        |L6.342|
                  |L6.452|
0001c4  f640016e          MOV      r1,#0x86e             ;764
0001c8  4693              MOV      r11,r2                ;764
0001ca  f7fffffe          BL       WM_GetDialogItem
0001ce  9001              STR      r0,[sp,#4]            ;764
0001d0  f06f4170          MVN      r1,#0xf0000000        ;765
0001d4  9801              LDR      r0,[sp,#4]            ;765
0001d6  f7fffffe          BL       TEXT_SetBkColor
0001da  f06f417f          MVN      r1,#0xff000000        ;766
0001de  9801              LDR      r0,[sp,#4]            ;766
0001e0  f7fffffe          BL       TEXT_SetTextColor
0001e4  f8990000          LDRB     r0,[r9,#0]            ;767  ; dot_flag
0001e8  b3d8              CBZ      r0,|L6.610|
0001ea  f8990000          LDRB     r0,[r9,#0]            ;769  ; dot_flag
0001ee  b1a8              CBZ      r0,|L6.540|
0001f0  9403              STR      r4,[sp,#0xc]          ;770
0001f2  9404              STR      r4,[sp,#0x10]         ;770
0001f4  f8992000          LDRB     r2,[r9,#0]            ;771  ; dot_flag
0001f8  4989              LDR      r1,|L6.1056|
0001fa  1cd2              ADDS     r2,r2,#3              ;771
0001fc  a803              ADD      r0,sp,#0xc            ;771
0001fe  f7fffffe          BL       strncpy
000202  a803              ADD      r0,sp,#0xc            ;772
000204  f7fffffe          BL       __hardfp_atof
000208  ec532b18          VMOV     r2,r3,d8              ;772
00020c  ec510b10          VMOV     r0,r1,d0              ;772
000210  f7fffffe          BL       __aeabi_dmul
000214  f7fffffe          BL       __aeabi_d2uiz
000218  f8c60094          STR      r0,[r6,#0x94]         ;772  ; Run_Control
                  |L6.540|
00021c  f8d60094          LDR      r0,[r6,#0x94]         ;774  ; Run_Control
000220  f2475130          MOV      r1,#0x7530            ;774
000224  4288              CMP      r0,r1                 ;774
000226  d810              BHI      |L6.586|
000228  f8d60094          LDR      r0,[r6,#0x94]         ;774  ; Run_Control
00022c  ee000a10          VMOV     s0,r0                 ;774
000230  4882              LDR      r0,|L6.1084|
000232  eef80a40          VCVT.F32.U32 s1,s0                 ;774
000236  ee800a89          VDIV.F32 s0,s1,s18             ;774
00023a  edd00a00          VLDR     s1,[r0,#0]            ;774
00023e  ee200a20          VMUL.F32 s0,s0,s1              ;774
000242  ee100a10          VMOV     r0,s0                 ;774
000246  4550              CMP      r0,r10                ;774
000248  dd01              BLE      |L6.590|
                  |L6.586|
00024a  f8c64094          STR      r4,[r6,#0x94]         ;775  ; Run_Control
                  |L6.590|
00024e  f8d60094          LDR      r0,[r6,#0x94]         ;777  ; Run_Control
000252  f64011c4          MOV      r1,#0x9c4             ;777
000256  4288              CMP      r0,r1                 ;777
000258  d90d              BLS      |L6.630|
00025a  2001              MOVS     r0,#1                 ;779
00025c  f7fffffe          BL       C_SW
000260  e00c              B        |L6.636|
                  |L6.610|
000262  e7ff              B        |L6.612|
                  |L6.612|
000264  486e              LDR      r0,|L6.1056|
000266  f7fffffe          BL       atoi
00026a  f44f717a          MOV      r1,#0x3e8             ;768
00026e  4348              MULS     r0,r1,r0              ;768
000270  f8c60094          STR      r0,[r6,#0x94]         ;768  ; Run_Control
000274  e7d2              B        |L6.540|
                  |L6.630|
000276  2000              MOVS     r0,#0                 ;781
000278  f7fffffe          BL       C_SW
                  |L6.636|
00027c  f8d60094          LDR      r0,[r6,#0x94]         ;783  ; Run_Control
000280  6130              STR      r0,[r6,#0x10]         ;783  ; Run_Control
000282  6930              LDR      r0,[r6,#0x10]         ;790  ; Run_Control
000284  ee000a10          VMOV     s0,r0                 ;790
000288  eef80a40          VCVT.F32.U32 s1,s0                 ;790
00028c  ee800a89          VDIV.F32 s0,s1,s18             ;790
000290  ee100a10          VMOV     r0,s0                 ;791
000294  f7fffffe          BL       __aeabi_f2d
000298  ec410b10          VMOV     d0,r0,r1              ;791
00029c  a164              ADR      r1,|L6.1072|
00029e  ec532b10          VMOV     r2,r3,d0              ;791
0002a2  a803              ADD      r0,sp,#0xc            ;791
0002a4  f7fffffe          BL       __2sprintf
0002a8  a903              ADD      r1,sp,#0xc            ;792
0002aa  9801              LDR      r0,[sp,#4]            ;792
0002ac  f7fffffe          BL       TEXT_SetText
0002b0  f640016d          MOV      r1,#0x86d             ;794
0002b4  f8db0004          LDR      r0,[r11,#4]           ;794  ; load_wind
0002b8  f7fffffe          BL       WM_GetDialogItem
0002bc  4606              MOV      r6,r0                 ;794
0002be  495a              LDR      r1,|L6.1064|
0002c0  4630              MOV      r0,r6                 ;795
0002c2  f7fffffe          BL       TEXT_SetBkColor
0002c6  2100              MOVS     r1,#0                 ;796
0002c8  4630              MOV      r0,r6                 ;796
0002ca  f7fffffe          BL       TEXT_SetTextColor
0002ce  f7fffffe          BL       Write_Limits
0002d2  2017              MOVS     r0,#0x17              ;799
0002d4  7028              STRB     r0,[r5,#0]            ;799
0002d6  f8887000          STRB     r7,[r8,#0]            ;800
0002da  f8894000          STRB     r4,[r9,#0]            ;801
0002de  e73a              B        |L6.342|
                  |L6.736|
0002e0  f89d0008          LDRB     r0,[sp,#8]            ;817
0002e4  f80b4000          STRB     r4,[r11,r0]           ;817
0002e8  f89d0008          LDRB     r0,[sp,#8]            ;815
0002ec  1c40              ADDS     r0,r0,#1              ;815
0002ee  9002              STR      r0,[sp,#8]            ;815
                  |L6.752|
0002f0  f89d0008          LDRB     r0,[sp,#8]            ;815
0002f4  2806              CMP      r0,#6                 ;815
0002f6  d3f3              BCC      |L6.736|
0002f8  2043              MOVS     r0,#0x43              ;819
0002fa  7028              STRB     r0,[r5,#0]            ;819
0002fc  e72b              B        |L6.342|
                  |L6.766|
0002fe  f6401111          MOV      r1,#0x911             ;825
000302  4693              MOV      r11,r2                ;825
000304  f7fffffe          BL       WM_GetDialogItem
000308  9001              STR      r0,[sp,#4]            ;825
00030a  f06f4170          MVN      r1,#0xf0000000        ;826
00030e  9801              LDR      r0,[sp,#4]            ;826
000310  f7fffffe          BL       TEXT_SetBkColor
000314  f06f417f          MVN      r1,#0xff000000        ;827
000318  9801              LDR      r0,[sp,#4]            ;827
00031a  f7fffffe          BL       TEXT_SetTextColor
00031e  f8990000          LDRB     r0,[r9,#0]            ;828  ; dot_flag
000322  b3e8              CBZ      r0,|L6.928|
000324  f8990000          LDRB     r0,[r9,#0]            ;830  ; dot_flag
000328  b1a8              CBZ      r0,|L6.854|
00032a  9403              STR      r4,[sp,#0xc]          ;831
00032c  9404              STR      r4,[sp,#0x10]         ;831
00032e  f8992000          LDRB     r2,[r9,#0]            ;832  ; dot_flag
000332  493b              LDR      r1,|L6.1056|
000334  1cd2              ADDS     r2,r2,#3              ;832
000336  a803              ADD      r0,sp,#0xc            ;832
000338  f7fffffe          BL       strncpy
00033c  a803              ADD      r0,sp,#0xc            ;833
00033e  f7fffffe          BL       __hardfp_atof
000342  ec532b18          VMOV     r2,r3,d8              ;833
000346  ec510b10          VMOV     r0,r1,d0              ;833
00034a  f7fffffe          BL       __aeabi_dmul
00034e  f7fffffe          BL       __aeabi_d2uiz
000352  f8c600a4          STR      r0,[r6,#0xa4]         ;833  ; Run_Control
                  |L6.854|
000356  f8d600a4          LDR      r0,[r6,#0xa4]         ;835  ; Run_Control
00035a  f64e2160          MOV      r1,#0xea60            ;835
00035e  4288              CMP      r0,r1                 ;835
000360  d810              BHI      |L6.900|
000362  f8d600a4          LDR      r0,[r6,#0xa4]         ;835  ; Run_Control
000366  ee000a10          VMOV     s0,r0                 ;835
00036a  4835              LDR      r0,|L6.1088|
00036c  eef80a40          VCVT.F32.U32 s1,s0                 ;835
000370  ee800a89          VDIV.F32 s0,s1,s18             ;835
000374  edd00a00          VLDR     s1,[r0,#0]            ;835
000378  ee200a20          VMUL.F32 s0,s0,s1              ;835
00037c  ee100a10          VMOV     r0,s0                 ;835
000380  4550              CMP      r0,r10                ;835
000382  dd01              BLE      |L6.904|
                  |L6.900|
000384  f8c640a4          STR      r4,[r6,#0xa4]         ;836  ; Run_Control
                  |L6.904|
000388  f8d600a4          LDR      r0,[r6,#0xa4]         ;838  ; Run_Control
00038c  60f0              STR      r0,[r6,#0xc]          ;838  ; Run_Control
00038e  f8d600a4          LDR      r0,[r6,#0xa4]         ;839  ; Run_Control
000392  210a              MOVS     r1,#0xa               ;839
000394  fbb0f0f1          UDIV     r0,r0,r1              ;839
000398  f8c60098          STR      r0,[r6,#0x98]         ;839  ; Run_Control
00039c  68f0              LDR      r0,[r6,#0xc]          ;840  ; Run_Control
00039e  e000              B        |L6.930|
                  |L6.928|
0003a0  e050              B        |L6.1092|
                  |L6.930|
0003a2  ee000a10          VMOV     s0,r0                 ;840
0003a6  eef80a40          VCVT.F32.U32 s1,s0                 ;840
0003aa  ee800a89          VDIV.F32 s0,s1,s18             ;840
0003ae  ee100a10          VMOV     r0,s0                 ;841
0003b2  f7fffffe          BL       __aeabi_f2d
0003b6  ec410b10          VMOV     d0,r0,r1              ;841
0003ba  a11d              ADR      r1,|L6.1072|
0003bc  ec532b10          VMOV     r2,r3,d0              ;841
0003c0  a803              ADD      r0,sp,#0xc            ;841
0003c2  f7fffffe          BL       __2sprintf
0003c6  a903              ADD      r1,sp,#0xc            ;842
0003c8  9801              LDR      r0,[sp,#4]            ;842
0003ca  f7fffffe          BL       TEXT_SetText
0003ce  f44f6111          MOV      r1,#0x910             ;844
0003d2  f8db0004          LDR      r0,[r11,#4]           ;844  ; load_wind
0003d6  f7fffffe          BL       WM_GetDialogItem
0003da  4606              MOV      r6,r0                 ;844
0003dc  4912              LDR      r1,|L6.1064|
0003de  4630              MOV      r0,r6                 ;845
0003e0  f7fffffe          BL       TEXT_SetBkColor
0003e4  2100              MOVS     r1,#0                 ;846
0003e6  4630              MOV      r0,r6                 ;846
0003e8  f7fffffe          BL       TEXT_SetTextColor
0003ec  f7fffffe          BL       Write_Limits
0003f0  2041              MOVS     r0,#0x41              ;849
0003f2  7028              STRB     r0,[r5,#0]            ;849
0003f4  f8887000          STRB     r7,[r8,#0]            ;850
0003f8  f8894000          STRB     r4,[r9,#0]            ;851
0003fc  e6ab              B        |L6.342|
0003fe  0000              DCW      0x0000
                  |L6.1024|
                          DCD      set_sw
                  |L6.1028|
000404  00000000          DCFD     0x408f400000000000 ; 1000
000408  408f4000
                  |L6.1036|
                          DCD      0x43480000
                  |L6.1040|
                          DCD      bit
                  |L6.1044|
                          DCD      ||.data||
                  |L6.1048|
000418  447a0000          DCFS     0x447a0000 ; 1000
                  |L6.1052|
                          DCD      Run_Control
                  |L6.1056|
                          DCD      set_limit
                  |L6.1060|
                          DCD      dot_flag
                  |L6.1064|
                          DCD      0x00bfffff
                  |L6.1068|
                          DCD      InFlashSave
                  |L6.1072|
000430  252e3366          DCB      "%.3f",0
000434  00      
000435  00                DCB      0
000436  00                DCB      0
000437  00                DCB      0
                  |L6.1080|
                          DCD      0x080e0000
                  |L6.1084|
                          DCD      DISS_Voltage
                  |L6.1088|
                          DCD      DISS_Current
                  |L6.1092|
000444  481e              LDR      r0,|L6.1216|
000446  f7fffffe          BL       atoi
00044a  f44f717a          MOV      r1,#0x3e8             ;829
00044e  4348              MULS     r0,r1,r0              ;829
000450  f8c600a4          STR      r0,[r6,#0xa4]         ;829  ; Run_Control
000454  e77f              B        |L6.854|
                  |L6.1110|
000456  4651              MOV      r1,r10                ;886
000458  4617              MOV      r7,r2                 ;886
00045a  f7fffffe          BL       WM_GetDialogItem
00045e  4680              MOV      r8,r0                 ;886
000460  f06f4170          MVN      r1,#0xf0000000        ;887
000464  4640              MOV      r0,r8                 ;887
000466  f7fffffe          BL       TEXT_SetBkColor
00046a  f06f417f          MVN      r1,#0xff000000        ;888
00046e  4640              MOV      r0,r8                 ;888
000470  f7fffffe          BL       TEXT_SetTextColor
000474  4631              MOV      r1,r6                 ;890
000476  6878              LDR      r0,[r7,#4]            ;890  ; load_wind
000478  f7fffffe          BL       WM_GetDialogItem
00047c  4606              MOV      r6,r0                 ;890
00047e  4911              LDR      r1,|L6.1220|
000480  4630              MOV      r0,r6                 ;891
000482  f7fffffe          BL       TEXT_SetBkColor
000486  2100              MOVS     r1,#0                 ;892
000488  4630              MOV      r0,r6                 ;892
00048a  f7fffffe          BL       TEXT_SetTextColor
00048e  9402              STR      r4,[sp,#8]            ;893
000490  e007              B        |L6.1186|
                  |L6.1170|
000492  f89d0008          LDRB     r0,[sp,#8]            ;895
000496  f80b4000          STRB     r4,[r11,r0]           ;895
00049a  f89d0008          LDRB     r0,[sp,#8]            ;893
00049e  1c40              ADDS     r0,r0,#1              ;893
0004a0  9002              STR      r0,[sp,#8]            ;893
                  |L6.1186|
0004a2  f89d0008          LDRB     r0,[sp,#8]            ;893
0004a6  2806              CMP      r0,#6                 ;893
0004a8  d3f3              BCC      |L6.1170|
0004aa  2056              MOVS     r0,#0x56              ;897
0004ac  7028              STRB     r0,[r5,#0]            ;897
0004ae  e652              B        |L6.342|
                  |L6.1200|
0004b0  4803              LDR      r0,|L6.1216|
0004b2  f7fffffe          BL       atoi
0004b6  f44f717a          MOV      r1,#0x3e8             ;907
0004ba  4348              MULS     r0,r1,r0              ;907
0004bc  6130              STR      r0,[r6,#0x10]         ;907  ; InFlashSave
0004be  e614              B        |L6.234|
;;;929    void DEL_LOAD(void)
                          ENDP

                  |L6.1216|
                          DCD      set_limit
                  |L6.1220|
                          DCD      0x00bfffff

                          AREA ||i.ResetLoad||, CODE, READONLY, ALIGN=2

                  ResetLoad PROC
;;;627    
;;;628    WM_HWIN ResetLoad(void) {
000000  b51c              PUSH     {r2-r4,lr}
;;;629      load_wind = GUI_CreateDialogBox(_aDialogCreate2, GUI_COUNTOF(_aDialogCreate2), _cbDialog2, WM_HBKWIN, 0, 0);
000002  f7fffffe          BL       WM_GetDesktopWindow
000006  4603              MOV      r3,r0
000008  2000              MOVS     r0,#0
00000a  9000              STR      r0,[sp,#0]
00000c  9001              STR      r0,[sp,#4]
00000e  4a04              LDR      r2,|L7.32|
000010  2111              MOVS     r1,#0x11
000012  4804              LDR      r0,|L7.36|
000014  f7fffffe          BL       GUI_CreateDialogBox
000018  4903              LDR      r1,|L7.40|
00001a  6048              STR      r0,[r1,#4]  ; load_wind
;;;630      return load_wind;
;;;631    }
00001c  bd1c              POP      {r2-r4,pc}
;;;632    
                          ENDP

00001e  0000              DCW      0x0000
                  |L7.32|
                          DCD      _cbDialog2
                  |L7.36|
                          DCD      ||.constdata||
                  |L7.40|
                          DCD      ||.data||

                          AREA ||i._cbDialog2||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_widthprec
                          REQUIRE _printf_f
                          REQUIRE _printf_fp_dec
                          REQUIRE _printf_pre_padding
                          REQUIRE _printf_flags
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  _cbDialog2 PROC
;;;101    
;;;102    static void _cbDialog2(WM_MESSAGE * pMsg) {
000000  e92d4ff0          PUSH     {r4-r11,lr}
000004  ed2d8b04          VPUSH    {d8-d9}
000008  b083              SUB      sp,sp,#0xc
00000a  4604              MOV      r4,r0
;;;103      WM_HWIN hItem;
;;;104      int     NCode;
;;;105      int     Id;
;;;106      char    buf[6];
;;;107      static vu8 status_flash;
;;;108      float   dis_load_c = (float)SET_Current_Laod/1000;
00000c  4dfe              LDR      r5,|L8.1032|
00000e  6928              LDR      r0,[r5,#0x10]  ; Run_Control
000010  ed9f9afe          VLDR     s18,|L8.1036|
;;;109      float   dis_load_v = (float)SET_Voltage_Laod/1000;
000014  68e8              LDR      r0,[r5,#0xc]  ; Run_Control
000016  ee000a10          VMOV     s0,r0
00001a  eeb80a40          VCVT.F32.U32 s0,s0
00001e  eec09a09          VDIV.F32 s19,s0,s18
;;;110      static float olvbuff,oldv;
;;;111      static float testc1,testc2,testres;
;;;112      static vu8 testflag;
;;;113      // USER START (Optionally insert additional variables)
;;;114      // USER END
;;;115    
;;;116      switch (pMsg->MsgId) {
;;;117    
;;;118    	case WM_PAINT://无效化重绘
;;;119    		GUI_SetColor(GUI_WHITE);//设置画笔颜色
;;;120            GUI_FillRect(0,25,480,26);//画一条实线
;;;121            GUI_SetColor(GUI_ORANGE);
;;;122            GUI_SetFont(&GUI_Fontsymbol);
;;;123            GUI_UC_SetEncodeUTF8();
;;;124            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;125            GUI_DispStringAt("Jinko", 5, 1);//SET
;;;126            GUI_SetColor(GUI_WHITE);
;;;127            GUI_SetFont(&GUI_FontHZ20S);
;;;128            GUI_UC_SetEncodeUTF8();
;;;129            GUI_SetTextMode(GUI_TM_TRANS);//设置文本模式为底色透明
;;;130            GUI_DispStringAt("测量显示", 130, 3);//SET
;;;131            GUI_SetColor(GUI_WHITE);//设置前景色为白色
;;;132    //         GUI_SetFont(&GUI_FontD24x32);//
;;;133    // 		GUI_GotoXY(95,72);//设置显示坐标
;;;134    // 		GUI_DispFloatFix(DISS_Voltage,5,2);//显示电压值
;;;135    // 		GUI_GotoXY(95,140);//设置显示坐标
;;;136    // 		GUI_DispFloatFix(DISS_Current,5,2);//显示电流值
;;;137            GUI_SetFont(&GUI_Font24_1);
;;;138    //        GUI_DispStringAt("A",450,75);
;;;139            GUI_DispStringAt("V",450,100.);
;;;140            GUI_DispStringAt("V",450,150);
;;;141        
;;;142            GUI_SetFont(&GUI_FontEN40);
;;;143            GUI_SetColor(GUI_LIGHTGRAY);
000022  4efb              LDR      r6,|L8.1040|
;;;144            GUI_DispStringAt("C:", 28, 190);
;;;145            GUI_SetColor(GUI_LIGHTGRAY);
;;;146            GUI_DispStringAt("m", 217, 196);
;;;147            GUI_DispStringAt("AH", 238, 187);
;;;148            
;;;149            GUI_SetColor(GUI_GREEN);
;;;150            GUI_SetFont(&GUI_Fontunit);
;;;151            GUI_DispStringAt("°",342, 2);
;;;152            GUI_SetFont(&GUI_Font24_1);
;;;153            GUI_DispStringAt("C",350, 2);
;;;154    //        DrawLock();
;;;155    //        GUI_SetColor(GUI_WHITE);
;;;156    //        GUI_SetFont(&GUI_Fontset_font);
;;;157    //        GUI_DispStringAt("过放电压",290, 150);
;;;158    		break;
;;;159    	case WM_KEY://接受按键消息来处理按键功能
;;;160    		switch (((WM_KEY_INFO*)(pMsg->Data.p))->Key) 
;;;161    		{ 
;;;162    			case GUI_KEY_TAB:
;;;163    
;;;164    			break;
;;;165    			
;;;166    			case GUI_KEY_ENTER:
;;;167    			break;
;;;168    		}
;;;169    	break;
;;;170    		
;;;171    	case WM_TIMER://定时模块消息
;;;172    	if(WM_GetTimerId(pMsg->Data.v) == ID_TimerTime1)
;;;173    	{
;;;174    //        lockstat2 = lockstat1;
;;;175    //        lockstat1 = lock;
;;;176            
;;;177    //        if((vu32)(DISS_Current*1000) > SET_Current_Laod)
;;;178    //        {
;;;179    //            testflag = 1;
;;;180    //        }else{
;;;181    //            testflag = 0;
;;;182    //            testc1 = testc2 = 0;
;;;183    //        }
;;;184    //        if(testflag == 1)
;;;185    //        {
;;;186    //            testc2 = testc1;
;;;187    //            testc1 = DISS_Current;
;;;188    //            if(testc1 < testc2)
;;;189    //            {
;;;190    //                testres = testc2;
;;;191    //                testflag = 0;
;;;192    //                testc1 = testc2 = 0;
;;;193    //            }
;;;194    //        }
;;;195            
;;;196            
;;;197    //        if(lockstat1 != lockstat2)
;;;198    //        {
;;;199    //            WM_InvalidateWindow(load_wind);
;;;200    //        }
;;;201    //         if(clear_flag3 == 1)
;;;202    //         {
;;;203    			if(lock == 1)
;;;204    			{
;;;205    				hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;206    				TEXT_SetText(hItem,"锁");
;;;207    			}else{
;;;208    				hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;209    				TEXT_SetText(hItem,"");
;;;210    			}
;;;211                if(DISS_Voltage < 0.3)
;;;212                {
;;;213                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;214                    sprintf(buf,"%.3f",0.000);       
;;;215                    TEXT_SetText(hItem,buf);
;;;216                }else{hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;218                    sprintf(buf,"%.3f",disloadv);       
;;;219                    TEXT_SetText(hItem,buf);
;;;220                }
;;;221    //         }else{
;;;222    //             hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;223    //             sprintf(buf,"%.3f",DISS_Voltage);       
;;;224    //             TEXT_SetText(hItem,buf);
;;;225    //         }
;;;226            if((float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;227                SET_Current_Laod = 0;
;;;228                hItem = WM_GetDialogItem(load_wind, ID_TEXT_49);
;;;229                TEXT_SetBkColor(hItem,GUI_INVALID_COLOR);//选项背景色设为透明
;;;230                TEXT_SetTextColor(hItem, GUI_WHITE);            
;;;231                if(SET_Current_Laod > 55000 || (float)SET_Current_Laod/1000 * DISS_Voltage > 200){
;;;232                    SET_Current_Laod = 0;
;;;233                }
;;;234                dis_load_c = (float)SET_Current_Laod/1000;
;;;235                sprintf(buf,"%.3f",dis_load_c);
;;;236                TEXT_SetText(hItem,buf);
;;;237            }
;;;238            
;;;239                
;;;240            
;;;241    //        test_load();
;;;242            
;;;243            if(load_sw == load_on)
;;;244            {
;;;245                if(/*DISS_Current >= 30*/SET_Current_Laod >= 30000)
;;;246                {
;;;247                    alert_flag = 1;
;;;248                }else{
;;;249                    alert_flag = 0;
;;;250                }
;;;251                battery_c = (int)bc_raw;
;;;252                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;253                sprintf(buf,"%05d",battery_c);    
;;;254                TEXT_SetText(hItem,buf);
;;;255                
;;;256                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;257                sprintf(buf,"%.3f",DISS_Current);        
;;;258                TEXT_SetText(hItem,buf);
;;;259                if(status_flash == 0){
;;;260                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;261                    TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;262                    TEXT_SetFont(hItem,&GUI_FontHZ16);//设定文本字体
;;;263                    GUI_UC_SetEncodeUTF8();        
;;;264                    TEXT_SetText(hItem,"放电中");
;;;265                    status_flash = 1;
;;;266                }else{
;;;267                    hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;268                    TEXT_SetText(hItem,"");
;;;269                    status_flash = 0;
;;;270                }
;;;271                if(load_cutoffv != 0 && DISS_Voltage < load_cutoffv)
;;;272    			{
;;;273    				Flag_Swtich_ON=0;
;;;274                    GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;275                    mode_sw = 0;
;;;276                    load_sw = load_off;
;;;277    			}
;;;278                
;;;279    //            if(olvbuff != 0 && olvbuff - DISS_Voltage > 0.3)
;;;280    //            {
;;;281    //                Flag_Swtich_ON=0;
;;;282    //                GPIO_SetBits(GPIOA,GPIO_Pin_15);
;;;283    //                mode_sw = 0;
;;;284    //                load_sw = load_off;
;;;285    //                overloadv = olvbuff;
;;;286    //                olvbuff= 0;
;;;287    //            }else{
;;;288    //                olvbuff = DISS_Voltage;
;;;289    //                overloadv = 0;
;;;290    //            }
;;;291                
;;;292            }else{
;;;293                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_89);
;;;294                TEXT_SetText(hItem,"");
;;;295                
;;;296                hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;297                sprintf(buf,"%.3f",0.000);        
;;;298                TEXT_SetText(hItem,buf);
;;;299            }
;;;300    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);       
;;;301    //        sprintf(buf,"%.3f",overloadv);
;;;302    //        TEXT_SetText(hItem,buf);
;;;303            
;;;304            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);       
;;;305            sprintf(buf,"%.1f",temp);
000024  f8dfb3ec          LDR      r11,|L8.1044|
000028  f06f497f          MVN      r9,#0xff000000        ;119
00002c  f44f487f          MOV      r8,#0xff00            ;149
000030  f6401a3d          MOV      r10,#0x93d            ;205
000034  ed9f8bf8          VLDR     d8,|L8.1048|
000038  6820              LDR      r0,[r4,#0]            ;116
00003a  4ff9              LDR      r7,|L8.1056|
00003c  281d              CMP      r0,#0x1d              ;116
00003e  d07c              BEQ      |L8.314|
000040  dc04              BGT      |L8.76|
000042  280e              CMP      r0,#0xe               ;116
000044  d00b              BEQ      |L8.94|
000046  280f              CMP      r0,#0xf               ;116
000048  d106              BNE      |L8.88|
00004a  e00d              B        |L8.104|
                  |L8.76|
00004c  2826              CMP      r0,#0x26              ;116
00004e  d075              BEQ      |L8.316|
000050  f5a07080          SUB      r0,r0,#0x100          ;116
000054  3813              SUBS     r0,r0,#0x13           ;116
000056  d076              BEQ      |L8.326|
                  |L8.88|
;;;306            TEXT_SetText(hItem,buf);
;;;307            
;;;308    		WM_RestartTimer(pMsg->Data.v, 50);
;;;309    	}
;;;310    	break;
;;;311    	
;;;312        case WM_INIT_DIALOG://重绘外观
;;;313        //
;;;314        // Initialization of 'Window'
;;;315        //
;;;316            hItem = pMsg->hWin;
;;;317            WINDOW_SetBkColor(hItem, GUI_BLACK);
;;;318    		WM_CreateTimer(hItem,ID_TimerTime1,500,0);//创建本窗口定时器
;;;319        //
;;;320        // Initialization of 'Button'
;;;321        //
;;;322    //         hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_6);
;;;323    // 		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;324    // 		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;325    // 		GUI_UC_SetEncodeUTF8();
;;;326    // 		BUTTON_SetText(hItem,"充放电");
;;;327        //
;;;328        // Initialization of 'Button'
;;;329        //
;;;330    	
;;;331    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_162);
;;;332    		TEXT_SetTextColor(hItem, GUI_RED);//设置字体颜色
;;;333    		TEXT_SetFont(hItem,&GUI_FontHZ14);
;;;334    		TEXT_SetText(hItem,"");
;;;335    		
;;;336    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_7);
;;;337    //		BUTTON_SetBkColor(hItem,BUTTON_CI_DISABLED,GUI_LIGHTGREEN);
;;;338    ////		BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;339    //		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;340    //		GUI_UC_SetEncodeUTF8();
;;;341    //        BUTTON_SetText(hItem, "内阻测试");
;;;342        //
;;;343        // Initialization of 'Button'
;;;344        //
;;;345            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_8);
;;;346            BUTTON_SetPressed(hItem,1);
;;;347    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;348    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;349    		GUI_UC_SetEncodeUTF8();
;;;350            BUTTON_SetText(hItem, "程控负载");
;;;351        //
;;;352        // Initialization of 'Button'
;;;353        //
;;;354            hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_9);
;;;355    //        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;356    		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;357    		GUI_UC_SetEncodeUTF8();
;;;358            BUTTON_SetText(hItem, "程控电源");
;;;359        //
;;;360        // Initialization of 'Button'
;;;361        //
;;;362    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_10);
;;;363    ////        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;364    //		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;365    //		GUI_UC_SetEncodeUTF8();
;;;366    //        BUTTON_SetText(hItem, "充放电");
;;;367    //    //
;;;368    //    // Initialization of 'Button'
;;;369    //    //
;;;370    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_BUTTON_11);
;;;371    ////        BUTTON_SetTextColor(hItem,0,GUI_BLACK);//设置字体颜色为黑色
;;;372    //		BUTTON_SetFont      (hItem,    &GUI_FontHZ16);//设定按钮文本字体
;;;373    //		GUI_UC_SetEncodeUTF8();
;;;374    //        BUTTON_SetText(hItem, "曲线");
;;;375    		
;;;376    		
;;;377    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_11);
;;;378    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;379            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;380    		GUI_UC_SetEncodeUTF8();
;;;381    		TEXT_SetText(hItem,"V:");
;;;382    		
;;;383    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_12);
;;;384    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;385            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;386    		GUI_UC_SetEncodeUTF8();
;;;387    		TEXT_SetText(hItem,"I:");
;;;388            
;;;389            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_13);
;;;390    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;391            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;392    		GUI_UC_SetEncodeUTF8();
;;;393    		TEXT_SetText(hItem,"V");
;;;394    		
;;;395    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_14);
;;;396    		TEXT_SetTextColor(hItem, GUI_LIGHTGRAY);//设置字体颜色
;;;397            TEXT_SetFont(hItem,&GUI_FontEN40);//设定文本字体
;;;398    		GUI_UC_SetEncodeUTF8();
;;;399    		TEXT_SetText(hItem,"A");
;;;400            
;;;401    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_48);
;;;402    //		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;403    //        TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;404    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;405    //		GUI_UC_SetEncodeUTF8();
;;;406    //		TEXT_SetText(hItem,"负载电流");
;;;407            
;;;408    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_49);
;;;409    //        sprintf(buf,"%.3f",dis_load_c);
;;;410    //		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;411    //        TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;412    //		GUI_UC_SetEncodeUTF8();     
;;;413    //		TEXT_SetText(hItem,buf);
;;;414            
;;;415            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_143);
;;;416            sprintf(buf,"%.3f",load_cutoffv);
;;;417    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;418            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;419    		GUI_UC_SetEncodeUTF8();     
;;;420    		TEXT_SetText(hItem,buf);
;;;421            
;;;422            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_84);
;;;423            sprintf(buf,"%.3f",0.000);
;;;424    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;425            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;426    		GUI_UC_SetEncodeUTF8();        
;;;427    		TEXT_SetText(hItem,buf);
;;;428            
;;;429            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_85);
;;;430            sprintf(buf,"%.3f",0.000);
;;;431    		TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;432            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;433    		GUI_UC_SetEncodeUTF8();        
;;;434    		TEXT_SetText(hItem,buf);
;;;435            
;;;436            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_116);
;;;437            sprintf(buf,"%05d",0);
;;;438            TEXT_SetTextColor(hItem, GUI_YELLOW);//设置字体颜色
;;;439            TEXT_SetFont(hItem,&GUI_FontD24x32);//设定文本字体
;;;440            GUI_UC_SetEncodeUTF8();        
;;;441            TEXT_SetText(hItem,buf);
;;;442            
;;;443    //        hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_120);
;;;444    //        TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;445    //        TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;446    //        GUI_UC_SetEncodeUTF8();        
;;;447    //        TEXT_SetText(hItem,"负载模式");
;;;448    		
;;;449    		hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_158);
;;;450            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;451            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;452            GUI_UC_SetEncodeUTF8();        
;;;453            TEXT_SetText(hItem,"截止电压");
;;;454            
;;;455    //        if(load_mode == 1)
;;;456    //        {
;;;457    //            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;458    //            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;459    //            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;460    //            GUI_UC_SetEncodeUTF8();
;;;461    //            GPIO_SetBits(GPIOC,GPIO_Pin_10);//CC
;;;462    //            TEXT_SetText(hItem,"CC");
;;;463    //            flag_Load_CC = 1;
;;;464    //        }else if(load_mode == 0){
;;;465    //            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_121);
;;;466    //            TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;467    //            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;468    //            GUI_UC_SetEncodeUTF8();  
;;;469    //            GPIO_ResetBits(GPIOC,GPIO_Pin_10);//CV            
;;;470    //            TEXT_SetText(hItem,"CV");
;;;471    //            flag_Load_CC = 0;
;;;472    //        }
;;;473            
;;;474            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_122);
;;;475    		TEXT_SetTextColor(hItem, GUI_BLACK);//设置字体颜色
;;;476    		TEXT_SetBkColor(hItem,0x00BFFFFF);
;;;477            TEXT_SetFont(hItem,&GUI_Fontset_font);//设定文本字体
;;;478    		GUI_UC_SetEncodeUTF8();
;;;479    		TEXT_SetText(hItem,"负载电压");
;;;480            
;;;481            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_123);
;;;482            sprintf(buf,"%.3f",dis_load_v);
;;;483    		TEXT_SetTextColor(hItem, GUI_WHITE);//设置字体颜色
;;;484            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体
;;;485    		GUI_UC_SetEncodeUTF8();     
;;;486    		TEXT_SetText(hItem,buf);
;;;487            
;;;488            hItem = WM_GetDialogItem(pMsg->hWin, ID_TEXT_126);
;;;489            TEXT_SetTextColor(hItem, GUI_GREEN);//设置字体颜色
;;;490            TEXT_SetFont(hItem,&GUI_Font24_1);//设定文本字体       
;;;491            sprintf(buf,"%.1f",temp);
;;;492            TEXT_SetText(hItem,buf);
;;;493            
;;;494    
;;;495        // USER START (Optionally insert additional code for further widget initialization)
;;;496        // USER END
;;;497        break;
;;;498      case WM_NOTIFY_PARENT:
;;;499        Id    = WM_GetId(pMsg->hWinSrc);
;;;500        NCode = pMsg->Data.v;
;;;501        switch(Id) {
;;;502        case ID_BUTTON_6: // Notifications sent by 'Button'
;;;503          switch(NCode) {
;;;504          case WM_NOTIFICATION_CLICKED:
;;;505            // USER START (Optionally insert code for reacting on notification message)
;;;506            // USER END
;;;507            break;
;;;508          case WM_NOTIFICATION_RELEASED:
;;;509            // USER START (Optionally insert code for reacting on notification message)
;;;510            // USER END
;;;511            break;
;;;512          // USER START (Optionally insert additional code for further notification handling)
;;;513          // USER END
;;;514          }
;;;515          break;
;;;516        case ID_BUTTON_7: // Notifications sent by 'Button'
;;;517          switch(NCode) {
;;;518          case WM_NOTIFICATION_CLICKED:
;;;519            // USER START (Optionally insert code for reacting on notification message)
;;;520            // USER END
;;;521            break;
;;;522          case WM_NOTIFICATION_RELEASED:
;;;523    				
;;;524            // USER START (Optionally insert code for reacting on notification message)
;;;525            // USER END
;;;526            break;
;;;527          // USER START (Optionally insert additional code for further notification handling)
;;;528          // USER END
;;;529          }
;;;530          break;
;;;531        case ID_BUTTON_8: // Notifications sent by 'Button'
;;;532          switch(NCode) {
;;;533          case WM_NOTIFICATION_CLICKED:
;;;534            // USER START (Optionally insert code for reacting on notification message)
;;;535            // USER END
;;;536            break;
;;;537          case WM_NOTIFICATION_RELEASED:
;;;538            // USER START (Optionally insert code for reacting on notification message)
;;;539            // USER END
;;;540            break;
;;;541          // USER START (Optionally insert additional code for further notification handling)
;;;542          // USER END
;;;543          }
;;;544          break;
;;;545        case ID_BUTTON_9: // Notifications sent by 'Button'
;;;546          switch(NCode) {
;;;547          case WM_NOTIFICATION_CLICKED:
;;;548            // USER START (Optionally insert code for reacting on notification message)
;;;549            // USER END
;;;550            break;
;;;551          case WM_NOTIFICATION_RELEASED:
;;;552            // USER START (Optionally insert code for reacting on notification message)
;;;553            // USER END
;;;554            break;
;;;555          // USER START (Optionally insert additional code for further notification handling)
;;;556          // USER END
;;;557          }
;;;558          break;
;;;559        case ID_BUTTON_10: // Notifications sent by 'Button'
;;;560          switch(NCode) {
;;;561          case WM_NOTIFICATION_CLICKED:
;;;562            // USER START (Optionally insert code for reacting on notification message)
;;;563            // USER END
;;;564            break;
;;;565          case WM_NOTIFICATION_RELEASED:
;;;566            // USER START (Optionally insert code for reacting on notification message)
;;;567            // USER END
;;;568            break;
;;;569          // USER START (Optionally insert additional code for further notification handling)
;;;570          // USER END
;;;571          }
;;;572          break;
;;;573        case ID_BUTTON_11: // Notifications sent by 'Button'
;;;574          switch(NCode) {
;;;575          case WM_NOTIFICATION_CLICKED:
;;;576            // USER START (Optionally insert code for reacting on notification message)
;;;577            // USER END
;;;578            break;
;;;579          case WM_NOTIFICATION_RELEASED:
;;;580            // USER START (Optionally insert code for reacting on notification message)
;;;581            // USER END
;;;582            break;
;;;583          // USER START (Optionally insert additional code for further notification handling)
;;;584          // USER END
;;;585          }
;;;586          break;
;;;587        // USER START (Optionally insert additional code for further Ids)
;;;588        // USER END
;;;589        }
;;;590        break;
;;;591      // USER START (Optionally insert additional message handling)
;;;592      // USER END
;;;593      default:
;;;594        WM_DefaultProc(pMsg);
000058  4620              MOV      r0,r4
00005a  f7fffffe          BL       WM_DefaultProc
                  |L8.94|
;;;595        break;
;;;596      }
;;;597    }
00005e  b003              ADD      sp,sp,#0xc
000060  ecbd8b04          VPOP     {d8-d9}
000064  e8bd8ff0          POP      {r4-r11,pc}
                  |L8.104|
000068  4648              MOV      r0,r9                 ;119
00006a  f7fffffe          BL       GUI_SetColor
00006e  231a              MOVS     r3,#0x1a              ;120
000070  f44f72f0          MOV      r2,#0x1e0             ;120
000074  2119              MOVS     r1,#0x19              ;120
000076  2000              MOVS     r0,#0                 ;120
000078  f7fffffe          BL       GUI_FillRect
00007c  f24a50ff          MOV      r0,#0xa5ff            ;121
000080  f7fffffe          BL       GUI_SetColor
000084  48e7              LDR      r0,|L8.1060|
000086  f7fffffe          BL       GUI_SetFont
00008a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00008e  2002              MOVS     r0,#2                 ;124
000090  f7fffffe          BL       GUI_SetTextMode
000094  2201              MOVS     r2,#1                 ;125
000096  2105              MOVS     r1,#5                 ;125
000098  a0e3              ADR      r0,|L8.1064|
00009a  f7fffffe          BL       GUI_DispStringAt
00009e  4648              MOV      r0,r9                 ;126
0000a0  f7fffffe          BL       GUI_SetColor
0000a4  48e2              LDR      r0,|L8.1072|
0000a6  f7fffffe          BL       GUI_SetFont
0000aa  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0000ae  2002              MOVS     r0,#2                 ;129
0000b0  f7fffffe          BL       GUI_SetTextMode
0000b4  2203              MOVS     r2,#3                 ;130
0000b6  2182              MOVS     r1,#0x82              ;130
0000b8  a0de              ADR      r0,|L8.1076|
0000ba  f7fffffe          BL       GUI_DispStringAt
0000be  4648              MOV      r0,r9                 ;131
0000c0  f7fffffe          BL       GUI_SetColor
0000c4  48df              LDR      r0,|L8.1092|
0000c6  f7fffffe          BL       GUI_SetFont
0000ca  f44f74e1          MOV      r4,#0x1c2             ;139
0000ce  2264              MOVS     r2,#0x64              ;139
0000d0  4621              MOV      r1,r4                 ;139
0000d2  a0dd              ADR      r0,|L8.1096|
0000d4  f7fffffe          BL       GUI_DispStringAt
0000d8  2296              MOVS     r2,#0x96              ;140
0000da  4621              MOV      r1,r4                 ;140
0000dc  a0da              ADR      r0,|L8.1096|
0000de  f7fffffe          BL       GUI_DispStringAt
0000e2  48da              LDR      r0,|L8.1100|
0000e4  f7fffffe          BL       GUI_SetFont
0000e8  4630              MOV      r0,r6                 ;143
0000ea  f7fffffe          BL       GUI_SetColor
0000ee  22be              MOVS     r2,#0xbe              ;144
0000f0  211c              MOVS     r1,#0x1c              ;144
0000f2  a0d7              ADR      r0,|L8.1104|
0000f4  f7fffffe          BL       GUI_DispStringAt
0000f8  4630              MOV      r0,r6                 ;145
0000fa  f7fffffe          BL       GUI_SetColor
0000fe  22c4              MOVS     r2,#0xc4              ;146
000100  21d9              MOVS     r1,#0xd9              ;146
000102  a0d4              ADR      r0,|L8.1108|
000104  f7fffffe          BL       GUI_DispStringAt
000108  22bb              MOVS     r2,#0xbb              ;147
00010a  21ee              MOVS     r1,#0xee              ;147
00010c  a0d2              ADR      r0,|L8.1112|
00010e  f7fffffe          BL       GUI_DispStringAt
000112  4640              MOV      r0,r8                 ;149
000114  f7fffffe          BL       GUI_SetColor
000118  48d0              LDR      r0,|L8.1116|
00011a  f7fffffe          BL       GUI_SetFont
00011e  2202              MOVS     r2,#2                 ;151
000120  f44f71ab          MOV      r1,#0x156             ;151
000124  a0ce              ADR      r0,|L8.1120|
000126  f7fffffe          BL       GUI_DispStringAt
00012a  48c6              LDR      r0,|L8.1092|
00012c  f7fffffe          BL       GUI_SetFont
000130  2202              MOVS     r2,#2                 ;153
000132  f44f71af          MOV      r1,#0x15e             ;153
000136  a0cb              ADR      r0,|L8.1124|
000138  e002              B        |L8.320|
                  |L8.314|
00013a  e146              B        |L8.970|
                  |L8.316|
00013c  e318              B        |L8.1904|
00013e  e002              B        |L8.326|
                  |L8.320|
000140  f7fffffe          BL       GUI_DispStringAt
000144  e78b              B        |L8.94|
                  |L8.326|
000146  68e0              LDR      r0,[r4,#0xc]          ;172
000148  f7fffffe          BL       WM_GetTimerId
00014c  2802              CMP      r0,#2                 ;172
00014e  d186              BNE      |L8.94|
000150  48c5              LDR      r0,|L8.1128|
000152  7800              LDRB     r0,[r0,#0]            ;203  ; lock
000154  2801              CMP      r0,#1                 ;203
000156  d01e              BEQ      |L8.406|
000158  4651              MOV      r1,r10                ;208
00015a  6860              LDR      r0,[r4,#4]            ;208
00015c  f7fffffe          BL       WM_GetDialogItem
000160  a1b7              ADR      r1,|L8.1088|
000162  f7fffffe          BL       TEXT_SetText
                  |L8.358|
000166  f8df8304          LDR      r8,|L8.1132|
00016a  49c1              LDR      r1,|L8.1136|
00016c  f8d80000          LDR      r0,[r8,#0]            ;211  ; DISS_Voltage
000170  4288              CMP      r0,r1                 ;211
000172  da18              BGE      |L8.422|
000174  f6400191          MOV      r1,#0x891             ;213
000178  6860              LDR      r0,[r4,#4]            ;213
00017a  f7fffffe          BL       WM_GetDialogItem
00017e  4606              MOV      r6,r0                 ;213
000180  ec532b18          VMOV     r2,r3,d8              ;214
000184  a1bb              ADR      r1,|L8.1140|
000186  4668              MOV      r0,sp                 ;214
000188  f7fffffe          BL       __2sprintf
00018c  4669              MOV      r1,sp                 ;215
00018e  4630              MOV      r0,r6                 ;215
000190  f7fffffe          BL       TEXT_SetText
000194  e01d              B        |L8.466|
                  |L8.406|
000196  4651              MOV      r1,r10                ;205
000198  6860              LDR      r0,[r4,#4]            ;205
00019a  f7fffffe          BL       WM_GetDialogItem
00019e  a1b7              ADR      r1,|L8.1148|
0001a0  f7fffffe          BL       TEXT_SetText
0001a4  e7df              B        |L8.358|
                  |L8.422|
0001a6  f6400191          MOV      r1,#0x891             ;217
0001aa  6860              LDR      r0,[r4,#4]            ;217
0001ac  f7fffffe          BL       WM_GetDialogItem
0001b0  4606              MOV      r6,r0                 ;217
0001b2  48b3              LDR      r0,|L8.1152|
0001b4  6800              LDR      r0,[r0,#0]            ;218  ; disloadv
0001b6  f7fffffe          BL       __aeabi_f2d
0001ba  ec410b10          VMOV     d0,r0,r1              ;218
0001be  a1ad              ADR      r1,|L8.1140|
0001c0  ec532b10          VMOV     r2,r3,d0              ;218
0001c4  4668              MOV      r0,sp                 ;218
0001c6  f7fffffe          BL       __2sprintf
0001ca  4669              MOV      r1,sp                 ;219
0001cc  4630              MOV      r0,r6                 ;219
0001ce  f7fffffe          BL       TEXT_SetText
                  |L8.466|
0001d2  6928              LDR      r0,[r5,#0x10]         ;226  ; Run_Control
0001d4  f8dfa2ac          LDR      r10,|L8.1156|
0001d8  ee000a10          VMOV     s0,r0                 ;226
0001dc  2600              MOVS     r6,#0                 ;226
0001de  eef80a40          VCVT.F32.U32 s1,s0                 ;226
0001e2  ee800a89          VDIV.F32 s0,s1,s18             ;226
0001e6  edd80a00          VLDR     s1,[r8,#0]            ;226
0001ea  ee200a20          VMUL.F32 s0,s0,s1              ;226
0001ee  ee100a10          VMOV     r0,s0                 ;226
0001f2  4550              CMP      r0,r10                ;226
0001f4  dd3b              BLE      |L8.622|
0001f6  612e              STR      r6,[r5,#0x10]         ;227  ; Run_Control
0001f8  f640016e          MOV      r1,#0x86e             ;228
0001fc  6878              LDR      r0,[r7,#4]            ;228  ; load_wind
0001fe  f7fffffe          BL       WM_GetDialogItem
000202  9002              STR      r0,[sp,#8]            ;228
000204  f06f4170          MVN      r1,#0xf0000000        ;229
000208  9802              LDR      r0,[sp,#8]            ;229
00020a  f7fffffe          BL       TEXT_SetBkColor
00020e  4649              MOV      r1,r9                 ;230
000210  9802              LDR      r0,[sp,#8]            ;230
000212  f7fffffe          BL       TEXT_SetTextColor
000216  6928              LDR      r0,[r5,#0x10]         ;231  ; Run_Control
000218  f24d61d8          MOV      r1,#0xd6d8            ;231
00021c  4288              CMP      r0,r1                 ;231
00021e  d80e              BHI      |L8.574|
000220  6928              LDR      r0,[r5,#0x10]         ;231  ; Run_Control
000222  ee000a10          VMOV     s0,r0                 ;231
000226  eeb80a40          VCVT.F32.U32 s0,s0                 ;231
00022a  eec00a09          VDIV.F32 s1,s0,s18             ;231
00022e  ed980a00          VLDR     s0,[r8,#0]            ;231
000232  ee200a80          VMUL.F32 s0,s1,s0              ;231
000236  ee100a10          VMOV     r0,s0                 ;231
00023a  4550              CMP      r0,r10                ;231
00023c  dd00              BLE      |L8.576|
                  |L8.574|
00023e  612e              STR      r6,[r5,#0x10]         ;232  ; Run_Control
                  |L8.576|
000240  6928              LDR      r0,[r5,#0x10]         ;234  ; Run_Control
000242  ee000a10          VMOV     s0,r0                 ;234
000246  eef80a40          VCVT.F32.U32 s1,s0                 ;234
00024a  ee800a89          VDIV.F32 s0,s1,s18             ;234
00024e  ee100a10          VMOV     r0,s0                 ;235
000252  f7fffffe          BL       __aeabi_f2d
000256  ec410b10          VMOV     d0,r0,r1              ;235
00025a  a186              ADR      r1,|L8.1140|
00025c  ec532b10          VMOV     r2,r3,d0              ;235
000260  4668              MOV      r0,sp                 ;235
000262  f7fffffe          BL       __2sprintf
000266  4669              MOV      r1,sp                 ;236
000268  9802              LDR      r0,[sp,#8]            ;236
00026a  f7fffffe          BL       TEXT_SetText
                  |L8.622|
00026e  7838              LDRB     r0,[r7,#0]            ;243  ; load_sw
000270  2801              CMP      r0,#1                 ;243
000272  d032              BEQ      |L8.730|
000274  f6400196          MOV      r1,#0x896             ;293
000278  6860              LDR      r0,[r4,#4]            ;293
00027a  f7fffffe          BL       WM_GetDialogItem
00027e  a170              ADR      r1,|L8.1088|
000280  f7fffffe          BL       TEXT_SetText
000284  f6400192          MOV      r1,#0x892             ;296
000288  6860              LDR      r0,[r4,#4]            ;296
00028a  f7fffffe          BL       WM_GetDialogItem
00028e  4605              MOV      r5,r0                 ;296
000290  ec532b18          VMOV     r2,r3,d8              ;297
000294  a177              ADR      r1,|L8.1140|
000296  4668              MOV      r0,sp                 ;297
000298  f7fffffe          BL       __2sprintf
00029c  4669              MOV      r1,sp                 ;298
00029e  4628              MOV      r0,r5                 ;298
0002a0  f7fffffe          BL       TEXT_SetText
                  |L8.676|
0002a4  f6401112          MOV      r1,#0x912             ;304
0002a8  6860              LDR      r0,[r4,#4]            ;304
0002aa  f7fffffe          BL       WM_GetDialogItem
0002ae  4605              MOV      r5,r0                 ;304
0002b0  f8db0000          LDR      r0,[r11,#0]           ;305  ; temp
0002b4  f7fffffe          BL       __aeabi_f2d
0002b8  ec410b10          VMOV     d0,r0,r1              ;305
0002bc  a172              ADR      r1,|L8.1160|
0002be  ec532b10          VMOV     r2,r3,d0              ;305
0002c2  4668              MOV      r0,sp                 ;305
0002c4  f7fffffe          BL       __2sprintf
0002c8  4669              MOV      r1,sp                 ;306
0002ca  4628              MOV      r0,r5                 ;306
0002cc  f7fffffe          BL       TEXT_SetText
0002d0  2132              MOVS     r1,#0x32              ;308
0002d2  68e0              LDR      r0,[r4,#0xc]          ;308
0002d4  f7fffffe          BL       WM_RestartTimer
0002d8  e6c1              B        |L8.94|
                  |L8.730|
0002da  6929              LDR      r1,[r5,#0x10]         ;245  ; Run_Control
0002dc  f2475230          MOV      r2,#0x7530            ;245
0002e0  486b              LDR      r0,|L8.1168|
0002e2  2501              MOVS     r5,#1                 ;125
0002e4  4291              CMP      r1,r2                 ;245
0002e6  d301              BCC      |L8.748|
0002e8  7005              STRB     r5,[r0,#0]            ;247
0002ea  e000              B        |L8.750|
                  |L8.748|
0002ec  7006              STRB     r6,[r0,#0]            ;249
                  |L8.750|
0002ee  4869              LDR      r0,|L8.1172|
0002f0  f8df91a4          LDR      r9,|L8.1176|
0002f4  ed900a00          VLDR     s0,[r0,#0]            ;251
0002f8  eebd0ac0          VCVT.S32.F32 s0,s0                 ;251
0002fc  ee100a10          VMOV     r0,s0                 ;251
000300  f8a90000          STRH     r0,[r9,#0]            ;251
000304  f640110d          MOV      r1,#0x90d             ;252
000308  6860              LDR      r0,[r4,#4]            ;252
00030a  f7fffffe          BL       WM_GetDialogItem
00030e  4682              MOV      r10,r0                ;252
000310  f8b92000          LDRH     r2,[r9,#0]            ;253  ; battery_c
000314  a161              ADR      r1,|L8.1180|
000316  4668              MOV      r0,sp                 ;253
000318  f7fffffe          BL       __2sprintf
00031c  4669              MOV      r1,sp                 ;254
00031e  4650              MOV      r0,r10                ;254
000320  f7fffffe          BL       TEXT_SetText
000324  f6400192          MOV      r1,#0x892             ;256
000328  6860              LDR      r0,[r4,#4]            ;256
00032a  f7fffffe          BL       WM_GetDialogItem
00032e  4681              MOV      r9,r0                 ;256
000330  485c              LDR      r0,|L8.1188|
000332  6800              LDR      r0,[r0,#0]            ;257  ; DISS_Current
000334  f7fffffe          BL       __aeabi_f2d
000338  ec410b10          VMOV     d0,r0,r1              ;257
00033c  a14d              ADR      r1,|L8.1140|
00033e  ec532b10          VMOV     r2,r3,d0              ;257
000342  4668              MOV      r0,sp                 ;257
000344  f7fffffe          BL       __2sprintf
000348  4669              MOV      r1,sp                 ;258
00034a  4648              MOV      r0,r9                 ;258
00034c  f7fffffe          BL       TEXT_SetText
000350  7878              LDRB     r0,[r7,#1]            ;259  ; status_flash
000352  b320              CBZ      r0,|L8.926|
000354  f6400196          MOV      r1,#0x896             ;267
000358  6860              LDR      r0,[r4,#4]            ;267
00035a  f7fffffe          BL       WM_GetDialogItem
00035e  a138              ADR      r1,|L8.1088|
000360  f7fffffe          BL       TEXT_SetText
000364  707e              STRB     r6,[r7,#1]            ;269
                  |L8.870|
000366  ed970a02          VLDR     s0,[r7,#8]            ;271
00036a  eeb50ac0          VCMPE.F32 s0,#0.0               ;271
00036e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;271
000372  d097              BEQ      |L8.676|
000374  edd80a00          VLDR     s1,[r8,#0]            ;271
000378  eef40ac0          VCMPE.F32 s1,s0                 ;271
00037c  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;271
000380  d290              BCS      |L8.676|
000382  4849              LDR      r0,|L8.1192|
000384  6801              LDR      r1,[r0,#0]            ;273  ; flagA
000386  f0210140          BIC      r1,r1,#0x40           ;273
00038a  6001              STR      r1,[r0,#0]            ;273  ; flagA
00038c  f44f4100          MOV      r1,#0x8000            ;274
000390  4846              LDR      r0,|L8.1196|
000392  f7fffffe          BL       GPIO_SetBits
000396  4846              LDR      r0,|L8.1200|
000398  7006              STRB     r6,[r0,#0]            ;275
00039a  703e              STRB     r6,[r7,#0]            ;276
00039c  e782              B        |L8.676|
                  |L8.926|
00039e  f6400196          MOV      r1,#0x896             ;260
0003a2  6860              LDR      r0,[r4,#4]            ;260
0003a4  f7fffffe          BL       WM_GetDialogItem
0003a8  4681              MOV      r9,r0                 ;260
0003aa  21ff              MOVS     r1,#0xff              ;261
0003ac  4648              MOV      r0,r9                 ;261
0003ae  f7fffffe          BL       TEXT_SetTextColor
0003b2  4940              LDR      r1,|L8.1204|
0003b4  4648              MOV      r0,r9                 ;262
0003b6  f7fffffe          BL       TEXT_SetFont
0003ba  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0003be  a13e              ADR      r1,|L8.1208|
0003c0  4648              MOV      r0,r9                 ;264
0003c2  f7fffffe          BL       TEXT_SetText
0003c6  707d              STRB     r5,[r7,#1]            ;265
0003c8  e7cd              B        |L8.870|
                  |L8.970|
0003ca  6865              LDR      r5,[r4,#4]            ;316
0003cc  2100              MOVS     r1,#0                 ;317
0003ce  4628              MOV      r0,r5                 ;317
0003d0  f7fffffe          BL       WINDOW_SetBkColor
0003d4  2300              MOVS     r3,#0                 ;318
0003d6  f44f72fa          MOV      r2,#0x1f4             ;318
0003da  2102              MOVS     r1,#2                 ;318
0003dc  4628              MOV      r0,r5                 ;318
0003de  f7fffffe          BL       WM_CreateTimer
0003e2  4651              MOV      r1,r10                ;331
0003e4  6860              LDR      r0,[r4,#4]            ;331
0003e6  f7fffffe          BL       WM_GetDialogItem
0003ea  4605              MOV      r5,r0                 ;331
0003ec  21ff              MOVS     r1,#0xff              ;332
0003ee  4628              MOV      r0,r5                 ;332
0003f0  f7fffffe          BL       TEXT_SetTextColor
0003f4  4933              LDR      r1,|L8.1220|
0003f6  4628              MOV      r0,r5                 ;333
0003f8  f7fffffe          BL       TEXT_SetFont
0003fc  a110              ADR      r1,|L8.1088|
0003fe  4628              MOV      r0,r5                 ;334
000400  f7fffffe          BL       TEXT_SetText
000404  e060              B        |L8.1224|
000406  0000              DCW      0x0000
                  |L8.1032|
                          DCD      Run_Control
                  |L8.1036|
00040c  447a0000          DCFS     0x447a0000 ; 1000
                  |L8.1040|
                          DCD      0x00d3d3d3
                  |L8.1044|
                          DCD      temp
                  |L8.1048|
000418  00000000          DCFD     0x0000000000000000 ; 0
00041c  00000000
                  |L8.1056|
                          DCD      ||.data||
                  |L8.1060|
                          DCD      GUI_Fontsymbol
                  |L8.1064|
000428  4a696e6b          DCB      "Jinko",0
00042c  6f00    
00042e  00                DCB      0
00042f  00                DCB      0
                  |L8.1072|
                          DCD      GUI_FontHZ20S
                  |L8.1076|
000434  e6b58be9          DCB      230,181,139,233,135,143,230,152,190,231,164,186
000438  878fe698
00043c  bee7a4ba
                  |L8.1088|
000440  00                DCB      0
000441  00                DCB      0
000442  00                DCB      0
000443  00                DCB      0
                  |L8.1092|
                          DCD      GUI_Font24_1
                  |L8.1096|
000448  5600              DCB      "V",0
00044a  00                DCB      0
00044b  00                DCB      0
                  |L8.1100|
                          DCD      GUI_FontEN40
                  |L8.1104|
000450  433a00            DCB      "C:",0
000453  00                DCB      0
                  |L8.1108|
000454  6d00              DCB      "m",0
000456  00                DCB      0
000457  00                DCB      0
                  |L8.1112|
000458  414800            DCB      "AH",0
00045b  00                DCB      0
                  |L8.1116|
                          DCD      GUI_Fontunit
                  |L8.1120|
000460  c2b000            DCB      194,176,0
000463  00                DCB      0
                  |L8.1124|
000464  4300              DCB      "C",0
000466  00                DCB      0
000467  00                DCB      0
                  |L8.1128|
                          DCD      lock
                  |L8.1132|
                          DCD      DISS_Voltage
                  |L8.1136|
                          DCD      0x3e99999a
                  |L8.1140|
000474  252e3366          DCB      "%.3f",0
000478  00      
000479  00                DCB      0
00047a  00                DCB      0
00047b  00                DCB      0
                  |L8.1148|
00047c  e9948100          DCB      233,148,129,0
                  |L8.1152|
                          DCD      disloadv
                  |L8.1156|
                          DCD      0x43480000
                  |L8.1160|
000488  252e3166          DCB      "%.1f",0
00048c  00      
00048d  00                DCB      0
00048e  00                DCB      0
00048f  00                DCB      0
                  |L8.1168|
                          DCD      alert_flag
                  |L8.1172|
                          DCD      bc_raw
                  |L8.1176|
                          DCD      battery_c
                  |L8.1180|
00049c  25303564          DCB      "%05d",0
0004a0  00      
0004a1  00                DCB      0
0004a2  00                DCB      0
0004a3  00                DCB      0
                  |L8.1188|
                          DCD      DISS_Current
                  |L8.1192|
                          DCD      flagA
                  |L8.1196|
                          DCD      0x40020000
                  |L8.1200|
                          DCD      mode_sw
                  |L8.1204|
                          DCD      GUI_FontHZ16
                  |L8.1208|
0004b8  e694bee7          DCB      230,148,190,231,148,181,228,184,173,0
0004bc  94b5e4b8
0004c0  ad00    
0004c2  00                DCB      0
0004c3  00                DCB      0
                  |L8.1220|
                          DCD      GUI_FontHZ14
                  |L8.1224|
0004c8  f640010c          MOV      r1,#0x80c             ;345
0004cc  6860              LDR      r0,[r4,#4]            ;345
0004ce  f7fffffe          BL       WM_GetDialogItem
0004d2  4605              MOV      r5,r0                 ;345
0004d4  2101              MOVS     r1,#1                 ;346
0004d6  4628              MOV      r0,r5                 ;346
0004d8  f7fffffe          BL       BUTTON_SetPressed
0004dc  49a6              LDR      r1,|L8.1912|
0004de  4628              MOV      r0,r5                 ;348
0004e0  f7fffffe          BL       BUTTON_SetFont
0004e4  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0004e8  a1a4              ADR      r1,|L8.1916|
0004ea  4628              MOV      r0,r5                 ;350
0004ec  f7fffffe          BL       BUTTON_SetText
0004f0  f640010d          MOV      r1,#0x80d             ;354
0004f4  6860              LDR      r0,[r4,#4]            ;354
0004f6  f7fffffe          BL       WM_GetDialogItem
0004fa  4605              MOV      r5,r0                 ;354
0004fc  499e              LDR      r1,|L8.1912|
0004fe  4628              MOV      r0,r5                 ;356
000500  f7fffffe          BL       BUTTON_SetFont
000504  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000508  a1a0              ADR      r1,|L8.1932|
00050a  4628              MOV      r0,r5                 ;358
00050c  f7fffffe          BL       BUTTON_SetText
000510  f44f6101          MOV      r1,#0x810             ;377
000514  6860              LDR      r0,[r4,#4]            ;377
000516  f7fffffe          BL       WM_GetDialogItem
00051a  4605              MOV      r5,r0                 ;377
00051c  4631              MOV      r1,r6                 ;378
00051e  4628              MOV      r0,r5                 ;378
000520  f7fffffe          BL       TEXT_SetTextColor
000524  499d              LDR      r1,|L8.1948|
000526  4628              MOV      r0,r5                 ;379
000528  f7fffffe          BL       TEXT_SetFont
00052c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000530  a19b              ADR      r1,|L8.1952|
000532  4628              MOV      r0,r5                 ;381
000534  f7fffffe          BL       TEXT_SetText
000538  f6400111          MOV      r1,#0x811             ;383
00053c  6860              LDR      r0,[r4,#4]            ;383
00053e  f7fffffe          BL       WM_GetDialogItem
000542  4605              MOV      r5,r0                 ;383
000544  4631              MOV      r1,r6                 ;384
000546  4628              MOV      r0,r5                 ;384
000548  f7fffffe          BL       TEXT_SetTextColor
00054c  4993              LDR      r1,|L8.1948|
00054e  4628              MOV      r0,r5                 ;385
000550  f7fffffe          BL       TEXT_SetFont
000554  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000558  a192              ADR      r1,|L8.1956|
00055a  4628              MOV      r0,r5                 ;387
00055c  f7fffffe          BL       TEXT_SetText
000560  f640011e          MOV      r1,#0x81e             ;389
000564  6860              LDR      r0,[r4,#4]            ;389
000566  f7fffffe          BL       WM_GetDialogItem
00056a  4605              MOV      r5,r0                 ;389
00056c  4631              MOV      r1,r6                 ;390
00056e  4628              MOV      r0,r5                 ;390
000570  f7fffffe          BL       TEXT_SetTextColor
000574  4989              LDR      r1,|L8.1948|
000576  4628              MOV      r0,r5                 ;391
000578  f7fffffe          BL       TEXT_SetFont
00057c  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000580  f2af113c          ADR      r1,|L8.1096|
000584  4628              MOV      r0,r5                 ;393
000586  f7fffffe          BL       TEXT_SetText
00058a  f640011f          MOV      r1,#0x81f             ;395
00058e  6860              LDR      r0,[r4,#4]            ;395
000590  f7fffffe          BL       WM_GetDialogItem
000594  4605              MOV      r5,r0                 ;395
000596  4631              MOV      r1,r6                 ;396
000598  4628              MOV      r0,r5                 ;396
00059a  f7fffffe          BL       TEXT_SetTextColor
00059e  497f              LDR      r1,|L8.1948|
0005a0  4628              MOV      r0,r5                 ;397
0005a2  f7fffffe          BL       TEXT_SetFont
0005a6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005aa  a17f              ADR      r1,|L8.1960|
0005ac  4628              MOV      r0,r5                 ;399
0005ae  f7fffffe          BL       TEXT_SetText
0005b2  f640112d          MOV      r1,#0x92d             ;415
0005b6  6860              LDR      r0,[r4,#4]            ;415
0005b8  f7fffffe          BL       WM_GetDialogItem
0005bc  4605              MOV      r5,r0                 ;415
0005be  68b8              LDR      r0,[r7,#8]            ;416  ; load_cutoffv
0005c0  f7fffffe          BL       __aeabi_f2d
0005c4  ec410b10          VMOV     d0,r0,r1              ;416
0005c8  ec532b10          VMOV     r2,r3,d0              ;416
0005cc  f2af115c          ADR      r1,|L8.1140|
0005d0  4668              MOV      r0,sp                 ;416
0005d2  f7fffffe          BL       __2sprintf
0005d6  4649              MOV      r1,r9                 ;417
0005d8  4628              MOV      r0,r5                 ;417
0005da  f7fffffe          BL       TEXT_SetTextColor
0005de  4973              LDR      r1,|L8.1964|
0005e0  4628              MOV      r0,r5                 ;418
0005e2  f7fffffe          BL       TEXT_SetFont
0005e6  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0005ea  4669              MOV      r1,sp                 ;420
0005ec  4628              MOV      r0,r5                 ;420
0005ee  f7fffffe          BL       TEXT_SetText
0005f2  f6400191          MOV      r1,#0x891             ;422
0005f6  6860              LDR      r0,[r4,#4]            ;422
0005f8  f7fffffe          BL       WM_GetDialogItem
0005fc  4606              MOV      r6,r0                 ;422
0005fe  ec532b18          VMOV     r2,r3,d8              ;423
000602  f2af1190          ADR      r1,|L8.1140|
000606  4668              MOV      r0,sp                 ;423
000608  f7fffffe          BL       __2sprintf
00060c  f64f75ff          MOV      r5,#0xffff            ;424
000610  4629              MOV      r1,r5                 ;424
000612  4630              MOV      r0,r6                 ;424
000614  f7fffffe          BL       TEXT_SetTextColor
000618  4965              LDR      r1,|L8.1968|
00061a  4630              MOV      r0,r6                 ;425
00061c  f7fffffe          BL       TEXT_SetFont
000620  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000624  4669              MOV      r1,sp                 ;427
000626  4630              MOV      r0,r6                 ;427
000628  f7fffffe          BL       TEXT_SetText
00062c  f6400192          MOV      r1,#0x892             ;429
000630  6860              LDR      r0,[r4,#4]            ;429
000632  f7fffffe          BL       WM_GetDialogItem
000636  4606              MOV      r6,r0                 ;429
000638  ec532b18          VMOV     r2,r3,d8              ;430
00063c  f2af11cc          ADR      r1,|L8.1140|
000640  4668              MOV      r0,sp                 ;430
000642  f7fffffe          BL       __2sprintf
000646  4629              MOV      r1,r5                 ;431
000648  4630              MOV      r0,r6                 ;431
00064a  f7fffffe          BL       TEXT_SetTextColor
00064e  4958              LDR      r1,|L8.1968|
000650  4630              MOV      r0,r6                 ;432
000652  f7fffffe          BL       TEXT_SetFont
000656  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00065a  4669              MOV      r1,sp                 ;434
00065c  4630              MOV      r0,r6                 ;434
00065e  f7fffffe          BL       TEXT_SetText
000662  f640110d          MOV      r1,#0x90d             ;436
000666  6860              LDR      r0,[r4,#4]            ;436
000668  f7fffffe          BL       WM_GetDialogItem
00066c  4606              MOV      r6,r0                 ;436
00066e  2200              MOVS     r2,#0                 ;437
000670  f2af11d8          ADR      r1,|L8.1180|
000674  4668              MOV      r0,sp                 ;437
000676  f7fffffe          BL       __2sprintf
00067a  4629              MOV      r1,r5                 ;438
00067c  4630              MOV      r0,r6                 ;438
00067e  f7fffffe          BL       TEXT_SetTextColor
000682  494b              LDR      r1,|L8.1968|
000684  4630              MOV      r0,r6                 ;439
000686  f7fffffe          BL       TEXT_SetFont
00068a  f7fffffe          BL       GUI_UC_SetEncodeUTF8
00068e  4669              MOV      r1,sp                 ;441
000690  4630              MOV      r0,r6                 ;441
000692  f7fffffe          BL       TEXT_SetText
000696  f6401139          MOV      r1,#0x939             ;449
00069a  6860              LDR      r0,[r4,#4]            ;449
00069c  f7fffffe          BL       WM_GetDialogItem
0006a0  4605              MOV      r5,r0                 ;449
0006a2  4649              MOV      r1,r9                 ;450
0006a4  4628              MOV      r0,r5                 ;450
0006a6  f7fffffe          BL       TEXT_SetTextColor
0006aa  4942              LDR      r1,|L8.1972|
0006ac  4628              MOV      r0,r5                 ;451
0006ae  f7fffffe          BL       TEXT_SetFont
0006b2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006b6  a140              ADR      r1,|L8.1976|
0006b8  4628              MOV      r0,r5                 ;453
0006ba  f7fffffe          BL       TEXT_SetText
0006be  f44f6111          MOV      r1,#0x910             ;474
0006c2  6860              LDR      r0,[r4,#4]            ;474
0006c4  f7fffffe          BL       WM_GetDialogItem
0006c8  4605              MOV      r5,r0                 ;474
0006ca  2100              MOVS     r1,#0                 ;475
0006cc  4628              MOV      r0,r5                 ;475
0006ce  f7fffffe          BL       TEXT_SetTextColor
0006d2  493d              LDR      r1,|L8.1992|
0006d4  4628              MOV      r0,r5                 ;476
0006d6  f7fffffe          BL       TEXT_SetBkColor
0006da  4936              LDR      r1,|L8.1972|
0006dc  4628              MOV      r0,r5                 ;477
0006de  f7fffffe          BL       TEXT_SetFont
0006e2  f7fffffe          BL       GUI_UC_SetEncodeUTF8
0006e6  a139              ADR      r1,|L8.1996|
0006e8  4628              MOV      r0,r5                 ;479
0006ea  f7fffffe          BL       TEXT_SetText
0006ee  f6401111          MOV      r1,#0x911             ;481
0006f2  6860              LDR      r0,[r4,#4]            ;481
0006f4  f7fffffe          BL       WM_GetDialogItem
0006f8  4605              MOV      r5,r0                 ;481
0006fa  ee190a90          VMOV     r0,s19                ;482
0006fe  f7fffffe          BL       __aeabi_f2d
000702  ec410b10          VMOV     d0,r0,r1              ;482
000706  ec532b10          VMOV     r2,r3,d0              ;482
00070a  f2af2198          ADR      r1,|L8.1140|
00070e  4668              MOV      r0,sp                 ;482
000710  f7fffffe          BL       __2sprintf
000714  4649              MOV      r1,r9                 ;483
000716  4628              MOV      r0,r5                 ;483
000718  f7fffffe          BL       TEXT_SetTextColor
00071c  4923              LDR      r1,|L8.1964|
00071e  4628              MOV      r0,r5                 ;484
000720  f7fffffe          BL       TEXT_SetFont
000724  f7fffffe          BL       GUI_UC_SetEncodeUTF8
000728  4669              MOV      r1,sp                 ;486
00072a  4628              MOV      r0,r5                 ;486
00072c  f7fffffe          BL       TEXT_SetText
000730  f6401112          MOV      r1,#0x912             ;488
000734  6860              LDR      r0,[r4,#4]            ;488
000736  f7fffffe          BL       WM_GetDialogItem
00073a  4604              MOV      r4,r0                 ;488
00073c  4641              MOV      r1,r8                 ;489
00073e  4620              MOV      r0,r4                 ;489
000740  f7fffffe          BL       TEXT_SetTextColor
000744  4919              LDR      r1,|L8.1964|
000746  4620              MOV      r0,r4                 ;490
000748  f7fffffe          BL       TEXT_SetFont
00074c  f8db0000          LDR      r0,[r11,#0]           ;491  ; temp
000750  f7fffffe          BL       __aeabi_f2d
000754  ec410b10          VMOV     d0,r0,r1              ;491
000758  ec532b10          VMOV     r2,r3,d0              ;491
00075c  f2af21d8          ADR      r1,|L8.1160|
000760  4668              MOV      r0,sp                 ;491
000762  f7fffffe          BL       __2sprintf
000766  4669              MOV      r1,sp                 ;492
000768  4620              MOV      r0,r4                 ;492
00076a  f7fffffe          BL       TEXT_SetText
00076e  e476              B        |L8.94|
                  |L8.1904|
000770  68a0              LDR      r0,[r4,#8]            ;499
000772  f7fffffe          BL       WM_GetId
000776  e472              B        |L8.94|
;;;598    
                          ENDP

                  |L8.1912|
                          DCD      GUI_FontHZ16
                  |L8.1916|
00077c  e7a88be6          DCB      231,168,139,230,142,167,232,180,159,232,189,189,0
000780  8ea7e8b4
000784  9fe8bdbd
000788  00      
000789  00                DCB      0
00078a  00                DCB      0
00078b  00                DCB      0
                  |L8.1932|
00078c  e7a88be6          DCB      231,168,139,230,142,167,231,148,181,230,186,144,0
000790  8ea7e794
000794  b5e6ba90
000798  00      
000799  00                DCB      0
00079a  00                DCB      0
00079b  00                DCB      0
                  |L8.1948|
                          DCD      GUI_FontEN40
                  |L8.1952|
0007a0  563a00            DCB      "V:",0
0007a3  00                DCB      0
                  |L8.1956|
0007a4  493a00            DCB      "I:",0
0007a7  00                DCB      0
                  |L8.1960|
0007a8  4100              DCB      "A",0
0007aa  00                DCB      0
0007ab  00                DCB      0
                  |L8.1964|
                          DCD      GUI_Font24_1
                  |L8.1968|
                          DCD      GUI_FontD24x32
                  |L8.1972|
                          DCD      GUI_Fontset_font
                  |L8.1976|
0007b8  e688aae6          DCB      230,136,170,230,173,162,231,148,181,229,142,139,0
0007bc  ada2e794
0007c0  b5e58e8b
0007c4  00      
0007c5  00                DCB      0
0007c6  00                DCB      0
0007c7  00                DCB      0
                  |L8.1992|
                          DCD      0x00bfffff
                  |L8.1996|
0007cc  e8b49fe8          DCB      232,180,159,232,189,189,231,148,181,229,142,139,0
0007d0  bdbde794
0007d4  b5e58e8b
0007d8  00      
0007d9  00                DCB      0
0007da  00                DCB      0
0007db  00                DCB      0

                          AREA ||i.test_load||, CODE, READONLY, ALIGN=2

                  test_load PROC
;;;1330   
;;;1331   void test_load(void)
000000  b570              PUSH     {r4-r6,lr}
;;;1332   {
;;;1333   
;;;1334       if(load_sw == load_on && para_set1 == set_1_on)
000002  4827              LDR      r0,|L9.160|
000004  7802              LDRB     r2,[r0,#0]  ; load_sw
;;;1335       {
;;;1336           if(DISS_Voltage*100 > set_max_v || DISS_Voltage*100 < set_min_v)
;;;1337           {
;;;1338              if(para_set4 == set_4_on){
;;;1339                   BEEP_Tiggr();
;;;1340               }
;;;1341               TM1650_SET_LED(0x68,0x70);//FAIL灯
;;;1342               GPIO_SetBits(GPIOD,GPIO_Pin_12);//            
000006  4d27              LDR      r5,|L9.164|
000008  f44f5480          MOV      r4,#0x1000
00000c  2a01              CMP      r2,#1                 ;1334
00000e  d103              BNE      |L9.24|
000010  4825              LDR      r0,|L9.168|
000012  7800              LDRB     r0,[r0,#0]            ;1334  ; para_set1
000014  28ff              CMP      r0,#0xff              ;1334
000016  d009              BEQ      |L9.44|
                  |L9.24|
;;;1343           }else{
;;;1344               GPIO_ResetBits(GPIOD,GPIO_Pin_12);
;;;1345               TM1650_SET_LED(0x48,0x71);
;;;1346               TM1650_SET_LED(0x68,0xF2);//PASS灯
;;;1347           }        
;;;1348       }else
;;;1349       {
;;;1350           TM1650_SET_LED(0x68,0x70);
000018  2170              MOVS     r1,#0x70
00001a  2068              MOVS     r0,#0x68
00001c  f7fffffe          BL       TM1650_SET_LED
;;;1351           GPIO_ResetBits(GPIOD,GPIO_Pin_12);//灭灯
000020  4621              MOV      r1,r4
000022  4628              MOV      r0,r5
000024  e8bd4070          POP      {r4-r6,lr}
000028  f7ffbffe          B.W      GPIO_ResetBits
                  |L9.44|
00002c  4a1f              LDR      r2,|L9.172|
00002e  ed9f0a20          VLDR     s0,|L9.176|
000032  edd20a00          VLDR     s1,[r2,#0]            ;1336
000036  4a1f              LDR      r2,|L9.180|
000038  ee200a80          VMUL.F32 s0,s1,s0              ;1336
00003c  6b93              LDR      r3,[r2,#0x38]         ;1336  ; Run_Control
00003e  ee003a90          VMOV     s1,r3                 ;1336
000042  eef80a60          VCVT.F32.U32 s1,s1                 ;1336
000046  eeb40ae0          VCMPE.F32 s0,s1                 ;1336
00004a  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1336
00004e  dc09              BGT      |L9.100|
000050  6bd2              LDR      r2,[r2,#0x3c]         ;1336  ; Run_Control
000052  ee002a90          VMOV     s1,r2                 ;1336
000056  eef80a60          VCVT.F32.U32 s1,s1                 ;1336
00005a  eeb40ae0          VCMPE.F32 s0,s1                 ;1336
00005e  eef1fa10          VMRS     APSR_nzcv,FPSCR       ;1336
000062  d20f              BCS      |L9.132|
                  |L9.100|
000064  4814              LDR      r0,|L9.184|
000066  7800              LDRB     r0,[r0,#0]            ;1338  ; para_set4
000068  28ff              CMP      r0,#0xff              ;1338
00006a  d101              BNE      |L9.112|
00006c  f7fffffe          BL       BEEP_Tiggr
                  |L9.112|
000070  2170              MOVS     r1,#0x70              ;1341
000072  2068              MOVS     r0,#0x68              ;1341
000074  f7fffffe          BL       TM1650_SET_LED
000078  4621              MOV      r1,r4                 ;1342
00007a  4628              MOV      r0,r5                 ;1342
00007c  e8bd4070          POP      {r4-r6,lr}            ;1342
000080  f7ffbffe          B.W      GPIO_SetBits
                  |L9.132|
000084  4621              MOV      r1,r4                 ;1344
000086  4628              MOV      r0,r5                 ;1344
000088  f7fffffe          BL       GPIO_ResetBits
00008c  2171              MOVS     r1,#0x71              ;1345
00008e  2048              MOVS     r0,#0x48              ;1345
000090  f7fffffe          BL       TM1650_SET_LED
000094  e8bd4070          POP      {r4-r6,lr}            ;1346
000098  21f2              MOVS     r1,#0xf2              ;1346
00009a  2068              MOVS     r0,#0x68              ;1346
00009c  f7ffbffe          B.W      TM1650_SET_LED
;;;1352       }
;;;1353   }
                          ENDP

                  |L9.160|
                          DCD      ||.data||
                  |L9.164|
                          DCD      0x40020c00
                  |L9.168|
                          DCD      para_set1
                  |L9.172|
                          DCD      DISS_Voltage
                  |L9.176|
0000b0  42c80000          DCFS     0x42c80000 ; 100
                  |L9.180|
                          DCD      Run_Control
                  |L9.184|
                          DCD      para_set4

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  _aDialogCreate2
                          DCD      WINDOW_CreateIndirect
                          DCD      ||.conststring||
000008  08090000          DCW      0x0809,0x0000
00000c  000001e0          DCW      0x0000,0x01e0
000010  01100000          DCW      0x0110,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000024  080c00a3          DCW      0x080c,0x00a3
000028  00e2004d          DCW      0x00e2,0x004d
00002c  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      BUTTON_CreateIndirect
                          DCD      ||.conststring||+0x8
000040  080d00f3          DCW      0x080d,0x00f3
000044  00e2004d          DCW      0x00e2,0x004d
000048  002d0000          DCW      0x002d,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00005c  0810001c          DCW      0x0810,0x001c
000060  00320040          DCW      0x0032,0x0040
000064  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000078  0811001c          DCW      0x0811,0x001c
00007c  00780040          DCW      0x0078,0x0040
000080  00200000          DCW      0x0020,0x0000
                          DCD      0x00000064
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000094  081e00f0          DCW      0x081e,0x00f0
000098  00320020          DCW      0x0032,0x0020
00009c  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000b0  081f00f0          DCW      0x081f,0x00f0
0000b4  00790020          DCW      0x0079,0x0020
0000b8  001e0000          DCW      0x001e,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000cc  09390122          DCW      0x0939,0x0122
0000d0  00960050          DCW      0x0096,0x0050
0000d4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0000e8  09100122          DCW      0x0910,0x0122
0000ec  00640050          DCW      0x0064,0x0050
0000f0  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000104  0911017c          DCW      0x0911,0x017c
000108  00640041          DCW      0x0064,0x0041
00010c  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000120  0891005f          DCW      0x0891,0x005f
000124  00300096          DCW      0x0030,0x0096
000128  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
00013c  0892005f          DCW      0x0892,0x005f
000140  00740096          DCW      0x0074,0x0096
000144  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000158  08960190          DCW      0x0896,0x0190
00015c  00040032          DCW      0x0004,0x0032
000160  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000174  090d005f          DCW      0x090d,0x005f
000178  00b80096          DCW      0x00b8,0x0096
00017c  00280000          DCW      0x0028,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
000190  0912012c          DCW      0x0912,0x012c
000194  00020050          DCW      0x0002,0x0050
000198  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001ac  092d017c          DCW      0x092d,0x017c
0001b0  00960041          DCW      0x0096,0x0041
0001b4  00140000          DCW      0x0014,0x0000
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      TEXT_CreateIndirect
                          DCD      ||.conststring||+0x10
0001c8  093d017c          DCW      0x093d,0x017c
0001cc  00080014          DCW      0x0008,0x0014
0001d0  000f0000          DCW      0x000f,0x0000
                          DCD      0x00000000
                          DCD      0x00000000

                          AREA ||.conststring||, DATA, READONLY, MERGE=1, STRINGS, ALIGN=2

000000  57696e64          DCB      "Window",0
000004  6f7700  
000007  00                DCB      0
000008  42757474          DCB      "Button",0
00000c  6f6e00  
00000f  00                DCB      0
000010  54657874          DCB      "Text",0
000014  00      

                          AREA ||.data||, DATA, ALIGN=2

                  load_sw
000000  00                DCB      0x00
                  status_flash
000001  000000            DCB      0x00,0x00,0x00
                  load_wind
                          DCD      0x00000000
                  load_cutoffv
                          DCD      0x00000000

                          AREA ||area_number.15||, DATA, ALIGN=0

                          EXPORTAS ||area_number.15||, ||.data||
                  load_mode
000000  00                DCB      0x00

;*** Start embedded assembler ***

#line 1 "..\\APP\\load_Face.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___11_load_Face_c_load_sw____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_load_Face_c_load_sw____REVSH|
#line 144
|__asm___11_load_Face_c_load_sw____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
