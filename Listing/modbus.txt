; generated by Component: ARM Compiler 5.06 update 6 (build 750) Tool: ArmCC [4d3637]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o..\output\modbus.o --asm_dir=..\Listing\ --list_dir=..\Listing\ --depend=..\output\modbus.d --cpu=Cortex-M4.fp --apcs=interwork -O1 --diag_suppress=9931,870 -I..\APP -I..\drive -I..\Include -I..\Libraries\CMSIS\inc -I..\Libraries\CMSIS\src -I..\Libraries\FWlib\inc -I..\Libraries\FWlib\src -I..\Listing -I..\Output -I..\Project -I..\STemWinLibrary522\Config -I..\STemWinLibrary522\emWinTask -I..\STemWinLibrary522\GUILib -I..\STemWinLibrary522\inc -I..\User -I..\USB\STM32_USB_HOST_Library\Class\HID\inc -I..\USB\STM32_USB_HOST_Library\Class\MSC\src -I..\USB\STM32_USB_HOST_Library\Core\src -I..\USB\USB_APP -I..\USB\STM32_USB_HOST_Library\Class\HID\src -I..\USB\STM32_USB_HOST_Library\Class\MSC\inc -I..\USB\STM32_USB_HOST_Library\Core\inc -I..\USB\STM32_USB_OTG_Driver\inc -I..\FATFS\exfuns -I..\FATFS\src\option -I..\FATFS\src -I..\MALLOC -I..\FATFS -I..\IAP -ID:\Keil_v5\ARM\RV31\INC -ID:\Keil_v5\ARM\CMSIS\Include -ID:\Keil_v5\ARM\INC\ST\STM32F4xx -D__UVISION_VERSION=525 -DUSE_STDPERIPH_DRIVER -DSTM32F40XX -DUSE_USB_OTG_FS -DUSE_EMBEDDED_PHY -DUSE_USB_OTG_HS -DSTM32F40XX --omf_browse=..\output\modbus.crf --no_multibyte_chars ..\drive\modbus.c]
                          THUMB

                          AREA ||i.Hardware_CRC||, CODE, READONLY, ALIGN=1

                  Hardware_CRC PROC
;;;1764   //-----------------------------CRCºÏ≤‚--------------------------------------------//
;;;1765   vu16 Hardware_CRC(vu8 *p_buffer,vu8 count)    //CRC16
000000  b503              PUSH     {r0,r1,lr}
;;;1766   {
000002  b082              SUB      sp,sp,#8
;;;1767   	vu16 CRC_Result=0xffff;
000004  f64f71ff          MOV      r1,#0xffff
000008  9101              STR      r1,[sp,#4]
;;;1768   	vu8 i;
;;;1769   	if(count==0)
00000a  f89d100c          LDRB     r1,[sp,#0xc]
00000e  2900              CMP      r1,#0
000010  d126              BNE      |L1.96|
;;;1770   	{
;;;1771   		count=1;
000012  2101              MOVS     r1,#1
000014  9103              STR      r1,[sp,#0xc]
000016  e023              B        |L1.96|
                  |L1.24|
;;;1772   	}
;;;1773   	while(count--)
;;;1774   	{
;;;1775   		CRC_Result^=*p_buffer;
000018  7801              LDRB     r1,[r0,#0]
00001a  f8bd2004          LDRH     r2,[sp,#4]
00001e  4051              EORS     r1,r1,r2
000020  9101              STR      r1,[sp,#4]
;;;1776   		for(i=0;i<8;i++)
000022  2100              MOVS     r1,#0
000024  9100              STR      r1,[sp,#0]
;;;1777   		{
;;;1778   			if(CRC_Result&1)
;;;1779   			{
;;;1780   				CRC_Result>>=1;
;;;1781   				CRC_Result^=0xA001;
000026  f24a0201          MOV      r2,#0xa001
00002a  e014              B        |L1.86|
                  |L1.44|
00002c  f8bd1004          LDRH     r1,[sp,#4]            ;1778
000030  07c9              LSLS     r1,r1,#31             ;1778
000032  d008              BEQ      |L1.70|
000034  f8bd1004          LDRH     r1,[sp,#4]            ;1780
000038  0849              LSRS     r1,r1,#1              ;1780
00003a  9101              STR      r1,[sp,#4]            ;1780
00003c  f8bd1004          LDRH     r1,[sp,#4]
000040  4051              EORS     r1,r1,r2
000042  9101              STR      r1,[sp,#4]
000044  e003              B        |L1.78|
                  |L1.70|
;;;1782   			}
;;;1783   			else 
;;;1784   			{
;;;1785   				CRC_Result>>=1;
000046  f8bd1004          LDRH     r1,[sp,#4]
00004a  0849              LSRS     r1,r1,#1
00004c  9101              STR      r1,[sp,#4]
                  |L1.78|
00004e  f89d1000          LDRB     r1,[sp,#0]            ;1776
000052  1c49              ADDS     r1,r1,#1              ;1776
000054  9100              STR      r1,[sp,#0]            ;1776
                  |L1.86|
000056  f89d1000          LDRB     r1,[sp,#0]            ;1776
00005a  2908              CMP      r1,#8                 ;1776
00005c  d3e6              BCC      |L1.44|
;;;1786   			}
;;;1787   		}
;;;1788   		p_buffer++;
00005e  1c40              ADDS     r0,r0,#1
                  |L1.96|
000060  f89d100c          LDRB     r1,[sp,#0xc]          ;1773
000064  1e4a              SUBS     r2,r1,#1              ;1773
000066  9203              STR      r2,[sp,#0xc]          ;1773
000068  d2d6              BCS      |L1.24|
;;;1789   	}
;;;1790   	return CRC_Result;
00006a  f8bd0004          LDRH     r0,[sp,#4]
;;;1791   }
00006e  b004              ADD      sp,sp,#0x10
000070  bd00              POP      {pc}
                          ENDP


                          AREA ||i.Transformation_ADC||, CODE, READONLY, ALIGN=2

                  Transformation_ADC PROC
;;;1113   //===============================AD÷µ◊™ªª≥…≤‚¡ø÷µ============================================//
;;;1114   void Transformation_ADC(void)  
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;1115   {
000004  ed2d8b02          VPUSH    {d8}
000008  b081              SUB      sp,sp,#4
;;;1116       static u32 rave;
;;;1117       static u8 rcount;
;;;1118   	vu32 var32;
;;;1119   	vu32 var32a;
;;;1120   	static u16 i,count,countr;
;;;1121   	static float sumv;
;;;1122   	static u32 sumr;
;;;1123   /*****************************ƒ⁄◊Ë≤‚¡øµÁ—π◊™ªª*******************************************/
;;;1124   //	if(r_raly == 1)
;;;1125   //    {
;;;1126   //        var32 = Vmon1_value;
;;;1127   //    }else if(r_raly == 0){
;;;1128   //        var32 = Vmon1_value - 5;
;;;1129   //    }
;;;1130   	if(page_sw == face_cal)
00000a  48fe              LDR      r0,|L2.1028|
00000c  7800              LDRB     r0,[r0,#0]  ; page_sw
;;;1131   	{
;;;1132   		if(vflag == 1)
;;;1133   		{
;;;1134   			var32 = Vmon1_value;
00000e  f8dfb3f8          LDR      r11,|L2.1032|
;;;1135   			var32 = var32 * REG_CorrectionV1;  
;;;1136   			if ((Polar & 0x01) == 0x01)		  
;;;1137   			{
;;;1138   				if (var32 < REG_ReadV_Offset1) 
;;;1139   				{
;;;1140   					var32 = 0;
;;;1141   				}
;;;1142   				else var32 = var32 - REG_ReadV_Offset1;
;;;1143   			}
;;;1144   			else var32 = var32 + REG_ReadV_Offset1;
;;;1145   			var32 = var32 >> 12;
;;;1146   			if (var32 < 30) var32 = 0;				  //40mV”î–Ç»•¬£
;;;1147   			Voltage = var32;
;;;1148   			DISS_Voltage=Voltage;
;;;1149   			DISS_Voltage=DISS_Voltage/1000;//›ÜÃ£–î æ÷ß—π
;;;1150   		}else if(vflag == 0){
;;;1151   			var32 = Vmon1_value;
;;;1152   			var32 = var32 * REG_CorrectionV;  
;;;1153   			if ((Polar & 0x01) == 0x01)		  
;;;1154   			{
;;;1155   				if (var32 < REG_ReadV_Offset) 
;;;1156   				{
;;;1157   					var32 = 0;
;;;1158   				}
;;;1159   				else var32 = var32 - REG_ReadV_Offset;
;;;1160   			}
;;;1161   			else var32 = var32 + REG_ReadV_Offset;
;;;1162   			var32 = var32 >> 12;
;;;1163   			if (var32 < 30) var32 = 0;				  //40mV”î–Ç»•¬£
;;;1164   			Voltage = var32;
;;;1165   			DISS_Voltage=Voltage;
;;;1166   			DISS_Voltage=DISS_Voltage/1000;//›ÜÃ£–î æ÷ß—π
;;;1167   		}
;;;1168   	}else{
;;;1169   		if(Vmon1_value < 4300)
;;;1170   		{		
;;;1171   			V_SW(0);//ÁîµÂéã‰ΩéÊ°£‰Ωç
;;;1172   			DISS_Voltage = 0;
000012  eddf8afe          VLDR     s17,|L2.1036|
;;;1173   			i=0;
;;;1174   		}else{										
;;;1175   			if(DISS_Voltage > 10)
;;;1176   			{
;;;1177   				V_SW(1);//ÁîµÂéãÈ´òÊ°£‰Ωç
;;;1178   				if(r_raly == 1)
000016  f8df93f8          LDR      r9,|L2.1040|
00001a  f8dfa3f8          LDR      r10,|L2.1044|
00001e  ed9f8afe          VLDR     s16,|L2.1048|
000022  4efe              LDR      r6,|L2.1052|
000024  4ffe              LDR      r7,|L2.1056|
000026  f04f0800          MOV      r8,#0                 ;1138
00002a  f10705a8          ADD      r5,r7,#0xa8           ;1147
00002e  f1a50454          SUB      r4,r5,#0x54           ;1138
000032  2808              CMP      r0,#8                 ;1130
000034  d00f              BEQ      |L2.86|
000036  f8db1000          LDR      r1,[r11,#0]           ;1169  ; Vmon1_value
00003a  f24100cc          MOV      r0,#0x10cc            ;1169
00003e  4281              CMP      r1,r0                 ;1169
000040  d26c              BCS      |L2.284|
000042  2000              MOVS     r0,#0                 ;1171
000044  f7fffffe          BL       V_SW
000048  edca8a00          VSTR     s17,[r10,#0]          ;1172
00004c  f1a60028          SUB      r0,r6,#0x28           ;1173
000050  f8a08002          STRH     r8,[r0,#2]            ;1173
000054  e0e2              B        |L2.540|
                  |L2.86|
000056  48f3              LDR      r0,|L2.1060|
000058  7801              LDRB     r1,[r0,#0]            ;1132  ; vflag
00005a  2901              CMP      r1,#1                 ;1132
00005c  d002              BEQ      |L2.100|
00005e  7800              LDRB     r0,[r0,#0]            ;1150  ; vflag
000060  b370              CBZ      r0,|L2.192|
000062  e0db              B        |L2.540|
                  |L2.100|
000064  f8db0000          LDR      r0,[r11,#0]           ;1134  ; Vmon1_value
000068  9000              STR      r0,[sp,#0]            ;1134
00006a  6b78              LDR      r0,[r7,#0x34]         ;1135  ; Correct_Parametet
00006c  9900              LDR      r1,[sp,#0]            ;1135
00006e  4348              MULS     r0,r1,r0              ;1135
000070  9000              STR      r0,[sp,#0]            ;1135
000072  7830              LDRB     r0,[r6,#0]            ;1136  ; correct_por
000074  07c0              LSLS     r0,r0,#31             ;1136
000076  d00b              BEQ      |L2.144|
000078  6b60              LDR      r0,[r4,#0x34]         ;1138  ; Correct_Strong
00007a  9900              LDR      r1,[sp,#0]            ;1138
00007c  4288              CMP      r0,r1                 ;1138
00007e  d902              BLS      |L2.134|
000080  f8cd8000          STR      r8,[sp,#0]            ;1140
000084  e008              B        |L2.152|
                  |L2.134|
000086  6b60              LDR      r0,[r4,#0x34]         ;1142  ; Correct_Strong
000088  9900              LDR      r1,[sp,#0]            ;1142
00008a  1a08              SUBS     r0,r1,r0              ;1142
00008c  9000              STR      r0,[sp,#0]            ;1142
00008e  e003              B        |L2.152|
                  |L2.144|
000090  6b60              LDR      r0,[r4,#0x34]         ;1144  ; Correct_Strong
000092  9900              LDR      r1,[sp,#0]            ;1144
000094  4408              ADD      r0,r0,r1              ;1144
000096  9000              STR      r0,[sp,#0]            ;1144
                  |L2.152|
000098  9800              LDR      r0,[sp,#0]            ;1145
00009a  0b00              LSRS     r0,r0,#12             ;1145
00009c  9000              STR      r0,[sp,#0]            ;1145
00009e  9800              LDR      r0,[sp,#0]            ;1146
0000a0  281e              CMP      r0,#0x1e              ;1146
0000a2  d201              BCS      |L2.168|
0000a4  f8cd8000          STR      r8,[sp,#0]            ;1146
                  |L2.168|
0000a8  9800              LDR      r0,[sp,#0]            ;1147
0000aa  62a8              STR      r0,[r5,#0x28]         ;1147  ; Run_Control
0000ac  6aa8              LDR      r0,[r5,#0x28]         ;1148  ; Run_Control
0000ae  ee000a10          VMOV     s0,r0                 ;1148
0000b2  eeb80a40          VCVT.F32.U32 s0,s0                 ;1148
0000b6  eec00a08          VDIV.F32 s1,s0,s16             ;1149
0000ba  edca0a00          VSTR     s1,[r10,#0]           ;1149
0000be  e0ad              B        |L2.540|
                  |L2.192|
0000c0  f8db0000          LDR      r0,[r11,#0]           ;1151  ; Vmon1_value
0000c4  9000              STR      r0,[sp,#0]            ;1151
0000c6  6838              LDR      r0,[r7,#0]            ;1152  ; Correct_Parametet
0000c8  9900              LDR      r1,[sp,#0]            ;1152
0000ca  4348              MULS     r0,r1,r0              ;1152
0000cc  9000              STR      r0,[sp,#0]            ;1152
0000ce  7830              LDRB     r0,[r6,#0]            ;1153  ; correct_por
0000d0  07c0              LSLS     r0,r0,#31             ;1153
0000d2  d00b              BEQ      |L2.236|
0000d4  6820              LDR      r0,[r4,#0]            ;1155  ; Correct_Strong
0000d6  9900              LDR      r1,[sp,#0]            ;1155
0000d8  4288              CMP      r0,r1                 ;1155
0000da  d902              BLS      |L2.226|
0000dc  f8cd8000          STR      r8,[sp,#0]            ;1157
0000e0  e008              B        |L2.244|
                  |L2.226|
0000e2  6820              LDR      r0,[r4,#0]            ;1159  ; Correct_Strong
0000e4  9900              LDR      r1,[sp,#0]            ;1159
0000e6  1a08              SUBS     r0,r1,r0              ;1159
0000e8  9000              STR      r0,[sp,#0]            ;1159
0000ea  e003              B        |L2.244|
                  |L2.236|
0000ec  6820              LDR      r0,[r4,#0]            ;1161  ; Correct_Strong
0000ee  9900              LDR      r1,[sp,#0]            ;1161
0000f0  4408              ADD      r0,r0,r1              ;1161
0000f2  9000              STR      r0,[sp,#0]            ;1161
                  |L2.244|
0000f4  9800              LDR      r0,[sp,#0]            ;1162
0000f6  0b00              LSRS     r0,r0,#12             ;1162
0000f8  9000              STR      r0,[sp,#0]            ;1162
0000fa  9800              LDR      r0,[sp,#0]            ;1163
0000fc  281e              CMP      r0,#0x1e              ;1163
0000fe  d201              BCS      |L2.260|
000100  f8cd8000          STR      r8,[sp,#0]            ;1163
                  |L2.260|
000104  9800              LDR      r0,[sp,#0]            ;1164
000106  62a8              STR      r0,[r5,#0x28]         ;1164  ; Run_Control
000108  6aa8              LDR      r0,[r5,#0x28]         ;1165  ; Run_Control
00010a  ee000a10          VMOV     s0,r0                 ;1165
00010e  eeb80a40          VCVT.F32.U32 s0,s0                 ;1165
000112  eec00a08          VDIV.F32 s1,s0,s16             ;1166
000116  edca0a00          VSTR     s1,[r10,#0]           ;1166
00011a  e07f              B        |L2.540|
                  |L2.284|
00011c  49c2              LDR      r1,|L2.1064|
00011e  f8da0000          LDR      r0,[r10,#0]           ;1175  ; DISS_Voltage
000122  4288              CMP      r0,r1                 ;1175
000124  dd3d              BLE      |L2.418|
000126  2001              MOVS     r0,#1                 ;1177
000128  f7fffffe          BL       V_SW
00012c  f8990000          LDRB     r0,[r9,#0]  ; r_raly
000130  2801              CMP      r0,#1
000132  d003              BEQ      |L2.316|
;;;1179   				{
;;;1180   					var32 = Vmon1_value;
;;;1181   				}else if(r_raly == 0){
000134  f8990000          LDRB     r0,[r9,#0]  ; r_raly
000138  b120              CBZ      r0,|L2.324|
00013a  e007              B        |L2.332|
                  |L2.316|
00013c  f8db0000          LDR      r0,[r11,#0]           ;1180  ; Vmon1_value
000140  9000              STR      r0,[sp,#0]            ;1180
000142  e003              B        |L2.332|
                  |L2.324|
;;;1182   					var32 = Vmon1_value - 2;
000144  f8db0000          LDR      r0,[r11,#0]  ; Vmon1_value
000148  1e80              SUBS     r0,r0,#2
00014a  9000              STR      r0,[sp,#0]
                  |L2.332|
;;;1183   				}
;;;1184   //				var32 = Vmon1_value;
;;;1185   				var32 = var32 * REG_CorrectionV1;  
00014c  6b78              LDR      r0,[r7,#0x34]  ; Correct_Parametet
00014e  9900              LDR      r1,[sp,#0]
000150  4348              MULS     r0,r1,r0
000152  9000              STR      r0,[sp,#0]
;;;1186   				if ((Polar & 0x01) == 0x01)		  
000154  7830              LDRB     r0,[r6,#0]  ; correct_por
000156  07c0              LSLS     r0,r0,#31
000158  d00b              BEQ      |L2.370|
;;;1187   				{
;;;1188   					if (var32 < REG_ReadV_Offset1) 
00015a  6b60              LDR      r0,[r4,#0x34]  ; Correct_Strong
00015c  9900              LDR      r1,[sp,#0]
00015e  4288              CMP      r0,r1
000160  d902              BLS      |L2.360|
;;;1189   					{
;;;1190   						var32 = 0;
000162  f8cd8000          STR      r8,[sp,#0]
000166  e008              B        |L2.378|
                  |L2.360|
;;;1191   					}
;;;1192   					else var32 = var32 - REG_ReadV_Offset1;
000168  6b60              LDR      r0,[r4,#0x34]  ; Correct_Strong
00016a  9900              LDR      r1,[sp,#0]
00016c  1a08              SUBS     r0,r1,r0
00016e  9000              STR      r0,[sp,#0]
000170  e003              B        |L2.378|
                  |L2.370|
;;;1193   				}
;;;1194   				else var32 = var32 + REG_ReadV_Offset1;
000172  6b60              LDR      r0,[r4,#0x34]  ; Correct_Strong
000174  9900              LDR      r1,[sp,#0]
000176  4408              ADD      r0,r0,r1
000178  9000              STR      r0,[sp,#0]
                  |L2.378|
;;;1195   				var32 = var32 >> 12;
00017a  9800              LDR      r0,[sp,#0]
00017c  0b00              LSRS     r0,r0,#12
00017e  9000              STR      r0,[sp,#0]
;;;1196   				if (var32 < 30) var32 = 0;				  //40mV”î–Ç»•¬£
000180  9800              LDR      r0,[sp,#0]
000182  281e              CMP      r0,#0x1e
000184  d201              BCS      |L2.394|
000186  f8cd8000          STR      r8,[sp,#0]
                  |L2.394|
;;;1197   				Voltage = var32;
00018a  9800              LDR      r0,[sp,#0]
00018c  62a8              STR      r0,[r5,#0x28]  ; Run_Control
;;;1198   				DISS_Voltage=Voltage;
00018e  6aa8              LDR      r0,[r5,#0x28]  ; Run_Control
000190  ee000a10          VMOV     s0,r0
000194  eeb80a40          VCVT.F32.U32 s0,s0
;;;1199   				DISS_Voltage=DISS_Voltage/1000;//›ÜÃ£–î æ÷ß—π
000198  eec00a08          VDIV.F32 s1,s0,s16
00019c  edca0a00          VSTR     s1,[r10,#0]
0001a0  e03c              B        |L2.540|
                  |L2.418|
;;;1200   				
;;;1201   			}else{
;;;1202   				V_SW(0);//ÁîµÂéã‰ΩéÊ°£‰Ωç
0001a2  2000              MOVS     r0,#0
0001a4  f7fffffe          BL       V_SW
;;;1203   				if(r_raly == 1)
0001a8  f8990000          LDRB     r0,[r9,#0]  ; r_raly
0001ac  2801              CMP      r0,#1
0001ae  d003              BEQ      |L2.440|
;;;1204   				{
;;;1205   					var32 = Vmon1_value;
;;;1206   				}else if(r_raly == 0){
0001b0  f8990000          LDRB     r0,[r9,#0]  ; r_raly
0001b4  b120              CBZ      r0,|L2.448|
0001b6  e007              B        |L2.456|
                  |L2.440|
0001b8  f8db0000          LDR      r0,[r11,#0]           ;1205  ; Vmon1_value
0001bc  9000              STR      r0,[sp,#0]            ;1205
0001be  e003              B        |L2.456|
                  |L2.448|
;;;1207   					var32 = Vmon1_value - 3;
0001c0  f8db0000          LDR      r0,[r11,#0]  ; Vmon1_value
0001c4  1ec0              SUBS     r0,r0,#3
0001c6  9000              STR      r0,[sp,#0]
                  |L2.456|
;;;1208   				}
;;;1209   //				var32 = Vmon1_value;
;;;1210   				var32 = var32 * REG_CorrectionV;  
0001c8  6838              LDR      r0,[r7,#0]  ; Correct_Parametet
0001ca  9900              LDR      r1,[sp,#0]
0001cc  4348              MULS     r0,r1,r0
0001ce  9000              STR      r0,[sp,#0]
;;;1211   				if ((Polar & 0x01) == 0x01)		  
0001d0  7830              LDRB     r0,[r6,#0]  ; correct_por
0001d2  07c0              LSLS     r0,r0,#31
0001d4  d00b              BEQ      |L2.494|
;;;1212   				{
;;;1213   					if (var32 < REG_ReadV_Offset) 
0001d6  6820              LDR      r0,[r4,#0]  ; Correct_Strong
0001d8  9900              LDR      r1,[sp,#0]
0001da  4288              CMP      r0,r1
0001dc  d902              BLS      |L2.484|
;;;1214   					{
;;;1215   						var32 = 0;
0001de  f8cd8000          STR      r8,[sp,#0]
0001e2  e008              B        |L2.502|
                  |L2.484|
;;;1216   					}
;;;1217   					else var32 = var32 - REG_ReadV_Offset;
0001e4  6820              LDR      r0,[r4,#0]  ; Correct_Strong
0001e6  9900              LDR      r1,[sp,#0]
0001e8  1a08              SUBS     r0,r1,r0
0001ea  9000              STR      r0,[sp,#0]
0001ec  e003              B        |L2.502|
                  |L2.494|
;;;1218   				}
;;;1219   				else var32 = var32 + REG_ReadV_Offset;
0001ee  6820              LDR      r0,[r4,#0]  ; Correct_Strong
0001f0  9900              LDR      r1,[sp,#0]
0001f2  4408              ADD      r0,r0,r1
0001f4  9000              STR      r0,[sp,#0]
                  |L2.502|
;;;1220   				var32 = var32 >> 12;
0001f6  9800              LDR      r0,[sp,#0]
0001f8  0b00              LSRS     r0,r0,#12
0001fa  9000              STR      r0,[sp,#0]
;;;1221   				if (var32 < 30) var32 = 0;				  //40mV”î–Ç»•¬£
0001fc  9800              LDR      r0,[sp,#0]
0001fe  281e              CMP      r0,#0x1e
000200  d201              BCS      |L2.518|
000202  f8cd8000          STR      r8,[sp,#0]
                  |L2.518|
;;;1222   				Voltage = var32;
000206  9800              LDR      r0,[sp,#0]
000208  62a8              STR      r0,[r5,#0x28]  ; Run_Control
;;;1223   				DISS_Voltage=Voltage;
00020a  6aa8              LDR      r0,[r5,#0x28]  ; Run_Control
00020c  ee000a10          VMOV     s0,r0
000210  eeb80a40          VCVT.F32.U32 s0,s0
;;;1224   				DISS_Voltage=DISS_Voltage/1000;//›ÜÃ£–î æ÷ß—π
000214  eec00a08          VDIV.F32 s1,s0,s16
000218  edca0a00          VSTR     s1,[r10,#0]
                  |L2.540|
;;;1225   			}
;;;1226   		}
;;;1227   	}
;;;1228   	if(count == 200)
00021c  4a7f              LDR      r2,|L2.1052|
00021e  3a28              SUBS     r2,r2,#0x28
000220  8890              LDRH     r0,[r2,#4]  ; count
000222  28c8              CMP      r0,#0xc8
000224  d019              BEQ      |L2.602|
;;;1229   	{
;;;1230   		disloadv = sumv/200;
;;;1231   		count = 0;
;;;1232   		sumv = 0;
;;;1233   	}else{
;;;1234   		sumv += DISS_Voltage;
000226  ed920a02          VLDR     s0,[r2,#8]
00022a  edda0a00          VLDR     s1,[r10,#0]
00022e  ee300a20          VADD.F32 s0,s0,s1
000232  ed820a02          VSTR     s0,[r2,#8]
;;;1235   		count++;
000236  1c40              ADDS     r0,r0,#1
000238  8090              STRH     r0,[r2,#4]
                  |L2.570|
;;;1236   	}
;;;1237   	var32 = 0;
00023a  f8cd8000          STR      r8,[sp,#0]
;;;1238   //		if(DISS_Voltage >= 30)
;;;1239   //		{
;;;1240   //	//        if(r_raly == 1)
;;;1241   //	//        {
;;;1242   //	//            var32 = Vmon1_value;
;;;1243   //	//        }else if(r_raly == 0){
;;;1244   //	//            var32 = Vmon1_value - 5;
;;;1245   //	//        }
;;;1246   //			var32 = var32 * REG_CorrectionV2;  
;;;1247   //			if ((Polar & 0x01) == 0x01)		  
;;;1248   //			{
;;;1249   //				if (var32 < REG_ReadV_Offset2) 
;;;1250   //				{
;;;1251   //					var32 = 0;
;;;1252   //				}
;;;1253   //				else var32 = var32 - REG_ReadV_Offset2;
;;;1254   //			}
;;;1255   //			else var32 = var32 + REG_ReadV_Offset2;
;;;1256   //			var32 = var32 >> 12;
;;;1257   //			if (var32 < 30) var32 = 0;				  //40mV”î–Ç»•¬£
;;;1258   //			Voltage = var32;
;;;1259   //			DISS_Voltage=Voltage;
;;;1260   //			DISS_Voltage=DISS_Voltage/1000;//›ÜÃ£–î æ÷ß—π
;;;1261   //		}
;;;1262   		
;;;1263   	
;;;1264   	/*******************∏∫‘ÿ≤‚¡øµÁ¡˜◊™ªª**************************************/
;;;1265   	if(cflag == 0)
00023e  f8dfb1ec          LDR      r11,|L2.1068|
000242  f89b1000          LDRB     r1,[r11,#0]  ; cflag
;;;1266   	{
;;;1267   		var32 = Imon1_value;
000246  f8dfc1e8          LDR      r12,|L2.1072|
;;;1268   		var32 = var32 * REG_Load_A;  
;;;1269   		if ((Polar1 & 0x01) == 0x01)		  
;;;1270   		{
;;;1271   			if (var32 < REG_LoadA_Offset) 
;;;1272   			{
;;;1273   				var32 = 0;
;;;1274   			}
;;;1275   			else var32 = var32 - REG_LoadA_Offset;
;;;1276   		}
;;;1277   		else var32 = var32 + REG_LoadA_Offset;
;;;1278   		var32 = var32 >> 12;
;;;1279   		Laod_Current = var32;
;;;1280   		DISS_Current=Laod_Current;
00024a  4b7a              LDR      r3,|L2.1076|
;;;1281   		DISS_Current=DISS_Current/1000;//º∆À„œ‘ æµÁ¡˜
;;;1282   		if(DISS_Current > 0.1)
;;;1283   		{
;;;1284   			var32 = Imon1_value;
;;;1285   			var32 = var32 * REG_Load_A1;  
00024c  487a              LDR      r0,|L2.1080|
00024e  b191              CBZ      r1,|L2.630|
;;;1286   			if ((Polar1 & 0x01) == 0x01)		  
;;;1287   			{
;;;1288   				if (var32 < REG_LoadA_Offset1) 
;;;1289   				{
;;;1290   					var32 = 0;
;;;1291   				}
;;;1292   				else var32 = var32 - REG_LoadA_Offset1;
;;;1293   			}
;;;1294   			else var32 = var32 + REG_LoadA_Offset1;
;;;1295   			var32 = var32 >> 12;
;;;1296   			Laod_Current = var32;
;;;1297   			DISS_Current=Laod_Current;
;;;1298   			DISS_Current=DISS_Current/1000;//›ÜÃ£–î æ÷ß¬∑
;;;1299   		}
;;;1300   		if(DISS_Current > 0.9)
;;;1301   		{
;;;1302   			var32 = Imon1_value;
;;;1303   			var32 = var32 * REG_Load_A2;  
;;;1304   			if ((Polar1 & 0x01) == 0x01)		  
;;;1305   			{
;;;1306   				if (var32 < REG_LoadA_Offset2) 
;;;1307   				{
;;;1308   					var32 = 0;
;;;1309   				}
;;;1310   				else var32 = var32 - REG_LoadA_Offset2;
;;;1311   			}
;;;1312   			else var32 = var32 + REG_LoadA_Offset2;
;;;1313   			var32 = var32 >> 12;
;;;1314   			Laod_Current = var32;
;;;1315   			DISS_Current=Laod_Current;
;;;1316   			DISS_Current=DISS_Current/1000;//›ÜÃ£–î æ÷ß¬∑
;;;1317   		}
;;;1318   	}else if(cflag == 1){
000250  f89b1000          LDRB     r1,[r11,#0]  ; cflag
000254  2901              CMP      r1,#1
000256  d07d              BEQ      |L2.852|
000258  e0d0              B        |L2.1020|
                  |L2.602|
00025a  ed920a02          VLDR     s0,[r2,#8]            ;1230
00025e  eddf0a77          VLDR     s1,|L2.1084|
000262  4877              LDR      r0,|L2.1088|
000264  ee801a20          VDIV.F32 s2,s0,s1              ;1230
000268  ed801a00          VSTR     s2,[r0,#0]            ;1230
00026c  f8a28004          STRH     r8,[r2,#4]            ;1231
000270  edc28a02          VSTR     s17,[r2,#8]           ;1232
000274  e7e1              B        |L2.570|
                  |L2.630|
000276  f8dc1000          LDR      r1,[r12,#0]           ;1267  ; Imon1_value
00027a  9100              STR      r1,[sp,#0]            ;1267
00027c  6879              LDR      r1,[r7,#4]            ;1268  ; Correct_Parametet
00027e  f8dda000          LDR      r10,[sp,#0]           ;1268
000282  fb01f10a          MUL      r1,r1,r10             ;1268
000286  9100              STR      r1,[sp,#0]            ;1268
000288  7871              LDRB     r1,[r6,#1]            ;1269  ; correct_por
00028a  07c9              LSLS     r1,r1,#31             ;1269
00028c  d00e              BEQ      |L2.684|
00028e  6861              LDR      r1,[r4,#4]            ;1271  ; Correct_Strong
000290  f8dda000          LDR      r10,[sp,#0]           ;1271
000294  4551              CMP      r1,r10                ;1271
000296  d902              BLS      |L2.670|
000298  f8cd8000          STR      r8,[sp,#0]            ;1273
00029c  e00b              B        |L2.694|
                  |L2.670|
00029e  6861              LDR      r1,[r4,#4]            ;1275  ; Correct_Strong
0002a0  f8dda000          LDR      r10,[sp,#0]           ;1275
0002a4  ebaa0101          SUB      r1,r10,r1             ;1275
0002a8  9100              STR      r1,[sp,#0]            ;1275
0002aa  e004              B        |L2.694|
                  |L2.684|
0002ac  6861              LDR      r1,[r4,#4]            ;1277  ; Correct_Strong
0002ae  f8dda000          LDR      r10,[sp,#0]           ;1277
0002b2  4451              ADD      r1,r1,r10             ;1277
0002b4  9100              STR      r1,[sp,#0]            ;1277
                  |L2.694|
0002b6  9900              LDR      r1,[sp,#0]            ;1278
0002b8  0b09              LSRS     r1,r1,#12             ;1278
0002ba  9100              STR      r1,[sp,#0]            ;1278
0002bc  9900              LDR      r1,[sp,#0]            ;1279
0002be  6329              STR      r1,[r5,#0x30]         ;1279  ; Run_Control
0002c0  6b29              LDR      r1,[r5,#0x30]         ;1280  ; Run_Control
0002c2  ee001a10          VMOV     s0,r1                 ;1280
0002c6  eef80a40          VCVT.F32.U32 s1,s0                 ;1280
0002ca  ee800a88          VDIV.F32 s0,s1,s16             ;1281
0002ce  ed830a00          VSTR     s0,[r3,#0]            ;1281
0002d2  ee101a10          VMOV     r1,s0                 ;1282
0002d6  f8dfa16c          LDR      r10,|L2.1092|
0002da  4551              CMP      r1,r10                ;1282
0002dc  db2c              BLT      |L2.824|
0002de  f8dc1000          LDR      r1,[r12,#0]           ;1284  ; Imon1_value
0002e2  9100              STR      r1,[sp,#0]            ;1284
0002e4  6981              LDR      r1,[r0,#0x18]         ;1285  ; InFlashSave
0002e6  f8dda000          LDR      r10,[sp,#0]           ;1285
0002ea  fb01f10a          MUL      r1,r1,r10             ;1285
0002ee  9100              STR      r1,[sp,#0]            ;1285
0002f0  7871              LDRB     r1,[r6,#1]            ;1286  ; correct_por
0002f2  07c9              LSLS     r1,r1,#31             ;1286
0002f4  d00d              BEQ      |L2.786|
0002f6  6a01              LDR      r1,[r0,#0x20]         ;1288  ; InFlashSave
0002f8  f8dda000          LDR      r10,[sp,#0]           ;1288
0002fc  4551              CMP      r1,r10                ;1288
0002fe  d902              BLS      |L2.774|
000300  f8cd8000          STR      r8,[sp,#0]            ;1290
000304  e00a              B        |L2.796|
                  |L2.774|
000306  f8dda000          LDR      r10,[sp,#0]           ;1292
00030a  ebaa0101          SUB      r1,r10,r1             ;1292
00030e  9100              STR      r1,[sp,#0]            ;1292
000310  e004              B        |L2.796|
                  |L2.786|
000312  6a01              LDR      r1,[r0,#0x20]         ;1294  ; InFlashSave
000314  f8dda000          LDR      r10,[sp,#0]           ;1294
000318  4451              ADD      r1,r1,r10             ;1294
00031a  9100              STR      r1,[sp,#0]            ;1294
                  |L2.796|
00031c  9900              LDR      r1,[sp,#0]            ;1295
00031e  0b09              LSRS     r1,r1,#12             ;1295
000320  9100              STR      r1,[sp,#0]            ;1295
000322  9900              LDR      r1,[sp,#0]            ;1296
000324  6329              STR      r1,[r5,#0x30]         ;1296  ; Run_Control
000326  6b29              LDR      r1,[r5,#0x30]         ;1297  ; Run_Control
000328  ee001a10          VMOV     s0,r1                 ;1297
00032c  eeb80a40          VCVT.F32.U32 s0,s0                 ;1297
000330  eec00a08          VDIV.F32 s1,s0,s16             ;1298
000334  edc30a00          VSTR     s1,[r3,#0]            ;1298
                  |L2.824|
000338  f8dfa10c          LDR      r10,|L2.1096|
00033c  6819              LDR      r1,[r3,#0]            ;1300  ; DISS_Current
00033e  4551              CMP      r1,r10                ;1300
000340  dd5c              BLE      |L2.1020|
000342  f8dc1000          LDR      r1,[r12,#0]           ;1302  ; Imon1_value
000346  9100              STR      r1,[sp,#0]            ;1302
000348  6a81              LDR      r1,[r0,#0x28]         ;1303  ; InFlashSave
00034a  f8ddc000          LDR      r12,[sp,#0]           ;1303
00034e  fb01f10c          MUL      r1,r1,r12             ;1303
000352  e000              B        |L2.854|
                  |L2.852|
000354  e025              B        |L2.930|
                  |L2.854|
000356  9100              STR      r1,[sp,#0]            ;1303
000358  7871              LDRB     r1,[r6,#1]            ;1304  ; correct_por
00035a  07c9              LSLS     r1,r1,#31             ;1304
00035c  d00d              BEQ      |L2.890|
00035e  6b01              LDR      r1,[r0,#0x30]         ;1306  ; InFlashSave
000360  f8ddc000          LDR      r12,[sp,#0]           ;1306
000364  4561              CMP      r1,r12                ;1306
000366  d902              BLS      |L2.878|
000368  f8cd8000          STR      r8,[sp,#0]            ;1308
00036c  e00a              B        |L2.900|
                  |L2.878|
00036e  f8ddc000          LDR      r12,[sp,#0]           ;1310
000372  ebac0101          SUB      r1,r12,r1             ;1310
000376  9100              STR      r1,[sp,#0]            ;1310
000378  e004              B        |L2.900|
                  |L2.890|
00037a  6b01              LDR      r1,[r0,#0x30]         ;1312  ; InFlashSave
00037c  f8ddc000          LDR      r12,[sp,#0]           ;1312
000380  4461              ADD      r1,r1,r12             ;1312
000382  9100              STR      r1,[sp,#0]            ;1312
                  |L2.900|
000384  9900              LDR      r1,[sp,#0]            ;1313
000386  0b09              LSRS     r1,r1,#12             ;1313
000388  9100              STR      r1,[sp,#0]            ;1313
00038a  9900              LDR      r1,[sp,#0]            ;1314
00038c  6329              STR      r1,[r5,#0x30]         ;1314  ; Run_Control
00038e  6b29              LDR      r1,[r5,#0x30]         ;1315  ; Run_Control
000390  ee001a10          VMOV     s0,r1                 ;1315
000394  eeb80a40          VCVT.F32.U32 s0,s0                 ;1315
000398  eec00a08          VDIV.F32 s1,s0,s16             ;1316
00039c  edc30a00          VSTR     s1,[r3,#0]            ;1316
0003a0  e02c              B        |L2.1020|
                  |L2.930|
;;;1319   		var32 = Imon1_value;
0003a2  f8dc1000          LDR      r1,[r12,#0]  ; Imon1_value
0003a6  9100              STR      r1,[sp,#0]
;;;1320   		var32 = var32 * REG_Load_AH;  
0003a8  6b81              LDR      r1,[r0,#0x38]  ; InFlashSave
0003aa  f8ddc000          LDR      r12,[sp,#0]
0003ae  fb01f10c          MUL      r1,r1,r12
0003b2  9100              STR      r1,[sp,#0]
;;;1321   		if ((Polar1 & 0x01) == 0x01)		  
0003b4  7871              LDRB     r1,[r6,#1]  ; correct_por
0003b6  07c9              LSLS     r1,r1,#31
0003b8  d00d              BEQ      |L2.982|
;;;1322   		{
;;;1323   			if (var32 < REG_LoadA_OffsetH) 
0003ba  6c01              LDR      r1,[r0,#0x40]  ; InFlashSave
0003bc  f8ddc000          LDR      r12,[sp,#0]
0003c0  4561              CMP      r1,r12
0003c2  d902              BLS      |L2.970|
;;;1324   			{
;;;1325   				var32 = 0;
0003c4  f8cd8000          STR      r8,[sp,#0]
0003c8  e00a              B        |L2.992|
                  |L2.970|
;;;1326   			}
;;;1327   			else var32 = var32 - REG_LoadA_OffsetH;
0003ca  f8ddc000          LDR      r12,[sp,#0]
0003ce  ebac0101          SUB      r1,r12,r1
0003d2  9100              STR      r1,[sp,#0]
0003d4  e004              B        |L2.992|
                  |L2.982|
;;;1328   		}
;;;1329   		else var32 = var32 + REG_LoadA_OffsetH;
0003d6  6c01              LDR      r1,[r0,#0x40]  ; InFlashSave
0003d8  f8ddc000          LDR      r12,[sp,#0]
0003dc  4461              ADD      r1,r1,r12
0003de  9100              STR      r1,[sp,#0]
                  |L2.992|
;;;1330   		var32 = var32 >> 12;
0003e0  9900              LDR      r1,[sp,#0]
0003e2  0b09              LSRS     r1,r1,#12
0003e4  9100              STR      r1,[sp,#0]
;;;1331   		Laod_Current = var32;
0003e6  9900              LDR      r1,[sp,#0]
0003e8  6329              STR      r1,[r5,#0x30]  ; Run_Control
;;;1332   		DISS_Current=Laod_Current;
0003ea  6b29              LDR      r1,[r5,#0x30]  ; Run_Control
0003ec  ee001a10          VMOV     s0,r1
0003f0  eeb80a40          VCVT.F32.U32 s0,s0
;;;1333   		DISS_Current=DISS_Current/1000;//›ÜÃ£–î æ÷ß¬∑
0003f4  eec00a08          VDIV.F32 s1,s0,s16
0003f8  edc30a00          VSTR     s1,[r3,#0]
                  |L2.1020|
;;;1334   //		if(DISS_Current > 10)
;;;1335   //		{
;;;1336   //			var32 = Imon1_value;
;;;1337   //		var32 = var32 * REG_Load_AH1;  
;;;1338   //		if ((Polar1 & 0x01) == 0x01)		  
;;;1339   //		{
;;;1340   //			if (var32 < REG_LoadA_OffsetH1) 
;;;1341   //			{
;;;1342   //				var32 = 0;
;;;1343   //			}
;;;1344   //			else var32 = var32 - REG_LoadA_OffsetH1;
;;;1345   //		}
;;;1346   //		else var32 = var32 + REG_LoadA_OffsetH1;
;;;1347   //		var32 = var32 >> 12;
;;;1348   //		Laod_Current = var32;
;;;1349   //		DISS_Current=Laod_Current;
;;;1350   //		DISS_Current=DISS_Current/1000;//›ÜÃ£–î æ÷ß¬∑
;;;1351   //		}
;;;1352   	}
;;;1353   	var32 = 0;	
0003fc  f8cd8000          STR      r8,[sp,#0]
;;;1354   	/*************************∏∫‘ÿµÁ—π∫ÕµÁ¡˜øÿ÷∆◊™ªª**************************************/
;;;1355   	if(flag_Load_CC==1)
000400  4912              LDR      r1,|L2.1100|
000402  e025              B        |L2.1104|
                  |L2.1028|
                          DCD      page_sw
                  |L2.1032|
                          DCD      Vmon1_value
                  |L2.1036|
00040c  00000000          DCFS     0x00000000 ; 0
                  |L2.1040|
                          DCD      r_raly
                  |L2.1044|
                          DCD      DISS_Voltage
                  |L2.1048|
000418  447a0000          DCFS     0x447a0000 ; 1000
                  |L2.1052|
                          DCD      ||.data||+0x28
                  |L2.1056|
                          DCD      ||.bss||
                  |L2.1060|
                          DCD      vflag
                  |L2.1064|
                          DCD      0x41200000
                  |L2.1068|
                          DCD      cflag
                  |L2.1072|
                          DCD      Imon1_value
                  |L2.1076|
                          DCD      DISS_Current
                  |L2.1080|
                          DCD      InFlashSave
                  |L2.1084|
00043c  43480000          DCFS     0x43480000 ; 200
                  |L2.1088|
                          DCD      disloadv
                  |L2.1092|
                          DCD      0x3dcccccd
                  |L2.1096|
                          DCD      0x3f666666
                  |L2.1100|
                          DCD      flagD
                  |L2.1104|
000450  7809              LDRB     r1,[r1,#0]  ; flagD
;;;1356   	{
;;;1357   		if(cflag == 0)
;;;1358   		{
;;;1359   			if(SET_Current_Laod <= 100)
;;;1360   			{
;;;1361   				var32 = SET_Current_Laod;
;;;1362   				var32=var32<<12;   
;;;1363   				if ((Polar1 & 0x04) == 0)			   
;;;1364   				{
;;;1365   					if (var32 < SET_LoadA_Offset) var32 = 0;
;;;1366   					else var32 = var32 - SET_LoadA_Offset;
;;;1367   				}
;;;1368   				else var32 = var32 + SET_LoadA_Offset;
;;;1369   				var32 = var32/SET_LoadA;
;;;1370   				var32=var32>>1;
;;;1371   				if(Flag_DAC_OFF==0)
000452  4bff              LDR      r3,|L2.2128|
000454  ea5f6c01          LSLS     r12,r1,#24            ;1355
;;;1372   				{
;;;1373   					Contr_Laod = var32;
000458  49fe              LDR      r1,|L2.2132|
00045a  d57c              BPL      |L2.1366|
00045c  f89bc000          LDRB     r12,[r11,#0]          ;1357  ; cflag
000460  f1bc0f00          CMP      r12,#0                ;1357
000464  d017              BEQ      |L2.1174|
;;;1374   				}
;;;1375   				if(SET_Current_Laod==0)
;;;1376   				{
;;;1377   					Contr_Laod=0;
;;;1378   				}
;;;1379   			}else if(SET_Current_Laod <= 900){
;;;1380   				var32 = SET_Current_Laod;
;;;1381   				var32=var32<<12;   
;;;1382   				if ((Polar1 & 0x04) == 0)			   
;;;1383   				{
;;;1384   					if (var32 < SET_LoadA_Offset1) var32 = 0;
;;;1385   					else var32 = var32 - SET_LoadA_Offset1;
;;;1386   				}
;;;1387   				else var32 = var32 + SET_LoadA_Offset1;
;;;1388   				var32 = var32/SET_LoadA1;
;;;1389   				var32=var32>>1;
;;;1390   				if(Flag_DAC_OFF==0)
;;;1391   				{
;;;1392   					Contr_Laod = var32;
;;;1393   				}
;;;1394   				if(SET_Current_Laod==0)
;;;1395   				{
;;;1396   					Contr_Laod=0;
;;;1397   				}
;;;1398   			}else{
;;;1399   				var32 = SET_Current_Laod;
;;;1400   				var32=var32<<12;   
;;;1401   				if ((Polar1 & 0x04) == 0)			   
;;;1402   				{
;;;1403   					if (var32 < SET_LoadA_Offset2) var32 = 0;
;;;1404   					else var32 = var32 - SET_LoadA_Offset2;
;;;1405   				}
;;;1406   				else 
;;;1407   					var32 = var32 + SET_LoadA_Offset2;
;;;1408   				var32 = var32/SET_LoadA2;
;;;1409   				var32=var32>>1;
;;;1410   				if(Flag_DAC_OFF==0)
;;;1411   				{
;;;1412   					Contr_Laod = var32;
;;;1413   				}
;;;1414   				if(SET_Current_Laod==0)
;;;1415   				{
;;;1416   					Contr_Laod=0;
;;;1417   				}
;;;1418   			}
;;;1419   		}else{
;;;1420   //			if(SET_Current_Laod <= 10000)
;;;1421   //			{
;;;1422   				var32 = SET_Current_Laod;
000466  f8d5c010          LDR      r12,[r5,#0x10]  ; Run_Control
00046a  f8cdc000          STR      r12,[sp,#0]
;;;1423   				var32=var32<<12;   
00046e  f8ddc000          LDR      r12,[sp,#0]
000472  ea4f3c0c          LSL      r12,r12,#12
000476  f8cdc000          STR      r12,[sp,#0]
;;;1424   				if ((Polar1 & 0x04) == 0)			   
00047a  f896c001          LDRB     r12,[r6,#1]  ; correct_por
00047e  ea5f7c4c          LSLS     r12,r12,#29
000482  d469              BMI      |L2.1368|
;;;1425   				{
;;;1426   					if (var32 < SET_LoadA_OffsetH) var32 = 0;
000484  f8d0c044          LDR      r12,[r0,#0x44]  ; InFlashSave
000488  f8dda000          LDR      r10,[sp,#0]
00048c  45d4              CMP      r12,r10
00048e  d96e              BLS      |L2.1390|
000490  f8cd8000          STR      r8,[sp,#0]
000494  e0da              B        |L2.1612|
                  |L2.1174|
000496  f8d5c010          LDR      r12,[r5,#0x10]        ;1359  ; Run_Control
00049a  f1bc0f64          CMP      r12,#0x64             ;1359
00049e  d83f              BHI      |L2.1312|
0004a0  f8d5c010          LDR      r12,[r5,#0x10]        ;1361  ; Run_Control
0004a4  f8cdc000          STR      r12,[sp,#0]           ;1361
0004a8  f8ddc000          LDR      r12,[sp,#0]           ;1362
0004ac  ea4f3c0c          LSL      r12,r12,#12           ;1362
0004b0  f8cdc000          STR      r12,[sp,#0]           ;1362
0004b4  f896c001          LDRB     r12,[r6,#1]           ;1363  ; correct_por
0004b8  ea5f7c4c          LSLS     r12,r12,#29           ;1363
0004bc  d411              BMI      |L2.1250|
0004be  f8d4c008          LDR      r12,[r4,#8]           ;1365  ; Correct_Strong
0004c2  f8dda000          LDR      r10,[sp,#0]           ;1365
0004c6  45d4              CMP      r12,r10               ;1365
0004c8  d902              BLS      |L2.1232|
0004ca  f8cd8000          STR      r8,[sp,#0]            ;1365
0004ce  e00f              B        |L2.1264|
                  |L2.1232|
0004d0  f8d4c008          LDR      r12,[r4,#8]           ;1366  ; Correct_Strong
0004d4  f8dda000          LDR      r10,[sp,#0]           ;1366
0004d8  ebaa0c0c          SUB      r12,r10,r12           ;1366
0004dc  f8cdc000          STR      r12,[sp,#0]           ;1366
0004e0  e006              B        |L2.1264|
                  |L2.1250|
0004e2  f8d4c008          LDR      r12,[r4,#8]           ;1368  ; Correct_Strong
0004e6  f8dda000          LDR      r10,[sp,#0]           ;1368
0004ea  44d4              ADD      r12,r12,r10           ;1368
0004ec  f8cdc000          STR      r12,[sp,#0]           ;1368
                  |L2.1264|
0004f0  f8d7c008          LDR      r12,[r7,#8]           ;1369  ; Correct_Parametet
0004f4  f8dda000          LDR      r10,[sp,#0]           ;1369
0004f8  fbbafcfc          UDIV     r12,r10,r12           ;1369
0004fc  f8cdc000          STR      r12,[sp,#0]           ;1369
000500  f8ddc000          LDR      r12,[sp,#0]           ;1370
000504  ea4f0c5c          LSR      r12,r12,#1            ;1370
000508  f8cdc000          STR      r12,[sp,#0]           ;1370
00050c  781b              LDRB     r3,[r3,#0]            ;1371  ; flagB
00050e  071b              LSLS     r3,r3,#28             ;1371
000510  d401              BMI      |L2.1302|
000512  9b00              LDR      r3,[sp,#0]            ;1373
000514  800b              STRH     r3,[r1,#0]            ;1373
                  |L2.1302|
000516  692b              LDR      r3,[r5,#0x10]         ;1375  ; Run_Control
000518  bb53              CBNZ     r3,|L2.1392|
00051a  f8a18000          STRH     r8,[r1,#0]            ;1377
00051e  e0ac              B        |L2.1658|
                  |L2.1312|
000520  f8d5c010          LDR      r12,[r5,#0x10]        ;1379  ; Run_Control
000524  f5bc7f61          CMP      r12,#0x384            ;1379
000528  d842              BHI      |L2.1456|
00052a  f8d5c010          LDR      r12,[r5,#0x10]        ;1380  ; Run_Control
00052e  f8cdc000          STR      r12,[sp,#0]           ;1380
000532  f8ddc000          LDR      r12,[sp,#0]           ;1381
000536  ea4f3c0c          LSL      r12,r12,#12           ;1381
00053a  f8cdc000          STR      r12,[sp,#0]           ;1381
00053e  f896c001          LDRB     r12,[r6,#1]           ;1382  ; correct_por
000542  ea5f7c4c          LSLS     r12,r12,#29           ;1382
000546  d414              BMI      |L2.1394|
000548  f8d0c024          LDR      r12,[r0,#0x24]        ;1384  ; InFlashSave
00054c  f8dda000          LDR      r10,[sp,#0]           ;1384
000550  45d4              CMP      r12,r10               ;1384
000552  d905              BLS      |L2.1376|
000554  e001              B        |L2.1370|
                  |L2.1366|
000556  e093              B        |L2.1664|
                  |L2.1368|
000558  e071              B        |L2.1598|
                  |L2.1370|
00055a  f8cd8000          STR      r8,[sp,#0]            ;1384
00055e  e00f              B        |L2.1408|
                  |L2.1376|
000560  f8dda000          LDR      r10,[sp,#0]           ;1385
000564  ebaa0c0c          SUB      r12,r10,r12           ;1385
000568  f8cdc000          STR      r12,[sp,#0]           ;1385
00056c  e008              B        |L2.1408|
                  |L2.1390|
00056e  e05f              B        |L2.1584|
                  |L2.1392|
000570  e05a              B        |L2.1576|
                  |L2.1394|
000572  f8d0c024          LDR      r12,[r0,#0x24]        ;1387  ; InFlashSave
000576  f8dda000          LDR      r10,[sp,#0]           ;1387
00057a  44d4              ADD      r12,r12,r10           ;1387
00057c  f8cdc000          STR      r12,[sp,#0]           ;1387
                  |L2.1408|
000580  f8d0c01c          LDR      r12,[r0,#0x1c]        ;1388  ; InFlashSave
000584  f8dda000          LDR      r10,[sp,#0]           ;1388
000588  fbbafcfc          UDIV     r12,r10,r12           ;1388
00058c  f8cdc000          STR      r12,[sp,#0]           ;1388
000590  f8ddc000          LDR      r12,[sp,#0]           ;1389
000594  ea4f0c5c          LSR      r12,r12,#1            ;1389
000598  f8cdc000          STR      r12,[sp,#0]           ;1389
00059c  781b              LDRB     r3,[r3,#0]            ;1390  ; flagB
00059e  071b              LSLS     r3,r3,#28             ;1390
0005a0  d401              BMI      |L2.1446|
0005a2  9b00              LDR      r3,[sp,#0]            ;1392
0005a4  800b              STRH     r3,[r1,#0]            ;1392
                  |L2.1446|
0005a6  692b              LDR      r3,[r5,#0x10]         ;1394  ; Run_Control
0005a8  bbf3              CBNZ     r3,|L2.1576|
0005aa  f8a18000          STRH     r8,[r1,#0]            ;1396
0005ae  e064              B        |L2.1658|
                  |L2.1456|
0005b0  f8d5c010          LDR      r12,[r5,#0x10]        ;1399  ; Run_Control
0005b4  f8cdc000          STR      r12,[sp,#0]           ;1399
0005b8  f8ddc000          LDR      r12,[sp,#0]           ;1400
0005bc  ea4f3c0c          LSL      r12,r12,#12           ;1400
0005c0  f8cdc000          STR      r12,[sp,#0]           ;1400
0005c4  f896c001          LDRB     r12,[r6,#1]           ;1401  ; correct_por
0005c8  ea5f7c4c          LSLS     r12,r12,#29           ;1401
0005cc  d40f              BMI      |L2.1518|
0005ce  f8d0c034          LDR      r12,[r0,#0x34]        ;1403  ; InFlashSave
0005d2  f8dda000          LDR      r10,[sp,#0]           ;1403
0005d6  45d4              CMP      r12,r10               ;1403
0005d8  d902              BLS      |L2.1504|
0005da  f8cd8000          STR      r8,[sp,#0]            ;1403
0005de  e00d              B        |L2.1532|
                  |L2.1504|
0005e0  f8dda000          LDR      r10,[sp,#0]           ;1404
0005e4  ebaa0c0c          SUB      r12,r10,r12           ;1404
0005e8  f8cdc000          STR      r12,[sp,#0]           ;1404
0005ec  e006              B        |L2.1532|
                  |L2.1518|
0005ee  f8d0c034          LDR      r12,[r0,#0x34]        ;1407  ; InFlashSave
0005f2  f8dda000          LDR      r10,[sp,#0]           ;1407
0005f6  44d4              ADD      r12,r12,r10           ;1407
0005f8  f8cdc000          STR      r12,[sp,#0]           ;1407
                  |L2.1532|
0005fc  f8d0c02c          LDR      r12,[r0,#0x2c]        ;1408  ; InFlashSave
000600  f8dda000          LDR      r10,[sp,#0]           ;1408
000604  fbbafcfc          UDIV     r12,r10,r12           ;1408
000608  f8cdc000          STR      r12,[sp,#0]           ;1408
00060c  f8ddc000          LDR      r12,[sp,#0]           ;1409
000610  ea4f0c5c          LSR      r12,r12,#1            ;1409
000614  f8cdc000          STR      r12,[sp,#0]           ;1409
000618  781b              LDRB     r3,[r3,#0]            ;1410  ; flagB
00061a  071b              LSLS     r3,r3,#28             ;1410
00061c  d401              BMI      |L2.1570|
00061e  9b00              LDR      r3,[sp,#0]            ;1412
000620  800b              STRH     r3,[r1,#0]            ;1412
                  |L2.1570|
000622  692b              LDR      r3,[r5,#0x10]         ;1414  ; Run_Control
000624  b903              CBNZ     r3,|L2.1576|
000626  e000              B        |L2.1578|
                  |L2.1576|
000628  e027              B        |L2.1658|
                  |L2.1578|
00062a  f8a18000          STRH     r8,[r1,#0]            ;1416
00062e  e024              B        |L2.1658|
                  |L2.1584|
;;;1427   					else var32 = var32 - SET_LoadA_OffsetH;
000630  f8dda000          LDR      r10,[sp,#0]
000634  ebaa0c0c          SUB      r12,r10,r12
000638  f8cdc000          STR      r12,[sp,#0]
00063c  e006              B        |L2.1612|
                  |L2.1598|
;;;1428   				}
;;;1429   				else var32 = var32 + SET_LoadA_OffsetH;
00063e  f8d0c044          LDR      r12,[r0,#0x44]  ; InFlashSave
000642  f8dda000          LDR      r10,[sp,#0]
000646  44d4              ADD      r12,r12,r10
000648  f8cdc000          STR      r12,[sp,#0]
                  |L2.1612|
;;;1430   				var32 = var32/SET_LoadAH;
00064c  f8d0c03c          LDR      r12,[r0,#0x3c]  ; InFlashSave
000650  f8dda000          LDR      r10,[sp,#0]
000654  fbbafcfc          UDIV     r12,r10,r12
000658  f8cdc000          STR      r12,[sp,#0]
;;;1431   				var32=var32>>1;
00065c  f8ddc000          LDR      r12,[sp,#0]
000660  ea4f0c5c          LSR      r12,r12,#1
000664  f8cdc000          STR      r12,[sp,#0]
;;;1432   				if(Flag_DAC_OFF==0)
000668  781b              LDRB     r3,[r3,#0]  ; flagB
00066a  071b              LSLS     r3,r3,#28
00066c  d401              BMI      |L2.1650|
;;;1433   				{
;;;1434   					Contr_Laod = var32;
00066e  9b00              LDR      r3,[sp,#0]
000670  800b              STRH     r3,[r1,#0]
                  |L2.1650|
;;;1435   				}
;;;1436   				if(SET_Current_Laod==0)
000672  692b              LDR      r3,[r5,#0x10]  ; Run_Control
000674  b90b              CBNZ     r3,|L2.1658|
;;;1437   				{
;;;1438   					Contr_Laod=0;
000676  f8a18000          STRH     r8,[r1,#0]
                  |L2.1658|
;;;1439   				}
;;;1440   //			}else{
;;;1441   //				var32 = SET_Current_Laod;
;;;1442   //				var32=var32<<12;   
;;;1443   //				if ((Polar1 & 0x04) == 0)			   
;;;1444   //				{
;;;1445   //					if (var32 < SET_LoadA_OffsetH1) var32 = 0;
;;;1446   //					else var32 = var32 - SET_LoadA_OffsetH1;
;;;1447   //				}
;;;1448   //				else var32 = var32 + SET_LoadA_OffsetH1;
;;;1449   //				var32 = var32/SET_LoadAH1;
;;;1450   //				var32=var32>>1;
;;;1451   //				if(Flag_DAC_OFF==0)
;;;1452   //				{
;;;1453   //					Contr_Laod = var32;
;;;1454   //				}
;;;1455   //				if(SET_Current_Laod==0)
;;;1456   //				{
;;;1457   //					Contr_Laod=0;
;;;1458   //				}
;;;1459   //			}
;;;1460   		}
;;;1461   		var32 = 0;
00067a  f8cd8000          STR      r8,[sp,#0]
00067e  e040              B        |L2.1794|
                  |L2.1664|
;;;1462   	}
;;;1463   	else
;;;1464   	{
;;;1465   		var32 = SET_Voltage_Laod;
000680  f8d5c00c          LDR      r12,[r5,#0xc]  ; Run_Control
000684  f8cdc000          STR      r12,[sp,#0]
;;;1466   		var32=var32<<12;   
000688  f8ddc000          LDR      r12,[sp,#0]
00068c  ea4f3c0c          LSL      r12,r12,#12
000690  f8cdc000          STR      r12,[sp,#0]
;;;1467   		if ((Polar2 & 0x04) == 0)			   
000694  f896c002          LDRB     r12,[r6,#2]  ; correct_por
000698  ea5f7c4c          LSLS     r12,r12,#29
00069c  d411              BMI      |L2.1730|
;;;1468   		{
;;;1469   			if (var32 < SET_LoadA_Offset) var32 = 0;
00069e  f8d4c008          LDR      r12,[r4,#8]  ; Correct_Strong
0006a2  f8dda000          LDR      r10,[sp,#0]
0006a6  45d4              CMP      r12,r10
0006a8  d902              BLS      |L2.1712|
0006aa  f8cd8000          STR      r8,[sp,#0]
0006ae  e00f              B        |L2.1744|
                  |L2.1712|
;;;1470   			else var32 = var32 - SET_LoadV_Offset;
0006b0  f8d4c010          LDR      r12,[r4,#0x10]  ; Correct_Strong
0006b4  f8dda000          LDR      r10,[sp,#0]
0006b8  ebaa0c0c          SUB      r12,r10,r12
0006bc  f8cdc000          STR      r12,[sp,#0]
0006c0  e006              B        |L2.1744|
                  |L2.1730|
;;;1471   		}
;;;1472   		else var32 = var32 + SET_LoadV_Offset;
0006c2  f8d4c010          LDR      r12,[r4,#0x10]  ; Correct_Strong
0006c6  f8dda000          LDR      r10,[sp,#0]
0006ca  44d4              ADD      r12,r12,r10
0006cc  f8cdc000          STR      r12,[sp,#0]
                  |L2.1744|
;;;1473   		var32 = var32/SET_LoadV;
0006d0  f8d7c010          LDR      r12,[r7,#0x10]  ; Correct_Parametet
0006d4  f8dda000          LDR      r10,[sp,#0]
0006d8  fbbafcfc          UDIV     r12,r10,r12
0006dc  f8cdc000          STR      r12,[sp,#0]
;;;1474   		var32=var32>>1;
0006e0  f8ddc000          LDR      r12,[sp,#0]
0006e4  ea4f0c5c          LSR      r12,r12,#1
0006e8  f8cdc000          STR      r12,[sp,#0]
;;;1475   		if(Flag_DAC_OFF==0)
0006ec  781b              LDRB     r3,[r3,#0]  ; flagB
0006ee  071b              LSLS     r3,r3,#28
0006f0  d401              BMI      |L2.1782|
;;;1476   		{
;;;1477   			Contr_Laod = var32;
0006f2  9b00              LDR      r3,[sp,#0]
0006f4  800b              STRH     r3,[r1,#0]
                  |L2.1782|
;;;1478   		}
;;;1479   		if(SET_Voltage_Laod==0)
0006f6  68eb              LDR      r3,[r5,#0xc]  ; Run_Control
0006f8  b90b              CBNZ     r3,|L2.1790|
;;;1480   		{
;;;1481   			Contr_Laod=0;
0006fa  f8a18000          STRH     r8,[r1,#0]
                  |L2.1790|
;;;1482   		}
;;;1483   		var32 = 0;
0006fe  f8cd8000          STR      r8,[sp,#0]
                  |L2.1794|
;;;1484   	}
;;;1485   /*****************************ƒ⁄◊Ë÷µ◊™ªª*******************************************/
;;;1486   	var32 = Rmon_value;
000702  4b55              LDR      r3,|L2.2136|
000704  8819              LDRH     r1,[r3,#0]  ; Rmon_value
000706  9100              STR      r1,[sp,#0]
;;;1487       if(r_raly == 1)
000708  f8991000          LDRB     r1,[r9,#0]  ; r_raly
00070c  2901              CMP      r1,#1
00070e  d07c              BEQ      |L2.2058|
;;;1488       {
;;;1489           var32 = var32 * REG_CorrectionR;  
;;;1490   //         if ((Polar3 & 0x01) == 0x01)		  
;;;1491   //         {
;;;1492   //             if (var32 < REG_ReadR_Offset) 
;;;1493   //             {
;;;1494   //                 var32 = 0;
;;;1495   //             }
;;;1496   //             else var32 = var32 - REG_ReadR_Offset;
;;;1497   //         }
;;;1498   //        else
;;;1499           var32 = var32 - REG_ReadR_Offset;
;;;1500           var32 = var32 >> 12;
;;;1501           if (var32 < 1)
;;;1502           {
;;;1503               var32 = 0;				  //»•¬£
;;;1504           }
;;;1505           R_VLUE = var32;
;;;1506           var32 = 0;
;;;1507       }else{
;;;1508           var32 = var32 * REG_CorrectionRL;  
000710  6af9              LDR      r1,[r7,#0x2c]  ; Correct_Parametet
000712  f8ddc000          LDR      r12,[sp,#0]
000716  fb01f10c          MUL      r1,r1,r12
00071a  9100              STR      r1,[sp,#0]
;;;1509   //         if ((Polar3 & 0x01) == 0x01)		  
;;;1510   //         {
;;;1511   //             if (var32 < REG_ReadRL_Offset) 
;;;1512   //             {
;;;1513   //                 var32 = 0;
;;;1514   //             }
;;;1515   //             else var32 = var32 - REG_ReadRL_Offset;
;;;1516   //         }
;;;1517   //        else
;;;1518               var32 = var32 - REG_ReadRL_Offset;
00071c  6ae1              LDR      r1,[r4,#0x2c]  ; Correct_Strong
00071e  f8ddc000          LDR      r12,[sp,#0]
000722  ebac0101          SUB      r1,r12,r1
000726  9100              STR      r1,[sp,#0]
;;;1519           var32 = var32 >> 12;
000728  9900              LDR      r1,[sp,#0]
00072a  0b09              LSRS     r1,r1,#12
00072c  9100              STR      r1,[sp,#0]
;;;1520           if (var32 < 1)
;;;1521           {
;;;1522               var32 = 0;				  //»•¬£
;;;1523           }
;;;1524           R_VLUE = var32;
00072e  9900              LDR      r1,[sp,#0]
000730  6369              STR      r1,[r5,#0x34]  ; Run_Control
;;;1525           if(R_VLUE > 100)
000732  6b69              LDR      r1,[r5,#0x34]  ; Run_Control
000734  2964              CMP      r1,#0x64
000736  d913              BLS      |L2.1888|
;;;1526           {
;;;1527               var32 = Rmon_value;
000738  8819              LDRH     r1,[r3,#0]  ; Rmon_value
00073a  9100              STR      r1,[sp,#0]
;;;1528               var32 = var32 * REG_CorrectionRH;  
00073c  6b39              LDR      r1,[r7,#0x30]  ; Correct_Parametet
00073e  9b00              LDR      r3,[sp,#0]
000740  4359              MULS     r1,r3,r1
000742  9100              STR      r1,[sp,#0]
;;;1529   //             if ((Polar1 & 0x04) == 0x04)		  
;;;1530   //             {
;;;1531   //                 if (var32 < REG_ReadRH_Offset) 
;;;1532   //                 {
;;;1533   //                     var32 = 0;
;;;1534   //                 }
;;;1535   //                 else var32 = var32 - REG_ReadRH_Offset;
;;;1536   //             }
;;;1537   //            else
;;;1538                   var32 = var32 - REG_ReadRH_Offset;
000744  6b21              LDR      r1,[r4,#0x30]  ; Correct_Strong
000746  9b00              LDR      r3,[sp,#0]
000748  1a59              SUBS     r1,r3,r1
00074a  9100              STR      r1,[sp,#0]
;;;1539               var32 = var32 >> 12;
00074c  9900              LDR      r1,[sp,#0]
00074e  0b09              LSRS     r1,r1,#12
000750  9100              STR      r1,[sp,#0]
;;;1540               if (var32 < 5) var32 = 0;				  //40mV”î–Ç»•¬£
000752  9900              LDR      r1,[sp,#0]
000754  2905              CMP      r1,#5
000756  d201              BCS      |L2.1884|
000758  f8cd8000          STR      r8,[sp,#0]
                  |L2.1884|
;;;1541               R_VLUE = var32;
00075c  9900              LDR      r1,[sp,#0]
00075e  6369              STR      r1,[r5,#0x34]  ; Run_Control
                  |L2.1888|
;;;1542           }
;;;1543           var32 = 0;
000760  f8cd8000          STR      r8,[sp,#0]
                  |L2.1892|
;;;1544       }
;;;1545   	if(countr == 80)
000764  88d1              LDRH     r1,[r2,#6]  ; countr
000766  2950              CMP      r1,#0x50
000768  d071              BEQ      |L2.2126|
;;;1546   	{
;;;1547   		disrvalue = sumr/80;
;;;1548   		countr = 0;
;;;1549   		sumr = 0;
;;;1550   	}else{
;;;1551   		sumr += R_VLUE;
00076a  6b6b              LDR      r3,[r5,#0x34]  ; Run_Control
00076c  f8d2c00c          LDR      r12,[r2,#0xc]  ; sumr
000770  4463              ADD      r3,r3,r12
000772  60d3              STR      r3,[r2,#0xc]  ; sumr
;;;1552   		countr++;
000774  1c49              ADDS     r1,r1,#1
000776  80d1              STRH     r1,[r2,#6]
                  |L2.1912|
;;;1553   	}
;;;1554   	/*****************************Œ»—πµÁ‘¥≤‚¡øµÁ—π◊™ªª*******************************************/
;;;1555   	var32 = Vmon_value;
000778  f8dfc0e0          LDR      r12,|L2.2140|
00077c  f8bc1000          LDRH     r1,[r12,#0]  ; Vmon_value
000780  9100              STR      r1,[sp,#0]
;;;1556   	var32 = var32 * REG_POWERV;  
000782  6a39              LDR      r1,[r7,#0x20]  ; Correct_Parametet
000784  9a00              LDR      r2,[sp,#0]
000786  4351              MULS     r1,r2,r1
000788  9100              STR      r1,[sp,#0]
;;;1557   // 	if ((Polar5 & 0x01) == 0x01)		  
;;;1558   // 	{
;;;1559   // 		if (var32 < REG_POWERV_Offset) 
;;;1560   // 		{
;;;1561   // 			var32 = 0;
;;;1562   // 		}
;;;1563   // 		else var32 = var32 - REG_POWERV_Offset;
;;;1564   // 	}
;;;1565   // 	else 
;;;1566           var32 = var32 - REG_POWERV_Offset;
00078a  6a21              LDR      r1,[r4,#0x20]  ; Correct_Strong
00078c  9a00              LDR      r2,[sp,#0]
00078e  1a51              SUBS     r1,r2,r1
000790  9100              STR      r1,[sp,#0]
;;;1567   	var32 = var32 >> 14;
000792  9900              LDR      r1,[sp,#0]
000794  0b89              LSRS     r1,r1,#14
000796  9100              STR      r1,[sp,#0]
;;;1568   	if (var32 < 40) var32 = 0;				  //40mV“‘œ¬«Â¡„
000798  9900              LDR      r1,[sp,#0]
00079a  2928              CMP      r1,#0x28
00079c  d201              BCS      |L2.1954|
00079e  f8cd8000          STR      r8,[sp,#0]
                  |L2.1954|
;;;1569   	POW_Voltage = var32;
0007a2  9900              LDR      r1,[sp,#0]
0007a4  6269              STR      r1,[r5,#0x24]  ; Run_Control
;;;1570   	DISS_POW_Voltage=POW_Voltage;
0007a6  6a69              LDR      r1,[r5,#0x24]  ; Run_Control
0007a8  ee001a10          VMOV     s0,r1
0007ac  492c              LDR      r1,|L2.2144|
0007ae  eef80a40          VCVT.F32.U32 s1,s0
;;;1571   	DISS_POW_Voltage=DISS_POW_Voltage/100;//º∆À„œ‘ æµÁ—π
0007b2  ed9f0a2c          VLDR     s0,|L2.2148|
0007b6  ee801a80          VDIV.F32 s2,s1,s0
0007ba  ed811a00          VSTR     s2,[r1,#0]
;;;1572       if(POW_Voltage >= 1000)
0007be  6a6b              LDR      r3,[r5,#0x24]  ; Run_Control
0007c0  f44f727a          MOV      r2,#0x3e8
0007c4  4293              CMP      r3,r2
0007c6  d323              BCC      |L2.2064|
;;;1573       {
;;;1574           var32 = Vmon_value;
0007c8  f8bc3000          LDRH     r3,[r12,#0]  ; Vmon_value
0007cc  9300              STR      r3,[sp,#0]
;;;1575           var32 = var32 * REG_POWERV1;  
0007ce  6bfb              LDR      r3,[r7,#0x3c]  ; Correct_Parametet
0007d0  f8dd9000          LDR      r9,[sp,#0]
0007d4  fb03f309          MUL      r3,r3,r9
0007d8  9300              STR      r3,[sp,#0]
;;;1576   //         if ((Polar5 & 0x01) == 0x01)		  
;;;1577   //         {
;;;1578   //             if (var32 < REG_POWERV_Offset1) 
;;;1579   //             {
;;;1580   //                 var32 = 0;
;;;1581   //             }
;;;1582   //             else var32 = var32 - REG_POWERV_Offset1;
;;;1583   //         }
;;;1584   //         else 
;;;1585               var32 = var32 - REG_POWERV_Offset1;
0007da  6be3              LDR      r3,[r4,#0x3c]  ; Correct_Strong
0007dc  f8dd9000          LDR      r9,[sp,#0]
0007e0  eba90303          SUB      r3,r9,r3
0007e4  9300              STR      r3,[sp,#0]
;;;1586           var32 = var32 >> 14;
0007e6  9b00              LDR      r3,[sp,#0]
0007e8  0b9b              LSRS     r3,r3,#14
0007ea  9300              STR      r3,[sp,#0]
;;;1587           if (var32 < 40) var32 = 0;				  //40mV”î–Ç»•¬£
0007ec  9b00              LDR      r3,[sp,#0]
0007ee  2b28              CMP      r3,#0x28
0007f0  d201              BCS      |L2.2038|
0007f2  f8cd8000          STR      r8,[sp,#0]
                  |L2.2038|
;;;1588           POW_Voltage = var32;
0007f6  9b00              LDR      r3,[sp,#0]
0007f8  626b              STR      r3,[r5,#0x24]  ; Run_Control
;;;1589           DISS_POW_Voltage=POW_Voltage;
0007fa  6a6b              LDR      r3,[r5,#0x24]  ; Run_Control
0007fc  ee003a90          VMOV     s1,r3
000800  eef80a60          VCVT.F32.U32 s1,s1
;;;1590           DISS_POW_Voltage=DISS_POW_Voltage/100;//›ÜÃ£–î æ÷ß—π
000804  ee801a80          VDIV.F32 s2,s1,s0
000808  e000              B        |L2.2060|
                  |L2.2058|
00080a  e05a              B        |L2.2242|
                  |L2.2060|
00080c  ed811a00          VSTR     s2,[r1,#0]
                  |L2.2064|
;;;1591       }
;;;1592       if(POW_Voltage >= 3000)
000810  f8d59024          LDR      r9,[r5,#0x24]  ; Run_Control
000814  f64033b8          MOV      r3,#0xbb8
000818  4599              CMP      r9,r3
00081a  d33c              BCC      |L2.2198|
;;;1593       {
;;;1594           var32 = Vmon_value;
00081c  f8bcc000          LDRH     r12,[r12,#0]  ; Vmon_value
000820  f8cdc000          STR      r12,[sp,#0]
;;;1595           var32 = var32 * REG_POWERV2;  
000824  f8d7c040          LDR      r12,[r7,#0x40]  ; Correct_Parametet
000828  f8dd9000          LDR      r9,[sp,#0]
00082c  fb0cfc09          MUL      r12,r12,r9
000830  f8cdc000          STR      r12,[sp,#0]
;;;1596   //         if ((Polar5 & 0x01) == 0x01)		  
;;;1597   //         {
;;;1598   //             if (var32 < REG_POWERV_Offset2) 
;;;1599   //             {
;;;1600   //                 var32 = 0;
;;;1601   //             }
;;;1602   //             else var32 = var32 - REG_POWERV_Offset2;
;;;1603   //         }
;;;1604   //         else 
;;;1605               var32 = var32 - REG_POWERV_Offset2;
000834  f8d4c040          LDR      r12,[r4,#0x40]  ; Correct_Strong
000838  f8dd9000          LDR      r9,[sp,#0]
00083c  eba90c0c          SUB      r12,r9,r12
000840  f8cdc000          STR      r12,[sp,#0]
;;;1606           var32 = var32 >> 14;
000844  f8ddc000          LDR      r12,[sp,#0]
000848  ea4f3c9c          LSR      r12,r12,#14
00084c  e00c              B        |L2.2152|
                  |L2.2126|
00084e  e048              B        |L2.2274|
                  |L2.2128|
                          DCD      flagB
                  |L2.2132|
                          DCD      Contr_Laod
                  |L2.2136|
                          DCD      Rmon_value
                  |L2.2140|
                          DCD      Vmon_value
                  |L2.2144|
                          DCD      DISS_POW_Voltage
                  |L2.2148|
000864  42c80000          DCFS     0x42c80000 ; 100
                  |L2.2152|
000868  f8cdc000          STR      r12,[sp,#0]
;;;1607           if (var32 < 40) var32 = 0;				  //40mV”î–Ç»•¬£
00086c  f8ddc000          LDR      r12,[sp,#0]
000870  f1bc0f28          CMP      r12,#0x28
000874  d201              BCS      |L2.2170|
000876  f8cd8000          STR      r8,[sp,#0]
                  |L2.2170|
;;;1608           POW_Voltage = var32;
00087a  f8ddc000          LDR      r12,[sp,#0]
00087e  f8c5c024          STR      r12,[r5,#0x24]  ; Run_Control
;;;1609           DISS_POW_Voltage=POW_Voltage;
000882  f8d5c024          LDR      r12,[r5,#0x24]  ; Run_Control
000886  ee00ca90          VMOV     s1,r12
00088a  eef80a60          VCVT.F32.U32 s1,s1
;;;1610           DISS_POW_Voltage=DISS_POW_Voltage/100;//›ÜÃ£–î æ÷ß—π
00088e  ee801a80          VDIV.F32 s2,s1,s0
000892  ed811a00          VSTR     s2,[r1,#0]
                  |L2.2198|
;;;1611       }
;;;1612   	var32 = 0;
;;;1613   /*****************************Œ»—πµÁ‘¥≤‚¡øµÁ¡˜◊™ªª*******************************************/
;;;1614   	var32 = Imon_value;
000896  f8dfc278          LDR      r12,|L2.2832|
00089a  f8bc1000          LDRH     r1,[r12,#0]  ; Imon_value
00089e  9100              STR      r1,[sp,#0]
;;;1615   //	if(flag_CC_MODE==1)
;;;1616   //	{
;;;1617   		var32 = var32 * REG_POWERA;	   
0008a0  69b9              LDR      r1,[r7,#0x18]  ; Correct_Parametet
0008a2  f8dd9000          LDR      r9,[sp,#0]
0008a6  fb01f109          MUL      r1,r1,r9
0008aa  9100              STR      r1,[sp,#0]
;;;1618   		if ((Polar4 & 0x01) == 0x01)			   
0008ac  7931              LDRB     r1,[r6,#4]  ; correct_por
0008ae  07c9              LSLS     r1,r1,#31
0008b0  d029              BEQ      |L2.2310|
;;;1619   		{
;;;1620   			if (var32 < REG_POWERA_Offset) var32 = 0;
0008b2  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
0008b4  f8dd9000          LDR      r9,[sp,#0]
0008b8  4549              CMP      r1,r9
0008ba  d91d              BLS      |L2.2296|
0008bc  f8cd8000          STR      r8,[sp,#0]
0008c0  e026              B        |L2.2320|
                  |L2.2242|
0008c2  6979              LDR      r1,[r7,#0x14]         ;1489  ; Correct_Parametet
0008c4  9b00              LDR      r3,[sp,#0]            ;1489
0008c6  4359              MULS     r1,r3,r1              ;1489
0008c8  9100              STR      r1,[sp,#0]            ;1489
0008ca  6961              LDR      r1,[r4,#0x14]         ;1499  ; Correct_Strong
0008cc  9b00              LDR      r3,[sp,#0]            ;1499
0008ce  1a59              SUBS     r1,r3,r1              ;1499
0008d0  9100              STR      r1,[sp,#0]            ;1499
0008d2  9900              LDR      r1,[sp,#0]            ;1500
0008d4  0b09              LSRS     r1,r1,#12             ;1500
0008d6  9100              STR      r1,[sp,#0]            ;1500
0008d8  9900              LDR      r1,[sp,#0]            ;1505
0008da  6369              STR      r1,[r5,#0x34]         ;1505  ; Run_Control
0008dc  f8cd8000          STR      r8,[sp,#0]            ;1501
0008e0  e740              B        |L2.1892|
                  |L2.2274|
0008e2  68d1              LDR      r1,[r2,#0xc]          ;1547  ; sumr
0008e4  2350              MOVS     r3,#0x50              ;1547
0008e6  fbb1f1f3          UDIV     r1,r1,r3              ;1547
0008ea  4b8a              LDR      r3,|L2.2836|
0008ec  8019              STRH     r1,[r3,#0]            ;1547
0008ee  f8a28006          STRH     r8,[r2,#6]            ;1548
0008f2  f8c2800c          STR      r8,[r2,#0xc]          ;1549  ; sumr
0008f6  e73f              B        |L2.1912|
                  |L2.2296|
;;;1621   			else var32 = var32 - REG_POWERA_Offset;
0008f8  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
0008fa  f8dd9000          LDR      r9,[sp,#0]
0008fe  eba90101          SUB      r1,r9,r1
000902  9100              STR      r1,[sp,#0]
000904  e004              B        |L2.2320|
                  |L2.2310|
;;;1622   		}
;;;1623   		else
;;;1624   		{
;;;1625   			var32 = var32 + REG_POWERA_Offset;
000906  69a1              LDR      r1,[r4,#0x18]  ; Correct_Strong
000908  f8dd9000          LDR      r9,[sp,#0]
00090c  4449              ADD      r1,r1,r9
00090e  9100              STR      r1,[sp,#0]
                  |L2.2320|
;;;1626   		}	
;;;1627   		var32 = var32 >> 14;
000910  9900              LDR      r1,[sp,#0]
000912  0b89              LSRS     r1,r1,#14
000914  9100              STR      r1,[sp,#0]
;;;1628   		Current = var32;;
000916  9900              LDR      r1,[sp,#0]
000918  62e9              STR      r1,[r5,#0x2c]  ; Run_Control
;;;1629   		DISS_POW_Current=Current;
00091a  6ae9              LDR      r1,[r5,#0x2c]  ; Run_Control
00091c  f8df91f8          LDR      r9,|L2.2840|
000920  ee001a10          VMOV     s0,r1
000924  eef80a40          VCVT.F32.U32 s1,s0
;;;1630   		DISS_POW_Current=DISS_POW_Current/1000;//º∆À„œ‘ æµÁ¡˜
000928  ee800a88          VDIV.F32 s0,s1,s16
00092c  ed890a00          VSTR     s0,[r9,#0]
;;;1631   		if(DISS_POW_Current > 1)
000930  ee101a10          VMOV     r1,s0
000934  f1b15f7e          CMP      r1,#0x3f800000
000938  dd2c              BLE      |L2.2452|
;;;1632   		{
;;;1633   			var32 = Imon_value;
00093a  f8bc1000          LDRH     r1,[r12,#0]  ; Imon_value
00093e  9100              STR      r1,[sp,#0]
;;;1634   			var32 = var32 * REG_POWERA1;	   
000940  6d81              LDR      r1,[r0,#0x58]  ; InFlashSave
000942  f8ddc000          LDR      r12,[sp,#0]
000946  fb01f10c          MUL      r1,r1,r12
00094a  9100              STR      r1,[sp,#0]
;;;1635   			if ((Polar4 & 0x01) == 0x01)			   
00094c  7931              LDRB     r1,[r6,#4]  ; correct_por
00094e  07c9              LSLS     r1,r1,#31
000950  d00d              BEQ      |L2.2414|
;;;1636   			{
;;;1637   				if (var32 < REG_POWERA_Offset1) var32 = 0;
000952  6e01              LDR      r1,[r0,#0x60]  ; InFlashSave
000954  f8ddc000          LDR      r12,[sp,#0]
000958  4561              CMP      r1,r12
00095a  d902              BLS      |L2.2402|
00095c  f8cd8000          STR      r8,[sp,#0]
000960  e00a              B        |L2.2424|
                  |L2.2402|
;;;1638   				else var32 = var32 - REG_POWERA_Offset1;
000962  f8ddc000          LDR      r12,[sp,#0]
000966  ebac0101          SUB      r1,r12,r1
00096a  9100              STR      r1,[sp,#0]
00096c  e004              B        |L2.2424|
                  |L2.2414|
;;;1639   			}
;;;1640   			else
;;;1641   			{
;;;1642   				var32 = var32 + REG_POWERA_Offset1;
00096e  6e01              LDR      r1,[r0,#0x60]  ; InFlashSave
000970  f8ddc000          LDR      r12,[sp,#0]
000974  4461              ADD      r1,r1,r12
000976  9100              STR      r1,[sp,#0]
                  |L2.2424|
;;;1643   			}	
;;;1644   			var32 = var32 >> 14;
000978  9900              LDR      r1,[sp,#0]
00097a  0b89              LSRS     r1,r1,#14
00097c  9100              STR      r1,[sp,#0]
;;;1645   			Current = var32;;
00097e  9900              LDR      r1,[sp,#0]
000980  62e9              STR      r1,[r5,#0x2c]  ; Run_Control
;;;1646   			DISS_POW_Current=Current;
000982  6ae9              LDR      r1,[r5,#0x2c]  ; Run_Control
000984  ee001a10          VMOV     s0,r1
000988  eeb80a40          VCVT.F32.U32 s0,s0
;;;1647   			DISS_POW_Current=DISS_POW_Current/1000;//º∆À„œ‘ æµÁ¡˜
00098c  eec00a08          VDIV.F32 s1,s0,s16
000990  edc90a00          VSTR     s1,[r9,#0]
                  |L2.2452|
;;;1648   		}
;;;1649   //	}
;;;1650   //	else
;;;1651   //	{
;;;1652   //		var32 = var32 * CON_POWERA;	   
;;;1653   //		if ((Polar3 & 0x04) == 0x04)			   
;;;1654   //		{
;;;1655   //			if (var32 < CON_POWERA_Offset) var32 = 0;
;;;1656   //			else var32 = var32 - CON_POWERA_Offset;
;;;1657   //		}
;;;1658   //		else
;;;1659   //		{
;;;1660   //			var32 = var32 + CON_POWERA_Offset;
;;;1661   //		}	
;;;1662   //		var32 = var32 >> 14;
;;;1663   //		Current = var32;;
;;;1664   //		DISS_POW_Current=Current;
;;;1665   //		DISS_POW_Current=DISS_POW_Current/1000;//º∆À„œ‘ æµÁ¡˜
;;;1666   //	}
;;;1667   /**************************Œ»—πµÁ‘¥…Ë÷√µÁ—π◊™ªª******************************************/
;;;1668   	var32 = SET_Voltage;
000994  6869              LDR      r1,[r5,#4]  ; Run_Control
000996  9100              STR      r1,[sp,#0]
;;;1669       if(SET_Voltage < 1000)
000998  f8d5c004          LDR      r12,[r5,#4]  ; Run_Control
;;;1670       {
;;;1671           var32=var32<<14;   
;;;1672            if ((Polar5 & 0x04) == 0)			   
;;;1673            {
;;;1674                if (var32 < SET_POWERV_Offset) var32 = 0;
;;;1675                else var32 = var32 - SET_POWERV_Offset;
;;;1676            }
;;;1677            else 
;;;1678               var32 = var32 + SET_POWERV_Offset;
;;;1679           var32 = var32/SET_POWERV;
;;;1680           var32=var32>>1;
;;;1681           Contr_Voltage = var32;
00099c  495f              LDR      r1,|L2.2844|
00099e  4594              CMP      r12,r2                ;1669
0009a0  d229              BCS      |L2.2550|
0009a2  9b00              LDR      r3,[sp,#0]            ;1671
0009a4  039b              LSLS     r3,r3,#14             ;1671
0009a6  9300              STR      r3,[sp,#0]            ;1671
0009a8  7973              LDRB     r3,[r6,#5]            ;1672  ; correct_por
0009aa  075b              LSLS     r3,r3,#29             ;1672
0009ac  d40e              BMI      |L2.2508|
0009ae  6a63              LDR      r3,[r4,#0x24]         ;1674  ; Correct_Strong
0009b0  f8ddc000          LDR      r12,[sp,#0]           ;1674
0009b4  4563              CMP      r3,r12                ;1674
0009b6  d902              BLS      |L2.2494|
0009b8  f8cd8000          STR      r8,[sp,#0]            ;1674
0009bc  e00b              B        |L2.2518|
                  |L2.2494|
0009be  6a63              LDR      r3,[r4,#0x24]         ;1675  ; Correct_Strong
0009c0  f8ddc000          LDR      r12,[sp,#0]           ;1675
0009c4  ebac0303          SUB      r3,r12,r3             ;1675
0009c8  9300              STR      r3,[sp,#0]            ;1675
0009ca  e004              B        |L2.2518|
                  |L2.2508|
0009cc  6a63              LDR      r3,[r4,#0x24]         ;1678  ; Correct_Strong
0009ce  f8ddc000          LDR      r12,[sp,#0]           ;1678
0009d2  4463              ADD      r3,r3,r12             ;1678
0009d4  9300              STR      r3,[sp,#0]            ;1678
                  |L2.2518|
0009d6  6a7b              LDR      r3,[r7,#0x24]         ;1679  ; Correct_Parametet
0009d8  f8ddc000          LDR      r12,[sp,#0]           ;1679
0009dc  fbbcf3f3          UDIV     r3,r12,r3             ;1679
0009e0  9300              STR      r3,[sp,#0]            ;1679
0009e2  9b00              LDR      r3,[sp,#0]            ;1680
0009e4  085b              LSRS     r3,r3,#1              ;1680
0009e6  9300              STR      r3,[sp,#0]            ;1680
0009e8  9b00              LDR      r3,[sp,#0]
0009ea  800b              STRH     r3,[r1,#0]
;;;1682           if(SET_Voltage==0)
0009ec  686b              LDR      r3,[r5,#4]  ; Run_Control
0009ee  bb0b              CBNZ     r3,|L2.2612|
;;;1683           {
;;;1684               Contr_Voltage=0;
0009f0  f8a18000          STRH     r8,[r1,#0]
0009f4  e03a              B        |L2.2668|
                  |L2.2550|
;;;1685           }
;;;1686       }else if(SET_Voltage >= 1000 && SET_Voltage < 3000){
0009f6  f8d5c004          LDR      r12,[r5,#4]  ; Run_Control
0009fa  4594              CMP      r12,r2
0009fc  d31b              BCC      |L2.2614|
0009fe  f8d5c004          LDR      r12,[r5,#4]  ; Run_Control
000a02  459c              CMP      r12,r3
000a04  d217              BCS      |L2.2614|
;;;1687           var32=var32<<14;   
000a06  9b00              LDR      r3,[sp,#0]
000a08  039b              LSLS     r3,r3,#14
000a0a  9300              STR      r3,[sp,#0]
;;;1688   //         if ((Polar5 & 0x04) == 0)			   
;;;1689   //         {
;;;1690   //             if (var32 < SET_POWERV_Offset1) var32 = 0;
;;;1691   //             else var32 = var32 - SET_POWERV_Offset1;
;;;1692   //         }
;;;1693   //         else 
;;;1694               var32 = var32 + SET_POWERV_Offset1;
000a0c  6ce3              LDR      r3,[r4,#0x4c]  ; Correct_Strong
000a0e  f8ddc000          LDR      r12,[sp,#0]
000a12  4463              ADD      r3,r3,r12
000a14  9300              STR      r3,[sp,#0]
;;;1695           var32 = var32/SET_POWERV1;
000a16  6cfb              LDR      r3,[r7,#0x4c]  ; Correct_Parametet
000a18  f8ddc000          LDR      r12,[sp,#0]
000a1c  fbbcf3f3          UDIV     r3,r12,r3
000a20  9300              STR      r3,[sp,#0]
;;;1696           var32=var32>>1;
000a22  9b00              LDR      r3,[sp,#0]
000a24  085b              LSRS     r3,r3,#1
000a26  9300              STR      r3,[sp,#0]
;;;1697           Contr_Voltage = var32;
000a28  9b00              LDR      r3,[sp,#0]
000a2a  800b              STRH     r3,[r1,#0]
;;;1698           if(SET_Voltage==0)
000a2c  686b              LDR      r3,[r5,#4]  ; Run_Control
000a2e  b90b              CBNZ     r3,|L2.2612|
;;;1699           {
;;;1700               Contr_Voltage=0;
000a30  f8a18000          STRH     r8,[r1,#0]
                  |L2.2612|
000a34  e01a              B        |L2.2668|
                  |L2.2614|
;;;1701           }
;;;1702       }else if(SET_Voltage >= 3000){
000a36  f8d5c004          LDR      r12,[r5,#4]  ; Run_Control
000a3a  459c              CMP      r12,r3
000a3c  d316              BCC      |L2.2668|
;;;1703           var32=var32<<14;   
000a3e  9b00              LDR      r3,[sp,#0]
000a40  039b              LSLS     r3,r3,#14
000a42  9300              STR      r3,[sp,#0]
;;;1704   //         if ((Polar5 & 0x04) == 0)			   
;;;1705   //         {
;;;1706   //             if (var32 < SET_POWERV_Offset2) var32 = 0;
;;;1707   //             else var32 = var32 - SET_POWERV_Offset2;
;;;1708   //         }
;;;1709   //         else 
;;;1710               var32 = var32 + SET_POWERV_Offset2;
000a44  6d23              LDR      r3,[r4,#0x50]  ; Correct_Strong
000a46  f8ddc000          LDR      r12,[sp,#0]
000a4a  4463              ADD      r3,r3,r12
000a4c  9300              STR      r3,[sp,#0]
;;;1711           var32 = var32/SET_POWERV2;
000a4e  6d3b              LDR      r3,[r7,#0x50]  ; Correct_Parametet
000a50  f8ddc000          LDR      r12,[sp,#0]
000a54  fbbcf3f3          UDIV     r3,r12,r3
000a58  9300              STR      r3,[sp,#0]
;;;1712           var32=var32>>1;
000a5a  9b00              LDR      r3,[sp,#0]
000a5c  085b              LSRS     r3,r3,#1
000a5e  9300              STR      r3,[sp,#0]
;;;1713           Contr_Voltage = var32;
000a60  9b00              LDR      r3,[sp,#0]
000a62  800b              STRH     r3,[r1,#0]
;;;1714           if(SET_Voltage==0)
000a64  686b              LDR      r3,[r5,#4]  ; Run_Control
000a66  b90b              CBNZ     r3,|L2.2668|
;;;1715           {
;;;1716               Contr_Voltage=0;
000a68  f8a18000          STRH     r8,[r1,#0]
                  |L2.2668|
;;;1717           }
;;;1718       }
;;;1719   	
;;;1720   	var32 = 0;
;;;1721   /**************************Œ»—πµÁ‘¥…Ë÷√µÁ¡˜◊™ªª**************************************/
;;;1722   	var32 = SET_Current;
000a6c  68a9              LDR      r1,[r5,#8]  ; Run_Control
000a6e  9100              STR      r1,[sp,#0]
;;;1723   	var32=var32<<14;
000a70  9900              LDR      r1,[sp,#0]
000a72  0389              LSLS     r1,r1,#14
000a74  9100              STR      r1,[sp,#0]
;;;1724   	if(SET_Current <= 1000)
000a76  68a9              LDR      r1,[r5,#8]  ; Run_Control
;;;1725   	{
;;;1726   		if ((Polar4 & 0x04) == 0)			   
;;;1727   		{
;;;1728   			if (var32 < SET_POWERA_Offset) var32 = 0;
;;;1729   			else var32 = var32 - SET_POWERA_Offset;
;;;1730   		}
;;;1731   		else var32 = var32 + SET_POWERA_Offset;
;;;1732   		var32 = var32/SET_POWERA;
;;;1733   		var32=var32>>1;
;;;1734   		Contr_Current = var32;
000a78  4b29              LDR      r3,|L2.2848|
000a7a  4291              CMP      r1,r2                 ;1724
000a7c  d821              BHI      |L2.2754|
000a7e  7930              LDRB     r0,[r6,#4]            ;1726  ; correct_por
000a80  0740              LSLS     r0,r0,#29             ;1726
000a82  d40b              BMI      |L2.2716|
000a84  69e0              LDR      r0,[r4,#0x1c]         ;1728  ; Correct_Strong
000a86  9900              LDR      r1,[sp,#0]            ;1728
000a88  4288              CMP      r0,r1                 ;1728
000a8a  d902              BLS      |L2.2706|
000a8c  f8cd8000          STR      r8,[sp,#0]            ;1728
000a90  e008              B        |L2.2724|
                  |L2.2706|
000a92  69e0              LDR      r0,[r4,#0x1c]         ;1729  ; Correct_Strong
000a94  9900              LDR      r1,[sp,#0]            ;1729
000a96  1a08              SUBS     r0,r1,r0              ;1729
000a98  9000              STR      r0,[sp,#0]            ;1729
000a9a  e003              B        |L2.2724|
                  |L2.2716|
000a9c  69e0              LDR      r0,[r4,#0x1c]         ;1731  ; Correct_Strong
000a9e  9900              LDR      r1,[sp,#0]            ;1731
000aa0  4408              ADD      r0,r0,r1              ;1731
000aa2  9000              STR      r0,[sp,#0]            ;1731
                  |L2.2724|
000aa4  69f8              LDR      r0,[r7,#0x1c]         ;1732  ; Correct_Parametet
000aa6  9900              LDR      r1,[sp,#0]            ;1732
000aa8  fbb1f0f0          UDIV     r0,r1,r0              ;1732
000aac  9000              STR      r0,[sp,#0]            ;1732
000aae  9800              LDR      r0,[sp,#0]            ;1733
000ab0  0840              LSRS     r0,r0,#1              ;1733
000ab2  9000              STR      r0,[sp,#0]            ;1733
000ab4  9800              LDR      r0,[sp,#0]
000ab6  8018              STRH     r0,[r3,#0]
;;;1735   		if(SET_Current==0)
000ab8  68a8              LDR      r0,[r5,#8]  ; Run_Control
000aba  bb10              CBNZ     r0,|L2.2818|
;;;1736   		{
;;;1737   			Contr_Current=0;
000abc  f8a38000          STRH     r8,[r3,#0]
000ac0  e01f              B        |L2.2818|
                  |L2.2754|
;;;1738   		}
;;;1739   	}else{
;;;1740   		if ((Polar4 & 0x04) == 0)			   
000ac2  7931              LDRB     r1,[r6,#4]  ; correct_por
000ac4  0749              LSLS     r1,r1,#29
000ac6  d40a              BMI      |L2.2782|
;;;1741   		{
;;;1742   			if (var32 < SET_POWERA_Offset1) var32 = 0;
000ac8  6e41              LDR      r1,[r0,#0x64]  ; InFlashSave
000aca  9a00              LDR      r2,[sp,#0]
000acc  4291              CMP      r1,r2
000ace  d902              BLS      |L2.2774|
000ad0  f8cd8000          STR      r8,[sp,#0]
000ad4  e007              B        |L2.2790|
                  |L2.2774|
;;;1743   			else var32 = var32 - SET_POWERA_Offset1;
000ad6  9a00              LDR      r2,[sp,#0]
000ad8  1a51              SUBS     r1,r2,r1
000ada  9100              STR      r1,[sp,#0]
000adc  e003              B        |L2.2790|
                  |L2.2782|
;;;1744   		}
;;;1745   		else var32 = var32 + SET_POWERA_Offset1;
000ade  6e41              LDR      r1,[r0,#0x64]  ; InFlashSave
000ae0  9a00              LDR      r2,[sp,#0]
000ae2  4411              ADD      r1,r1,r2
000ae4  9100              STR      r1,[sp,#0]
                  |L2.2790|
;;;1746   		var32 = var32/SET_POWERA1;
000ae6  6dc0              LDR      r0,[r0,#0x5c]  ; InFlashSave
000ae8  9900              LDR      r1,[sp,#0]
000aea  fbb1f0f0          UDIV     r0,r1,r0
000aee  9000              STR      r0,[sp,#0]
;;;1747   		var32=var32>>1;
000af0  9800              LDR      r0,[sp,#0]
000af2  0840              LSRS     r0,r0,#1
000af4  9000              STR      r0,[sp,#0]
;;;1748   		Contr_Current = var32;
000af6  9800              LDR      r0,[sp,#0]
000af8  8018              STRH     r0,[r3,#0]
;;;1749   		if(SET_Current==0)
000afa  68a8              LDR      r0,[r5,#8]  ; Run_Control
000afc  b908              CBNZ     r0,|L2.2818|
;;;1750   		{
;;;1751   			Contr_Current=0;
000afe  f8a38000          STRH     r8,[r3,#0]
                  |L2.2818|
;;;1752   		}
;;;1753   	}
;;;1754   	
;;;1755   	var32 = 0;
000b02  f8cd8000          STR      r8,[sp,#0]
;;;1756   }
000b06  b001              ADD      sp,sp,#4
000b08  ecbd8b02          VPOP     {d8}
000b0c  e8bd8ff0          POP      {r4-r11,pc}
;;;1757   /********************************************************************************
                          ENDP

                  |L2.2832|
                          DCD      Imon_value
                  |L2.2836|
                          DCD      disrvalue
                  |L2.2840|
                          DCD      DISS_POW_Current
                  |L2.2844|
                          DCD      Contr_Voltage
                  |L2.2848|
                          DCD      Contr_Current

                          AREA ||i.UART_Action||, CODE, READONLY, ALIGN=2

                  UART_Action PROC
;;;46     //===========================MODBUS–≠“È=============================//
;;;47     void UART_Action(void)
000000  e92d4ff0          PUSH     {r4-r11,lr}
;;;48     {//RUT??®≤
000004  b087              SUB      sp,sp,#0x1c
;;;49     	//ADDR  ???  ??????????   ??????????  ?????????   ????????  CRC? CRC?
;;;50     	//????®≤ADDR ??? ???????  ???  ??? ..... CRC?  CRC?
;;;51     	if (g_tModS.RxBuf[0] == ADDR)
000006  f8df83f8          LDR      r8,|L3.1024|
00000a  4dfe              LDR      r5,|L3.1028|
00000c  f8981000          LDRB     r1,[r8,#0]  ; g_tModS
000010  7868              LDRB     r0,[r5,#1]  ; ADDR
;;;52     	{
;;;53     		if (g_tModS.RxBuf[1] == (0x03))	//??3 ???   
;;;54     		{																		 
;;;55     			vu8 i;
;;;56     			vu16 crc_result;
;;;57     			crc_result = (g_tModS.RxBuf[6] << 8) + g_tModS.RxBuf[7];
;;;58     			if ((crc_result == Hardware_CRC(g_tModS.RxBuf,6)) ||(crc_result == 0) )
;;;59     			{
;;;60     				if (g_tModS.RxBuf[3] < 0x07)    								//?????????¶∂?
;;;61     				{
;;;62     					if ((g_tModS.RxBuf[3] + g_tModS.RxBuf[5]) < 0x0F)		//??????????????????¶∂?
;;;63     					{							
;;;64     						UART_Buffer_Send[0] = ADDR;
000012  4bfd              LDR      r3,|L3.1032|
;;;65     						UART_Buffer_Send[1] = 0x03;
;;;66     						UART_Buffer_Send[2] = g_tModS.RxBuf[5]*2;
;;;67     						for (i=0;i<UART_Buffer_Send[2];i++)
;;;68     						{
;;;69     							if ((i % 2) == 0) UART_Buffer_Send[3 + i] = Run_Control[g_tModS.RxBuf[3] + i / 2] >> 8;
;;;70     							else UART_Buffer_Send[3 + i] = Run_Control[g_tModS.RxBuf[3] + i / 2];														
;;;71     						}
;;;72     						crc_result = Hardware_CRC(UART_Buffer_Send,UART_Buffer_Send[2] + 3);
;;;73     						UART_Buffer_Send[3 + UART_Buffer_Send[2]] = crc_result >> 8;
;;;74     						UART_Buffer_Send[4 + UART_Buffer_Send[2]] = crc_result;
;;;75     						Transmit_BUFFERsize = UART_Buffer_Send[2] + 5;
000014  4efd              LDR      r6,|L3.1036|
;;;76     						UART_SEND_flag=1;
000016  4cfe              LDR      r4,|L3.1040|
000018  4ffe              LDR      r7,|L3.1044|
00001a  4281              CMP      r1,r0                 ;51
00001c  d15b              BNE      |L3.214|
00001e  f8980001          LDRB     r0,[r8,#1]            ;53  ; g_tModS
000022  2803              CMP      r0,#3                 ;53
000024  d157              BNE      |L3.214|
000026  f8980007          LDRB     r0,[r8,#7]            ;57  ; g_tModS
00002a  f8981006          LDRB     r1,[r8,#6]            ;57  ; g_tModS
00002e  eb002001          ADD      r0,r0,r1,LSL #8       ;57
000032  9005              STR      r0,[sp,#0x14]         ;57
000034  2106              MOVS     r1,#6                 ;58
000036  4640              MOV      r0,r8                 ;58
000038  f7fffffe          BL       Hardware_CRC
00003c  f8bd1014          LDRH     r1,[sp,#0x14]         ;58
000040  4288              CMP      r0,r1                 ;58
000042  d002              BEQ      |L3.74|
000044  f8bd0014          LDRH     r0,[sp,#0x14]         ;58
000048  bbf0              CBNZ     r0,|L3.200|
                  |L3.74|
00004a  f8980003          LDRB     r0,[r8,#3]            ;60  ; g_tModS
00004e  2807              CMP      r0,#7                 ;60
000050  d241              BCS      |L3.214|
000052  f8981005          LDRB     r1,[r8,#5]            ;62  ; g_tModS
000056  1842              ADDS     r2,r0,r1              ;62
000058  2a0f              CMP      r2,#0xf               ;62
00005a  d23c              BCS      |L3.214|
00005c  786a              LDRB     r2,[r5,#1]            ;64  ; ADDR
00005e  701a              STRB     r2,[r3,#0]            ;64
000060  2203              MOVS     r2,#3                 ;65
000062  705a              STRB     r2,[r3,#1]            ;65
000064  0049              LSLS     r1,r1,#1              ;66
000066  7099              STRB     r1,[r3,#2]            ;66
000068  2100              MOVS     r1,#0                 ;67
00006a  9106              STR      r1,[sp,#0x18]         ;67
00006c  e011              B        |L3.146|
                  |L3.110|
00006e  f89d1018          LDRB     r1,[sp,#0x18]         ;69
000072  07c9              LSLS     r1,r1,#31             ;69
000074  d04a              BEQ      |L3.268|
000076  f89d1018          LDRB     r1,[sp,#0x18]         ;70
00007a  eb000151          ADD      r1,r0,r1,LSR #1       ;70
00007e  f8571021          LDR      r1,[r7,r1,LSL #2]     ;70
000082  f89d2018          LDRB     r2,[sp,#0x18]         ;70
000086  441a              ADD      r2,r2,r3              ;70
000088  70d1              STRB     r1,[r2,#3]            ;70
                  |L3.138|
00008a  f89d1018          LDRB     r1,[sp,#0x18]         ;67
00008e  1c49              ADDS     r1,r1,#1              ;67
000090  9106              STR      r1,[sp,#0x18]         ;67
                  |L3.146|
000092  7899              LDRB     r1,[r3,#2]            ;67  ; UART_Buffer_Send
000094  f89d2018          LDRB     r2,[sp,#0x18]         ;67
000098  4291              CMP      r1,r2                 ;67
00009a  d8e8              BHI      |L3.110|
00009c  7898              LDRB     r0,[r3,#2]            ;72  ; UART_Buffer_Send
00009e  1cc0              ADDS     r0,r0,#3              ;72
0000a0  b2c1              UXTB     r1,r0                 ;72
0000a2  48d9              LDR      r0,|L3.1032|
0000a4  f7fffffe          BL       Hardware_CRC
0000a8  9005              STR      r0,[sp,#0x14]         ;72
0000aa  f8bd0014          LDRH     r0,[sp,#0x14]         ;73
0000ae  789a              LDRB     r2,[r3,#2]            ;73  ; UART_Buffer_Send
0000b0  0a01              LSRS     r1,r0,#8              ;73
0000b2  48d5              LDR      r0,|L3.1032|
0000b4  1cc0              ADDS     r0,r0,#3              ;73
0000b6  5411              STRB     r1,[r2,r0]            ;73
0000b8  f8bd0014          LDRH     r0,[sp,#0x14]         ;74
0000bc  789a              LDRB     r2,[r3,#2]            ;74  ; UART_Buffer_Send
0000be  49d2              LDR      r1,|L3.1032|
0000c0  1d09              ADDS     r1,r1,#4              ;74
0000c2  5450              STRB     r0,[r2,r1]            ;74
0000c4  7898              LDRB     r0,[r3,#2]            ;75  ; UART_Buffer_Send
0000c6  e000              B        |L3.202|
                  |L3.200|
0000c8  e005              B        |L3.214|
                  |L3.202|
0000ca  1d40              ADDS     r0,r0,#5              ;75
0000cc  7030              STRB     r0,[r6,#0]            ;75
0000ce  6820              LDR      r0,[r4,#0]  ; flagA
0000d0  f0400010          ORR      r0,r0,#0x10
0000d4  6020              STR      r0,[r4,#0]  ; flagA
                  |L3.214|
;;;77     					}
;;;78     				}
;;;79     			}	
;;;80     		}
;;;81     	} 
;;;82     //===============================ß’???=================================
;;;83     	if ((g_tModS.RxBuf[0] == 0) || (g_tModS.RxBuf[0] == ADDR) || (g_tModS.RxBuf[0] == ((ADDR-1)/4+100)))	 
0000d6  f8981000          LDRB     r1,[r8,#0]  ; g_tModS
0000da  b161              CBZ      r1,|L3.246|
0000dc  7868              LDRB     r0,[r5,#1]  ; ADDR
0000de  4281              CMP      r1,r0
0000e0  d009              BEQ      |L3.246|
0000e2  7868              LDRB     r0,[r5,#1]  ; ADDR
0000e4  1e40              SUBS     r0,r0,#1
0000e6  17c2              ASRS     r2,r0,#31
0000e8  eb007092          ADD      r0,r0,r2,LSR #30
0000ec  2264              MOVS     r2,#0x64
0000ee  eb0200a0          ADD      r0,r2,r0,ASR #2
0000f2  4288              CMP      r0,r1
0000f4  d179              BNE      |L3.490|
                  |L3.246|
;;;84     	{
;;;85     		vu8 var8;
;;;86     		vu8 a=0;
0000f6  f04f0a00          MOV      r10,#0
0000fa  f8cda014          STR      r10,[sp,#0x14]
;;;87     		vu16 var16;
;;;88     		vu16 crc_result;
;;;89     //=========================????6 ß’?????===========================
;;;90     		if (g_tModS.RxBuf[1] == 6)                                 //???????°¶????6
0000fe  f8980001          LDRB     r0,[r8,#1]  ; g_tModS
;;;91     		{
;;;92     			if (g_tModS.RxBuf[3] < 0x05)							  //????ß’???°¶???ß’?¶∂?
;;;93     			{
;;;94     				crc_result = (g_tModS.RxBuf[6] << 8) + g_tModS.RxBuf[7];
;;;95     				if ((crc_result == Hardware_CRC(g_tModS.RxBuf,6)) ||(crc_result == 0) )		  //??CRC
;;;96     				{
;;;97     					var16 = (g_tModS.RxBuf[4] << 8) + g_tModS.RxBuf[5];	//?5 6?????ß’????
;;;98     					var8 = g_tModS.RxBuf[3];	        						//?3 4?????ß’????
;;;99     					Run_Control[var8] = var16;			    //???ß’??????
;;;100    
;;;101    					if (g_tModS.RxBuf[0] == ADDR)							//??????????
;;;102    					{
;;;103    						for (a=0;a<8;a++)
;;;104    						{UART_Buffer_Send[a] = g_tModS.RxBuf[a];}
;;;105    						Transmit_BUFFERsize = 8;						//??????®¨???CRC
000102  f04f0908          MOV      r9,#8
000106  2806              CMP      r0,#6                 ;90
000108  d00c              BEQ      |L3.292|
00010a  e04e              B        |L3.426|
                  |L3.268|
00010c  f89d1018          LDRB     r1,[sp,#0x18]         ;69
000110  eb000151          ADD      r1,r0,r1,LSR #1       ;69
000114  f8571021          LDR      r1,[r7,r1,LSL #2]     ;69
000118  f89d2018          LDRB     r2,[sp,#0x18]         ;69
00011c  0a09              LSRS     r1,r1,#8              ;69
00011e  441a              ADD      r2,r2,r3              ;69
000120  70d1              STRB     r1,[r2,#3]            ;69
000122  e7b2              B        |L3.138|
                  |L3.292|
000124  f8980003          LDRB     r0,[r8,#3]            ;92  ; g_tModS
000128  2805              CMP      r0,#5                 ;92
00012a  d23e              BCS      |L3.426|
00012c  f8980007          LDRB     r0,[r8,#7]            ;94  ; g_tModS
000130  f8981006          LDRB     r1,[r8,#6]            ;94  ; g_tModS
000134  eb002001          ADD      r0,r0,r1,LSL #8       ;94
000138  9003              STR      r0,[sp,#0xc]          ;94
00013a  2106              MOVS     r1,#6                 ;95
00013c  48b0              LDR      r0,|L3.1024|
00013e  f7fffffe          BL       Hardware_CRC
000142  f8bd100c          LDRH     r1,[sp,#0xc]          ;95
000146  4288              CMP      r0,r1                 ;95
000148  d002              BEQ      |L3.336|
00014a  f8bd000c          LDRH     r0,[sp,#0xc]          ;95
00014e  bb60              CBNZ     r0,|L3.426|
                  |L3.336|
000150  f8980005          LDRB     r0,[r8,#5]            ;97  ; g_tModS
000154  f8981004          LDRB     r1,[r8,#4]            ;97  ; g_tModS
000158  eb002001          ADD      r0,r0,r1,LSL #8       ;97
00015c  9004              STR      r0,[sp,#0x10]         ;97
00015e  f8980003          LDRB     r0,[r8,#3]            ;98  ; g_tModS
000162  9006              STR      r0,[sp,#0x18]         ;98
000164  f8bd0010          LDRH     r0,[sp,#0x10]         ;99
000168  f89d1018          LDRB     r1,[sp,#0x18]         ;99
00016c  f8470021          STR      r0,[r7,r1,LSL #2]     ;99
000170  f8980000          LDRB     r0,[r8,#0]            ;101  ; g_tModS
000174  7869              LDRB     r1,[r5,#1]            ;101  ; ADDR
000176  4288              CMP      r0,r1                 ;101
000178  d117              BNE      |L3.426|
00017a  f8cda014          STR      r10,[sp,#0x14]        ;103
00017e  e00a              B        |L3.406|
                  |L3.384|
000180  f89d0014          LDRB     r0,[sp,#0x14]         ;104
000184  f89d1014          LDRB     r1,[sp,#0x14]         ;104
000188  f8180000          LDRB     r0,[r8,r0]            ;104
00018c  5458              STRB     r0,[r3,r1]            ;104
00018e  f89d0014          LDRB     r0,[sp,#0x14]         ;103
000192  1c40              ADDS     r0,r0,#1              ;103
000194  9005              STR      r0,[sp,#0x14]         ;103
                  |L3.406|
000196  f89d0014          LDRB     r0,[sp,#0x14]         ;103
00019a  2808              CMP      r0,#8                 ;103
00019c  d3f0              BCC      |L3.384|
00019e  f8869000          STRB     r9,[r6,#0]
;;;106    						UART_SEND_flag=1;
0001a2  6820              LDR      r0,[r4,#0]  ; flagA
0001a4  f0400010          ORR      r0,r0,#0x10
0001a8  6020              STR      r0,[r4,#0]  ; flagA
                  |L3.426|
;;;107    					}
;;;108    				}
;;;109    			}
;;;110    		}
;;;111    //=======================================??°¶??16®¨lß’???===========================================
;;;112    //???16??:
;;;113    //     ?? ?? ß’??????  ß’?????? ß’????  ß’???? ß’????  ??? ??? ......CRC? CRC?
;;;114    //??????:
;;;115    //     ?? ?? ß’??????  ß’??????  ß’????? ß’?????  CRC?  CRC? 
;;;116    		if (g_tModS.RxBuf[1] == 16)										  
0001aa  f8980001          LDRB     r0,[r8,#1]  ; g_tModS
0001ae  2810              CMP      r0,#0x10
0001b0  d15b              BNE      |L3.618|
;;;117    		{	
;;;118    			if ((g_tModS.RxBuf[6] == 6) && (g_tModS.RxBuf[3] == 0x00))	//??lß’??????
0001b2  f8980006          LDRB     r0,[r8,#6]  ; g_tModS
0001b6  2806              CMP      r0,#6
0001b8  d157              BNE      |L3.618|
0001ba  f8980003          LDRB     r0,[r8,#3]  ; g_tModS
0001be  b9a0              CBNZ     r0,|L3.490|
;;;119    			{
;;;120    				crc_result = (g_tModS.RxBuf[13] << 8) + g_tModS.RxBuf[14];
0001c0  f898000e          LDRB     r0,[r8,#0xe]  ; g_tModS
0001c4  f898100d          LDRB     r1,[r8,#0xd]  ; g_tModS
0001c8  eb002001          ADD      r0,r0,r1,LSL #8
0001cc  9003              STR      r0,[sp,#0xc]
;;;121    				if ((crc_result == Hardware_CRC(g_tModS.RxBuf,13)) ||(crc_result == 0) )	   //??CRC
0001ce  210d              MOVS     r1,#0xd
0001d0  488b              LDR      r0,|L3.1024|
0001d2  f7fffffe          BL       Hardware_CRC
0001d6  f8bd100c          LDRH     r1,[sp,#0xc]
0001da  4288              CMP      r0,r1
0001dc  d002              BEQ      |L3.484|
0001de  f8bd000c          LDRH     r0,[sp,#0xc]
0001e2  b910              CBNZ     r0,|L3.490|
                  |L3.484|
;;;122    				{												
;;;123    					for (var8=0;var8<3;var8++) Run_Control[var8] = (g_tModS.RxBuf[var8*2+7] << 8) + g_tModS.RxBuf[var8*2+8];
0001e4  f8cda018          STR      r10,[sp,#0x18]
0001e8  e014              B        |L3.532|
                  |L3.490|
0001ea  e03e              B        |L3.618|
                  |L3.492|
0001ec  f89d0018          LDRB     r0,[sp,#0x18]
0001f0  f89d1018          LDRB     r1,[sp,#0x18]
0001f4  eb080040          ADD      r0,r8,r0,LSL #1
0001f8  7a00              LDRB     r0,[r0,#8]
0001fa  eb080141          ADD      r1,r8,r1,LSL #1
0001fe  79c9              LDRB     r1,[r1,#7]
000200  eb002001          ADD      r0,r0,r1,LSL #8
000204  f89d1018          LDRB     r1,[sp,#0x18]
000208  f8470021          STR      r0,[r7,r1,LSL #2]
00020c  f89d0018          LDRB     r0,[sp,#0x18]
000210  1c40              ADDS     r0,r0,#1
000212  9006              STR      r0,[sp,#0x18]
                  |L3.532|
000214  f89d0018          LDRB     r0,[sp,#0x18]
000218  2803              CMP      r0,#3
00021a  d3e7              BCC      |L3.492|
;;;124    
;;;125    					if (g_tModS.RxBuf[0] == ADDR)					  //?????????
00021c  f8980000          LDRB     r0,[r8,#0]  ; g_tModS
000220  7869              LDRB     r1,[r5,#1]  ; ADDR
000222  4288              CMP      r0,r1
000224  d121              BNE      |L3.618|
;;;126    					{
;;;127    						UART_Buffer_Send[0] = ADDR;
000226  7868              LDRB     r0,[r5,#1]  ; ADDR
000228  7018              STRB     r0,[r3,#0]
;;;128    						UART_Buffer_Send[1] = 16;
00022a  2010              MOVS     r0,#0x10
00022c  7058              STRB     r0,[r3,#1]
;;;129    						UART_Buffer_Send[2] = g_tModS.RxBuf[2];
00022e  f8980002          LDRB     r0,[r8,#2]  ; g_tModS
000232  7098              STRB     r0,[r3,#2]
;;;130    						UART_Buffer_Send[3] = g_tModS.RxBuf[3];
000234  f8980003          LDRB     r0,[r8,#3]  ; g_tModS
000238  70d8              STRB     r0,[r3,#3]
;;;131    						UART_Buffer_Send[4] = g_tModS.RxBuf[4];
00023a  f8980004          LDRB     r0,[r8,#4]  ; g_tModS
00023e  7118              STRB     r0,[r3,#4]
;;;132    						UART_Buffer_Send[5] = g_tModS.RxBuf[5];
000240  f8980005          LDRB     r0,[r8,#5]  ; g_tModS
000244  7158              STRB     r0,[r3,#5]
;;;133    						crc_result = Hardware_CRC(UART_Buffer_Send,6);	 //??CRC?
000246  2106              MOVS     r1,#6
000248  486f              LDR      r0,|L3.1032|
00024a  f7fffffe          BL       Hardware_CRC
00024e  9003              STR      r0,[sp,#0xc]
;;;134    						UART_Buffer_Send[6] = crc_result>>8;
000250  f8bd000c          LDRH     r0,[sp,#0xc]
000254  0a00              LSRS     r0,r0,#8
000256  7198              STRB     r0,[r3,#6]
;;;135    						UART_Buffer_Send[7] = crc_result;				 
000258  f8bd000c          LDRH     r0,[sp,#0xc]
00025c  71d8              STRB     r0,[r3,#7]
;;;136    						Transmit_BUFFERsize = 8;					     //?????????
00025e  f8869000          STRB     r9,[r6,#0]
;;;137    						UART_SEND_flag=1;
000262  6820              LDR      r0,[r4,#0]  ; flagA
000264  f0400010          ORR      r0,r0,#0x10
000268  6020              STR      r0,[r4,#0]  ; flagA
                  |L3.618|
;;;138    					}
;;;139    				}
;;;140    			}			 
;;;141    		}
;;;142    	}
;;;143    /*************************************???ßµ???**************************************************************************/
;;;144    	if (((g_tModS.RxBuf[0] == 0x01)&&(g_tModS.RxBuf[2] == 0xA5))||(flag_ADJ_ON==1))			   //??ßµ?
00026a  f8980000          LDRB     r0,[r8,#0]  ; g_tModS
00026e  f8dfb1a8          LDR      r11,|L3.1048|
000272  2801              CMP      r0,#1
000274  d103              BNE      |L3.638|
000276  f8980002          LDRB     r0,[r8,#2]  ; g_tModS
00027a  28a5              CMP      r0,#0xa5
00027c  d003              BEQ      |L3.646|
                  |L3.638|
00027e  f89b0000          LDRB     r0,[r11,#0]  ; flagF
000282  0780              LSLS     r0,r0,#30
000284  d57e              BPL      |L3.900|
                  |L3.646|
;;;145    	{ 
;;;146    		if(g_tModS.RxBuf[1] == 0x01)
000286  f8980001          LDRB     r0,[r8,#1]  ; g_tModS
00028a  2801              CMP      r0,#1
00028c  d10f              BNE      |L3.686|
;;;147    		{
;;;148    			flag_ADJ_VL=0;
00028e  f8db1000          LDR      r1,[r11,#0]  ; flagF
000292  f0210104          BIC      r1,r1,#4
000296  f8cb1000          STR      r1,[r11,#0]  ; flagF
;;;149    			Modify_A_READ = Vmon1_value;//????
00029a  4960              LDR      r1,|L3.1052|
00029c  6809              LDR      r1,[r1,#0]  ; Vmon1_value
00029e  6129              STR      r1,[r5,#0x10]  ; Modify_A_READ
;;;150    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];//????
0002a0  f8981004          LDRB     r1,[r8,#4]  ; g_tModS
0002a4  f8982003          LDRB     r2,[r8,#3]  ; g_tModS
0002a8  eb012102          ADD      r1,r1,r2,LSL #8
0002ac  61a9              STR      r1,[r5,#0x18]  ; Modify_A_ACT
                  |L3.686|
;;;151    		}
;;;152    		if (g_tModS.RxBuf[1] == 0x02)			   //???ßµ???
;;;153    		{
;;;154    			vu32 var16;
;;;155    			vu32 var32a;
;;;156    			vu32 var32b;
;;;157    			
;;;158    			vu32 var16a;
;;;159    			vu32 var32c;
;;;160    			vu32 var32d;
;;;161    			Modify_B_READ =Vmon1_value;//????
;;;162    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];//????
;;;163    			var32a = Modify_B_ACT;
;;;164    			var32a = var32a - Modify_A_ACT;
;;;165    			var32a = var32a << 12;
;;;166    			var16 = Modify_B_READ - Modify_A_READ;
;;;167    			var32a = var32a / var16;
;;;168    			REG_CorrectionV = var32a;
0002ae  f8df9164          LDR      r9,|L3.1044|
;;;169    			var32a=0;
;;;170    			var32a = Modify_B_ACT;
;;;171    			var32a = var32a << 12;
;;;172    			var32b = Modify_B_READ;
;;;173    			var32b = var32b * REG_CorrectionV;
;;;174    			if (var32a < var32b)
;;;175    			{
;;;176    				var32b = var32b - var32a;
;;;177    				REG_ReadV_Offset = var32b;
;;;178    				Polar |= 0x01;
0002b2  4c54              LDR      r4,|L3.1028|
0002b4  f1a909a8          SUB      r9,r9,#0xa8           ;168
0002b8  3428              ADDS     r4,r4,#0x28
;;;179    			}
;;;180    			else 
;;;181    			{
;;;182    				var32a = var32a - var32b;
;;;183    				REG_ReadV_Offset = var32a;
;;;184    				Polar &= ~0x01;
;;;185    			}			
;;;186    			Flash_Write_all();	//??ß’?FLASH
;;;187    			Flag_DAC_OFF=0;
0002ba  4f59              LDR      r7,|L3.1056|
0002bc  f1090654          ADD      r6,r9,#0x54           ;177
0002c0  2802              CMP      r0,#2                 ;152
0002c2  d149              BNE      |L3.856|
0002c4  4855              LDR      r0,|L3.1052|
0002c6  6800              LDR      r0,[r0,#0]            ;161  ; Vmon1_value
0002c8  61e8              STR      r0,[r5,#0x1c]         ;161  ; Modify_B_READ
0002ca  f8980004          LDRB     r0,[r8,#4]            ;162  ; g_tModS
0002ce  f8981003          LDRB     r1,[r8,#3]            ;162  ; g_tModS
0002d2  eb002001          ADD      r0,r0,r1,LSL #8       ;162
0002d6  6268              STR      r0,[r5,#0x24]         ;162  ; Modify_B_ACT
0002d8  6a68              LDR      r0,[r5,#0x24]         ;163  ; Modify_B_ACT
0002da  9005              STR      r0,[sp,#0x14]         ;163
0002dc  9805              LDR      r0,[sp,#0x14]         ;164
0002de  69a9              LDR      r1,[r5,#0x18]         ;164  ; Modify_A_ACT
0002e0  1a40              SUBS     r0,r0,r1              ;164
0002e2  9005              STR      r0,[sp,#0x14]         ;164
0002e4  9805              LDR      r0,[sp,#0x14]         ;165
0002e6  0300              LSLS     r0,r0,#12             ;165
0002e8  9005              STR      r0,[sp,#0x14]         ;165
0002ea  69e8              LDR      r0,[r5,#0x1c]         ;166  ; Modify_B_READ
0002ec  6929              LDR      r1,[r5,#0x10]         ;166  ; Modify_A_READ
0002ee  1a40              SUBS     r0,r0,r1              ;166
0002f0  9006              STR      r0,[sp,#0x18]         ;166
0002f2  e9dd0105          LDRD     r0,r1,[sp,#0x14]      ;167
0002f6  fbb0f0f1          UDIV     r0,r0,r1              ;167
0002fa  9005              STR      r0,[sp,#0x14]         ;167
0002fc  9805              LDR      r0,[sp,#0x14]         ;168
0002fe  f8c90000          STR      r0,[r9,#0]            ;168  ; Correct_Parametet
000302  6a68              LDR      r0,[r5,#0x24]         ;170  ; Modify_B_ACT
000304  9005              STR      r0,[sp,#0x14]         ;170
000306  9805              LDR      r0,[sp,#0x14]         ;171
000308  0300              LSLS     r0,r0,#12             ;171
00030a  9005              STR      r0,[sp,#0x14]         ;171
00030c  69e8              LDR      r0,[r5,#0x1c]         ;172  ; Modify_B_READ
00030e  9004              STR      r0,[sp,#0x10]         ;172
000310  f8d90000          LDR      r0,[r9,#0]            ;173  ; Correct_Parametet
000314  9904              LDR      r1,[sp,#0x10]         ;173
000316  4348              MULS     r0,r1,r0              ;173
000318  9004              STR      r0,[sp,#0x10]         ;173
00031a  e9dd1004          LDRD     r1,r0,[sp,#0x10]      ;174
00031e  4288              CMP      r0,r1                 ;174
000320  d20a              BCS      |L3.824|
000322  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;176
000326  1a40              SUBS     r0,r0,r1              ;176
000328  9004              STR      r0,[sp,#0x10]         ;176
00032a  9804              LDR      r0,[sp,#0x10]         ;177
00032c  6030              STR      r0,[r6,#0]            ;177  ; Correct_Strong
00032e  7820              LDRB     r0,[r4,#0]            ;178  ; correct_por
000330  f0400001          ORR      r0,r0,#1              ;178
000334  7020              STRB     r0,[r4,#0]            ;178
000336  e009              B        |L3.844|
                  |L3.824|
000338  e9dd1004          LDRD     r1,r0,[sp,#0x10]      ;182
00033c  1a40              SUBS     r0,r0,r1              ;182
00033e  9005              STR      r0,[sp,#0x14]         ;182
000340  9805              LDR      r0,[sp,#0x14]         ;183
000342  6030              STR      r0,[r6,#0]            ;183  ; Correct_Strong
000344  7820              LDRB     r0,[r4,#0]            ;184  ; correct_por
000346  f0200001          BIC      r0,r0,#1              ;184
00034a  7020              STRB     r0,[r4,#0]            ;184
                  |L3.844|
00034c  f7fffffe          BL       Flash_Write_all
000350  6838              LDR      r0,[r7,#0]  ; flagB
000352  f0200008          BIC      r0,r0,#8
000356  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.856|
;;;188    		}
;;;189    		
;;;190    		
;;;191    /************************************???°§????ßµ?*****************************************************************/
;;;192    		if (g_tModS.RxBuf[1] == 0x03)			   //CC??ßµ?
000358  4641              MOV      r1,r8
00035a  f8980001          LDRB     r0,[r8,#1]  ; g_tModS
;;;193    		{
;;;194    			Modify_A_READ = Imon1_value;//
00035e  f8dfa0c4          LDR      r10,|L3.1060|
;;;195    			Modify_C_READ = Contr_Laod;//
000362  f8df80c4          LDR      r8,|L3.1064|
000366  2803              CMP      r0,#3                 ;192
000368  d110              BNE      |L3.908|
00036a  f8da2000          LDR      r2,[r10,#0]           ;194  ; Imon1_value
00036e  612a              STR      r2,[r5,#0x10]         ;194  ; Modify_A_READ
000370  f8b82000          LDRH     r2,[r8,#0]  ; Contr_Laod
000374  616a              STR      r2,[r5,#0x14]  ; Modify_C_READ
;;;196    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000376  790a              LDRB     r2,[r1,#4]  ; g_tModS
000378  78cb              LDRB     r3,[r1,#3]  ; g_tModS
00037a  eb022203          ADD      r2,r2,r3,LSL #8
00037e  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
;;;197    			Flag_DAC_OFF=1;//
000380  683a              LDR      r2,[r7,#0]  ; flagB
000382  e000              B        |L3.902|
                  |L3.900|
000384  e3fe              B        |L3.2948|
                  |L3.902|
000386  f0420208          ORR      r2,r2,#8
00038a  603a              STR      r2,[r7,#0]  ; flagB
                  |L3.908|
;;;198    		}
;;;199    
;;;200    		if (g_tModS.RxBuf[1] == 0x04)			   //
00038c  2804              CMP      r0,#4
00038e  d17d              BNE      |L3.1164|
;;;201    		{
;;;202    			vu32 var16;
;;;203    			vu32 var32a;
;;;204    			vu32 var32b;
;;;205    			
;;;206    			vu32 var16a;
;;;207    			vu32 var32c;
;;;208    			vu32 var32d;
;;;209    			
;;;210    			Modify_B_READ = Imon1_value;
000390  f8da0000          LDR      r0,[r10,#0]  ; Imon1_value
000394  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;211    			Modify_D_READ = Contr_Laod;
000396  f8b80000          LDRH     r0,[r8,#0]  ; Contr_Laod
00039a  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;212    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
00039c  4818              LDR      r0,|L3.1024|
00039e  7901              LDRB     r1,[r0,#4]  ; g_tModS
0003a0  78c0              LDRB     r0,[r0,#3]  ; g_tModS
0003a2  eb012000          ADD      r0,r1,r0,LSL #8
0003a6  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;213    			
;;;214    			var32a = Modify_B_ACT;
0003a8  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0003aa  9005              STR      r0,[sp,#0x14]
;;;215    			var32a = var32a - Modify_A_ACT;
0003ac  9805              LDR      r0,[sp,#0x14]
0003ae  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
0003b0  1a40              SUBS     r0,r0,r1
0003b2  9005              STR      r0,[sp,#0x14]
;;;216    			var32a = var32a << 12;
0003b4  9805              LDR      r0,[sp,#0x14]
0003b6  0300              LSLS     r0,r0,#12
0003b8  9005              STR      r0,[sp,#0x14]
;;;217    			var16 = Modify_B_READ - Modify_A_READ;
0003ba  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
0003bc  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
0003be  1a40              SUBS     r0,r0,r1
0003c0  9006              STR      r0,[sp,#0x18]
;;;218    			var32a = var32a / var16;
0003c2  e9dd0105          LDRD     r0,r1,[sp,#0x14]
0003c6  fbb0f0f1          UDIV     r0,r0,r1
0003ca  9005              STR      r0,[sp,#0x14]
;;;219    			REG_Load_A = var32a;
0003cc  9805              LDR      r0,[sp,#0x14]
0003ce  f8c90004          STR      r0,[r9,#4]  ; Correct_Parametet
;;;220    			var32a = Modify_B_ACT;
0003d2  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0003d4  9005              STR      r0,[sp,#0x14]
;;;221    			var32a = var32a << 12;
0003d6  9805              LDR      r0,[sp,#0x14]
0003d8  0300              LSLS     r0,r0,#12
0003da  9005              STR      r0,[sp,#0x14]
;;;222    			var32b = Modify_B_READ;
0003dc  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
0003de  9004              STR      r0,[sp,#0x10]
;;;223    			var32b = var32b * REG_Load_A;
0003e0  f8d90004          LDR      r0,[r9,#4]  ; Correct_Parametet
0003e4  9904              LDR      r1,[sp,#0x10]
0003e6  4348              MULS     r0,r1,r0
0003e8  9004              STR      r0,[sp,#0x10]
;;;224    			if (var32a < var32b)
0003ea  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0003ee  4288              CMP      r0,r1
0003f0  d221              BCS      |L3.1078|
;;;225    			{
;;;226    				var32b = var32b - var32a;
0003f2  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0003f6  1a08              SUBS     r0,r1,r0
0003f8  9004              STR      r0,[sp,#0x10]
;;;227    				REG_LoadA_Offset = var32b;
0003fa  9804              LDR      r0,[sp,#0x10]
0003fc  6070              STR      r0,[r6,#4]  ; Correct_Strong
;;;228    				Polar1 |= 0x01;
0003fe  e015              B        |L3.1068|
                  |L3.1024|
                          DCD      g_tModS
                  |L3.1028|
                          DCD      ||.data||
                  |L3.1032|
                          DCD      UART_Buffer_Send
                  |L3.1036|
                          DCD      Transmit_BUFFERsize
                  |L3.1040|
                          DCD      flagA
                  |L3.1044|
                          DCD      ||.bss||+0xa8
                  |L3.1048|
                          DCD      flagF
                  |L3.1052|
                          DCD      Vmon1_value
                  |L3.1056|
                          DCD      flagB
                  |L3.1060|
                          DCD      Imon1_value
                  |L3.1064|
                          DCD      Contr_Laod
                  |L3.1068|
00042c  7860              LDRB     r0,[r4,#1]  ; correct_por
00042e  f0400001          ORR      r0,r0,#1
000432  7060              STRB     r0,[r4,#1]
000434  e009              B        |L3.1098|
                  |L3.1078|
;;;229    			}
;;;230    			else 
;;;231    			{
;;;232    				var32a = var32a - var32b;
000436  e9dd0104          LDRD     r0,r1,[sp,#0x10]
00043a  1a08              SUBS     r0,r1,r0
00043c  9005              STR      r0,[sp,#0x14]
;;;233    				REG_LoadA_Offset = var32a;
00043e  9805              LDR      r0,[sp,#0x14]
000440  6070              STR      r0,[r6,#4]  ; Correct_Strong
;;;234    				Polar1 &= ~0x01;					
000442  7860              LDRB     r0,[r4,#1]  ; correct_por
000444  f0200001          BIC      r0,r0,#1
000448  7060              STRB     r0,[r4,#1]
                  |L3.1098|
;;;235    			}
;;;236    //---------------------------------------------------------------------------------//
;;;237    			var32c = Modify_B_ACT; 
00044a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00044c  9002              STR      r0,[sp,#8]
;;;238    			var32c = var32c - Modify_A_ACT;
00044e  9802              LDR      r0,[sp,#8]
000450  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000452  1a40              SUBS     r0,r0,r1
000454  9002              STR      r0,[sp,#8]
;;;239    			var32c = var32c << 12;
000456  9802              LDR      r0,[sp,#8]
000458  0300              LSLS     r0,r0,#12
00045a  9002              STR      r0,[sp,#8]
;;;240    			var16a=Modify_D_READ-Modify_C_READ;
00045c  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
00045e  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000460  1a40              SUBS     r0,r0,r1
000462  9003              STR      r0,[sp,#0xc]
;;;241    			var16a=var16a*2;
000464  9803              LDR      r0,[sp,#0xc]
000466  0040              LSLS     r0,r0,#1
000468  9003              STR      r0,[sp,#0xc]
;;;242    			var32c=var32c/var16a;
00046a  e9dd0102          LDRD     r0,r1,[sp,#8]
00046e  fbb0f0f1          UDIV     r0,r0,r1
000472  9002              STR      r0,[sp,#8]
;;;243    			SET_LoadA = var32c;
000474  9802              LDR      r0,[sp,#8]
000476  f8c90008          STR      r0,[r9,#8]  ; Correct_Parametet
;;;244    			var32c = Modify_B_ACT;
00047a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00047c  9002              STR      r0,[sp,#8]
;;;245    			var32c = var32c << 12;
00047e  9802              LDR      r0,[sp,#8]
000480  0300              LSLS     r0,r0,#12
000482  9002              STR      r0,[sp,#8]
;;;246    			var32d = SET_LoadA;
000484  f8d90008          LDR      r0,[r9,#8]  ; Correct_Parametet
000488  9001              STR      r0,[sp,#4]
;;;247    			var32d = var32d * (Modify_D_READ*2);
00048a  e000              B        |L3.1166|
                  |L3.1164|
00048c  e023              B        |L3.1238|
                  |L3.1166|
00048e  9801              LDR      r0,[sp,#4]
000490  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
000492  4348              MULS     r0,r1,r0
000494  0040              LSLS     r0,r0,#1
000496  9001              STR      r0,[sp,#4]
;;;248    			if (var32c < var32d)
000498  e9dd1001          LDRD     r1,r0,[sp,#4]
00049c  4288              CMP      r0,r1
00049e  d20a              BCS      |L3.1206|
;;;249    			{
;;;250    				var32d = var32d - var32c;
0004a0  e9dd0101          LDRD     r0,r1,[sp,#4]
0004a4  1a40              SUBS     r0,r0,r1
0004a6  9001              STR      r0,[sp,#4]
;;;251    				SET_LoadA_Offset = var32d;
0004a8  9801              LDR      r0,[sp,#4]
0004aa  60b0              STR      r0,[r6,#8]  ; Correct_Strong
;;;252    				Polar1 |= 0x04;
0004ac  7860              LDRB     r0,[r4,#1]  ; correct_por
0004ae  f0400004          ORR      r0,r0,#4
0004b2  7060              STRB     r0,[r4,#1]
0004b4  e009              B        |L3.1226|
                  |L3.1206|
;;;253    			}
;;;254    			else 
;;;255    			{
;;;256    				var32c = var32c - var32d;
0004b6  e9dd1001          LDRD     r1,r0,[sp,#4]
0004ba  1a40              SUBS     r0,r0,r1
0004bc  9002              STR      r0,[sp,#8]
;;;257    				SET_LoadA_Offset = var32c;
0004be  9802              LDR      r0,[sp,#8]
0004c0  60b0              STR      r0,[r6,#8]  ; Correct_Strong
;;;258    				Polar1 &= ~0x04;
0004c2  7860              LDRB     r0,[r4,#1]  ; correct_por
0004c4  f0200004          BIC      r0,r0,#4
0004c8  7060              STRB     r0,[r4,#1]
                  |L3.1226|
;;;259    			}
;;;260    			Flash_Write_all ();	
0004ca  f7fffffe          BL       Flash_Write_all
;;;261    			Flag_DAC_OFF =0;
0004ce  6838              LDR      r0,[r7,#0]  ; flagB
0004d0  f0200008          BIC      r0,r0,#8
0004d4  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.1238|
;;;262    		}
;;;263    /*************************************??CV??????ßµ?**************************************************************/
;;;264    		if(g_tModS.RxBuf[1] == 0x05)
0004d6  49fe              LDR      r1,|L3.2256|
0004d8  7848              LDRB     r0,[r1,#1]  ; g_tModS
0004da  2805              CMP      r0,#5
0004dc  d10a              BNE      |L3.1268|
;;;265    		{
;;;266    			Modify_A_READ = Vmon1_value;//????
0004de  4afd              LDR      r2,|L3.2260|
0004e0  6812              LDR      r2,[r2,#0]  ; Vmon1_value
0004e2  612a              STR      r2,[r5,#0x10]  ; Modify_A_READ
;;;267    			Modify_C_READ = Contr_Laod;//?????
0004e4  f8b82000          LDRH     r2,[r8,#0]  ; Contr_Laod
0004e8  616a              STR      r2,[r5,#0x14]  ; Modify_C_READ
;;;268    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];//????
0004ea  790a              LDRB     r2,[r1,#4]  ; g_tModS
0004ec  78cb              LDRB     r3,[r1,#3]  ; g_tModS
0004ee  eb022203          ADD      r2,r2,r3,LSL #8
0004f2  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
                  |L3.1268|
;;;269    		}
;;;270    		if (g_tModS.RxBuf[1] == 0x06)			   //???ßµ???
0004f4  2806              CMP      r0,#6
0004f6  d179              BNE      |L3.1516|
;;;271    		{
;;;272    			vu32 var16;
;;;273    			vu32 var32a;
;;;274    			vu32 var32b;
;;;275    			
;;;276    			vu32 var16a;
;;;277    			vu32 var32c;
;;;278    			vu32 var32d;
;;;279    			
;;;280    			Modify_B_READ =Vmon1_value;//????
0004f8  48f6              LDR      r0,|L3.2260|
0004fa  6800              LDR      r0,[r0,#0]  ; Vmon1_value
0004fc  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;281    			Modify_D_READ =Contr_Laod;//?????
0004fe  f8b80000          LDRH     r0,[r8,#0]  ; Contr_Laod
000502  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;282    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];//????
000504  48f2              LDR      r0,|L3.2256|
000506  7901              LDRB     r1,[r0,#4]  ; g_tModS
000508  78c0              LDRB     r0,[r0,#3]  ; g_tModS
00050a  eb012000          ADD      r0,r1,r0,LSL #8
00050e  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;283    			var32a = Modify_B_ACT;
000510  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000512  9005              STR      r0,[sp,#0x14]
;;;284    			var32a = var32a - Modify_A_ACT;
000514  9805              LDR      r0,[sp,#0x14]
000516  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000518  1a40              SUBS     r0,r0,r1
00051a  9005              STR      r0,[sp,#0x14]
;;;285    			var32a = var32a << 12;
00051c  9805              LDR      r0,[sp,#0x14]
00051e  0300              LSLS     r0,r0,#12
000520  9005              STR      r0,[sp,#0x14]
;;;286    			var16 = Modify_B_READ - Modify_A_READ;
000522  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000524  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
000526  1a40              SUBS     r0,r0,r1
000528  9006              STR      r0,[sp,#0x18]
;;;287    			var32a = var32a / var16;
00052a  e9dd0105          LDRD     r0,r1,[sp,#0x14]
00052e  fbb0f0f1          UDIV     r0,r0,r1
000532  9005              STR      r0,[sp,#0x14]
;;;288    			REG_LoadV = var32a;
000534  9805              LDR      r0,[sp,#0x14]
000536  f8c9000c          STR      r0,[r9,#0xc]  ; Correct_Parametet
;;;289    			var32a=0;
;;;290    			var32a = Modify_B_ACT;
00053a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00053c  9005              STR      r0,[sp,#0x14]
;;;291    			var32a = var32a << 12;
00053e  9805              LDR      r0,[sp,#0x14]
000540  0300              LSLS     r0,r0,#12
000542  9005              STR      r0,[sp,#0x14]
;;;292    			var32b = Modify_B_READ;
000544  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000546  9004              STR      r0,[sp,#0x10]
;;;293    			var32b = var32b * REG_LoadV;
000548  f8d9000c          LDR      r0,[r9,#0xc]  ; Correct_Parametet
00054c  9904              LDR      r1,[sp,#0x10]
00054e  4348              MULS     r0,r1,r0
000550  9004              STR      r0,[sp,#0x10]
;;;294    			if (var32a < var32b)
000552  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000556  4288              CMP      r0,r1
000558  d20a              BCS      |L3.1392|
;;;295    			{
;;;296    				var32b = var32b - var32a;
00055a  e9dd0104          LDRD     r0,r1,[sp,#0x10]
00055e  1a40              SUBS     r0,r0,r1
000560  9004              STR      r0,[sp,#0x10]
;;;297    				REG_LoadV_Offset = var32b;
000562  9804              LDR      r0,[sp,#0x10]
000564  60f0              STR      r0,[r6,#0xc]  ; Correct_Strong
;;;298    				Polar2 |= 0x01;
000566  78a0              LDRB     r0,[r4,#2]  ; correct_por
000568  f0400001          ORR      r0,r0,#1
00056c  70a0              STRB     r0,[r4,#2]
00056e  e009              B        |L3.1412|
                  |L3.1392|
;;;299    			}
;;;300    			else 
;;;301    			{
;;;302    				var32a = var32a - var32b;
000570  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000574  1a40              SUBS     r0,r0,r1
000576  9005              STR      r0,[sp,#0x14]
;;;303    				REG_LoadV_Offset = var32a;
000578  9805              LDR      r0,[sp,#0x14]
00057a  60f0              STR      r0,[r6,#0xc]  ; Correct_Strong
;;;304    				Polar2 &= ~0x01;
00057c  78a0              LDRB     r0,[r4,#2]  ; correct_por
00057e  f0200001          BIC      r0,r0,#1
000582  70a0              STRB     r0,[r4,#2]
                  |L3.1412|
;;;305    			}
;;;306    //---------------------------------------------------------------------------------------//			
;;;307    			var32c = Modify_B_ACT; //CV??????ßµ?
000584  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000586  9002              STR      r0,[sp,#8]
;;;308    			var32c = var32c - Modify_A_ACT;
000588  9802              LDR      r0,[sp,#8]
00058a  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
00058c  1a40              SUBS     r0,r0,r1
00058e  9002              STR      r0,[sp,#8]
;;;309    			var32c = var32c << 12;
000590  9802              LDR      r0,[sp,#8]
000592  0300              LSLS     r0,r0,#12
000594  9002              STR      r0,[sp,#8]
;;;310    			var16a=Modify_D_READ-Modify_C_READ;
000596  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
000598  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
00059a  1a40              SUBS     r0,r0,r1
00059c  9003              STR      r0,[sp,#0xc]
;;;311    			var16a=(var16a*2);
00059e  9803              LDR      r0,[sp,#0xc]
0005a0  0040              LSLS     r0,r0,#1
0005a2  9003              STR      r0,[sp,#0xc]
;;;312    			var32c=var32c/var16a;
0005a4  e9dd0102          LDRD     r0,r1,[sp,#8]
0005a8  fbb0f0f1          UDIV     r0,r0,r1
0005ac  9002              STR      r0,[sp,#8]
;;;313    			SET_LoadV = var32c;
0005ae  9802              LDR      r0,[sp,#8]
0005b0  f8c90010          STR      r0,[r9,#0x10]  ; Correct_Parametet
;;;314    			var32c = Modify_B_ACT;
0005b4  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0005b6  9002              STR      r0,[sp,#8]
;;;315    			var32c = var32c << 12;
0005b8  9802              LDR      r0,[sp,#8]
0005ba  0300              LSLS     r0,r0,#12
0005bc  9002              STR      r0,[sp,#8]
;;;316    			var32d = SET_LoadV;
0005be  f8d90010          LDR      r0,[r9,#0x10]  ; Correct_Parametet
0005c2  9001              STR      r0,[sp,#4]
;;;317    			var32d = var32d * (Modify_D_READ*2);
0005c4  9801              LDR      r0,[sp,#4]
0005c6  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
0005c8  4348              MULS     r0,r1,r0
0005ca  0040              LSLS     r0,r0,#1
0005cc  9001              STR      r0,[sp,#4]
;;;318    			if (var32c < var32d)
0005ce  e9dd1001          LDRD     r1,r0,[sp,#4]
0005d2  4288              CMP      r0,r1
0005d4  d20b              BCS      |L3.1518|
;;;319    			{
;;;320    				var32d = var32d - var32c;
0005d6  e9dd0101          LDRD     r0,r1,[sp,#4]
0005da  1a40              SUBS     r0,r0,r1
0005dc  9001              STR      r0,[sp,#4]
;;;321    				SET_LoadV_Offset = var32d;
0005de  9801              LDR      r0,[sp,#4]
0005e0  6130              STR      r0,[r6,#0x10]  ; Correct_Strong
;;;322    				Polar2 |= 0x04;
0005e2  78a0              LDRB     r0,[r4,#2]  ; correct_por
0005e4  f0400004          ORR      r0,r0,#4
0005e8  70a0              STRB     r0,[r4,#2]
0005ea  e00a              B        |L3.1538|
                  |L3.1516|
0005ec  e00d              B        |L3.1546|
                  |L3.1518|
;;;323    			}
;;;324    			else 
;;;325    			{
;;;326    				var32c = var32c - var32d;
0005ee  e9dd1001          LDRD     r1,r0,[sp,#4]
0005f2  1a40              SUBS     r0,r0,r1
0005f4  9002              STR      r0,[sp,#8]
;;;327    				SET_LoadV_Offset = var32c;
0005f6  9802              LDR      r0,[sp,#8]
0005f8  6130              STR      r0,[r6,#0x10]  ; Correct_Strong
;;;328    				Polar2 &= ~0x04;
0005fa  78a0              LDRB     r0,[r4,#2]  ; correct_por
0005fc  f0200004          BIC      r0,r0,#4
000600  70a0              STRB     r0,[r4,#2]
                  |L3.1538|
;;;329    			}
;;;330    //---------------------------------------------------------------------------------------//
;;;331    		  Flash_Write_all();	//??ß’?FLASH
000602  f7fffffe          BL       Flash_Write_all
;;;332    			DAC_Flag=0;
000606  2000              MOVS     r0,#0
000608  7028              STRB     r0,[r5,#0]
                  |L3.1546|
;;;333    		}
;;;334    /*************************************??ßµ?**************************************************************************/
;;;335    		if(g_tModS.RxBuf[1] == 0x07||flag_ADJ_VL==1)
00060a  49b1              LDR      r1,|L3.2256|
;;;336    		{
;;;337    			Modify_A_READ = Rmon_value;//????
00060c  4ab2              LDR      r2,|L3.2264|
00060e  7848              LDRB     r0,[r1,#1]            ;335  ; g_tModS
000610  2807              CMP      r0,#7                 ;335
000612  d003              BEQ      |L3.1564|
000614  f89b3000          LDRB     r3,[r11,#0]           ;335  ; flagF
000618  075b              LSLS     r3,r3,#29             ;335
00061a  d507              BPL      |L3.1580|
                  |L3.1564|
00061c  8813              LDRH     r3,[r2,#0]  ; Rmon_value
00061e  612b              STR      r3,[r5,#0x10]  ; Modify_A_READ
;;;338    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];//????
000620  790b              LDRB     r3,[r1,#4]  ; g_tModS
000622  f891c003          LDRB     r12,[r1,#3]  ; g_tModS
000626  eb03230c          ADD      r3,r3,r12,LSL #8
00062a  61ab              STR      r3,[r5,#0x18]  ; Modify_A_ACT
                  |L3.1580|
;;;339    		}
;;;340    		if (g_tModS.RxBuf[1] == 0x08||flag_ADJ_VH==1)			   //???ßµ???
00062c  2808              CMP      r0,#8
00062e  d003              BEQ      |L3.1592|
000630  f89b0000          LDRB     r0,[r11,#0]  ; flagF
000634  0700              LSLS     r0,r0,#28
000636  d57d              BPL      |L3.1844|
                  |L3.1592|
;;;341    		{
;;;342    			vu16 var16;
;;;343    			vu32 var32a;
;;;344    			vu32 var32b;
;;;345    			
;;;346    			vu16 var16a;
;;;347    			vu32 var32c;
;;;348    			vu32 var32d;
;;;349    			Modify_B_READ =Rmon_value;//????
000638  8810              LDRH     r0,[r2,#0]  ; Rmon_value
00063a  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;350    			flag_OverV=1;
00063c  49a7              LDR      r1,|L3.2268|
00063e  6808              LDR      r0,[r1,#0]  ; flagG
000640  f0400002          ORR      r0,r0,#2
000644  6008              STR      r0,[r1,#0]  ; flagG
;;;351    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];//????
000646  49a2              LDR      r1,|L3.2256|
000648  790a              LDRB     r2,[r1,#4]  ; g_tModS
00064a  78c9              LDRB     r1,[r1,#3]  ; g_tModS
00064c  eb022101          ADD      r1,r2,r1,LSL #8
000650  6269              STR      r1,[r5,#0x24]  ; Modify_B_ACT
;;;352    			if(flag_OverV==1)//??????ß’?????ßµ???ß’?FLASH
000652  0780              LSLS     r0,r0,#30
000654  d575              BPL      |L3.1858|
;;;353    			{
;;;354    				var32a = Modify_B_ACT;
000656  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000658  9005              STR      r0,[sp,#0x14]
;;;355    				var32a = var32a - Modify_A_ACT;
00065a  9805              LDR      r0,[sp,#0x14]
00065c  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
00065e  1a40              SUBS     r0,r0,r1
000660  9005              STR      r0,[sp,#0x14]
;;;356    				var32a = var32a << 12;
000662  9805              LDR      r0,[sp,#0x14]
000664  0300              LSLS     r0,r0,#12
000666  9005              STR      r0,[sp,#0x14]
;;;357    				var16 = Modify_B_READ - Modify_A_READ;
000668  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
00066a  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
00066c  1a40              SUBS     r0,r0,r1
00066e  9006              STR      r0,[sp,#0x18]
;;;358    				var32a = var32a / var16;
000670  f8bd1018          LDRH     r1,[sp,#0x18]
000674  9805              LDR      r0,[sp,#0x14]
000676  fbb0f0f1          UDIV     r0,r0,r1
00067a  9005              STR      r0,[sp,#0x14]
;;;359                    if(r_raly == 1)
00067c  4898              LDR      r0,|L3.2272|
00067e  7800              LDRB     r0,[r0,#0]  ; r_raly
000680  2801              CMP      r0,#1
000682  d01d              BEQ      |L3.1728|
;;;360                    {
;;;361                        REG_CorrectionR = var32a;
;;;362                        var32a=0;
;;;363                        var32a = Modify_B_ACT;
;;;364                        var32a = var32a << 12;
;;;365                        var32b = Modify_B_READ;
;;;366                        var32b = var32b * REG_CorrectionR;
;;;367                        if (var32a < var32b)
;;;368                        {
;;;369                            var32b = var32b - var32a;
;;;370                            REG_ReadR_Offset = var32b;
;;;371                            Polar3 |= 0x01;
;;;372                        }
;;;373                        else 
;;;374                        {
;;;375                            var32a = var32a - var32b;
;;;376                            REG_ReadR_Offset = var32a;
;;;377                            Polar3 &= ~0x01;
;;;378                        }
;;;379                    }else{
;;;380                        REG_CorrectionRL = var32a;
000684  9805              LDR      r0,[sp,#0x14]
000686  f8c9002c          STR      r0,[r9,#0x2c]  ; Correct_Parametet
;;;381                        var32a=0;
;;;382                        var32a = Modify_B_ACT;
00068a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00068c  9005              STR      r0,[sp,#0x14]
;;;383                        var32a = var32a << 12;
00068e  9805              LDR      r0,[sp,#0x14]
000690  0300              LSLS     r0,r0,#12
000692  9005              STR      r0,[sp,#0x14]
;;;384                        var32b = Modify_B_READ;
000694  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000696  9004              STR      r0,[sp,#0x10]
;;;385                        var32b = var32b * REG_CorrectionRL;
000698  f8d9002c          LDR      r0,[r9,#0x2c]  ; Correct_Parametet
00069c  9904              LDR      r1,[sp,#0x10]
00069e  4348              MULS     r0,r1,r0
0006a0  9004              STR      r0,[sp,#0x10]
;;;386                        if (var32a < var32b)
0006a2  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0006a6  4288              CMP      r0,r1
0006a8  d233              BCS      |L3.1810|
;;;387                        {
;;;388                            var32b = var32b - var32a;
0006aa  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0006ae  1a40              SUBS     r0,r0,r1
0006b0  9004              STR      r0,[sp,#0x10]
;;;389                            REG_ReadRL_Offset = var32b;
0006b2  9804              LDR      r0,[sp,#0x10]
0006b4  62f0              STR      r0,[r6,#0x2c]  ; Correct_Strong
;;;390                            Polar3 |= 0x01;
0006b6  78e0              LDRB     r0,[r4,#3]  ; correct_por
0006b8  f0400001          ORR      r0,r0,#1
0006bc  70e0              STRB     r0,[r4,#3]
0006be  e032              B        |L3.1830|
                  |L3.1728|
0006c0  9805              LDR      r0,[sp,#0x14]         ;361
0006c2  f8c90014          STR      r0,[r9,#0x14]         ;361  ; Correct_Parametet
0006c6  6a68              LDR      r0,[r5,#0x24]         ;363  ; Modify_B_ACT
0006c8  9005              STR      r0,[sp,#0x14]         ;363
0006ca  9805              LDR      r0,[sp,#0x14]         ;364
0006cc  0300              LSLS     r0,r0,#12             ;364
0006ce  9005              STR      r0,[sp,#0x14]         ;364
0006d0  69e8              LDR      r0,[r5,#0x1c]         ;365  ; Modify_B_READ
0006d2  9004              STR      r0,[sp,#0x10]         ;365
0006d4  f8d90014          LDR      r0,[r9,#0x14]         ;366  ; Correct_Parametet
0006d8  9904              LDR      r1,[sp,#0x10]         ;366
0006da  4348              MULS     r0,r1,r0              ;366
0006dc  9004              STR      r0,[sp,#0x10]         ;366
0006de  e9dd1004          LDRD     r1,r0,[sp,#0x10]      ;367
0006e2  4288              CMP      r0,r1                 ;367
0006e4  d20a              BCS      |L3.1788|
0006e6  e9dd0104          LDRD     r0,r1,[sp,#0x10]      ;369
0006ea  1a40              SUBS     r0,r0,r1              ;369
0006ec  9004              STR      r0,[sp,#0x10]         ;369
0006ee  9804              LDR      r0,[sp,#0x10]         ;370
0006f0  6170              STR      r0,[r6,#0x14]         ;370  ; Correct_Strong
0006f2  78e0              LDRB     r0,[r4,#3]            ;371  ; correct_por
0006f4  f0400001          ORR      r0,r0,#1              ;371
0006f8  70e0              STRB     r0,[r4,#3]            ;371
0006fa  e014              B        |L3.1830|
                  |L3.1788|
0006fc  e9dd1004          LDRD     r1,r0,[sp,#0x10]      ;375
000700  1a40              SUBS     r0,r0,r1              ;375
000702  9005              STR      r0,[sp,#0x14]         ;375
000704  9805              LDR      r0,[sp,#0x14]         ;376
000706  6170              STR      r0,[r6,#0x14]         ;376  ; Correct_Strong
000708  78e0              LDRB     r0,[r4,#3]            ;377  ; correct_por
00070a  f0200001          BIC      r0,r0,#1              ;377
00070e  70e0              STRB     r0,[r4,#3]            ;377
000710  e009              B        |L3.1830|
                  |L3.1810|
;;;391                        }
;;;392                        else 
;;;393                        {
;;;394                            var32a = var32a - var32b;
000712  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000716  1a40              SUBS     r0,r0,r1
000718  9005              STR      r0,[sp,#0x14]
;;;395                            REG_ReadR_Offset = var32a;
00071a  9805              LDR      r0,[sp,#0x14]
00071c  6170              STR      r0,[r6,#0x14]  ; Correct_Strong
;;;396                            Polar3 &= ~0x01;
00071e  78e0              LDRB     r0,[r4,#3]  ; correct_por
000720  f0200001          BIC      r0,r0,#1
000724  70e0              STRB     r0,[r4,#3]
                  |L3.1830|
;;;397                        }
;;;398                    }
;;;399    	//---------------------------------------------------------------------------------------//
;;;400    				Flash_Write_all();	//??ß’?FLASH
000726  f7fffffe          BL       Flash_Write_all
;;;401    				flag_OverV=0;
00072a  486c              LDR      r0,|L3.2268|
00072c  6801              LDR      r1,[r0,#0]  ; flagG
00072e  f0210102          BIC      r1,r1,#2
000732  e001              B        |L3.1848|
                  |L3.1844|
000734  e00b              B        |L3.1870|
000736  e004              B        |L3.1858|
                  |L3.1848|
000738  6001              STR      r1,[r0,#0]  ; flagG
;;;402    				Flag_DAC_OFF=0;
00073a  6838              LDR      r0,[r7,#0]  ; flagB
00073c  f0200008          BIC      r0,r0,#8
000740  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.1858|
;;;403    			}
;;;404    			flag_ADJ_VH=0;//????¶À??????
000742  f8db0000          LDR      r0,[r11,#0]  ; flagF
000746  f0200008          BIC      r0,r0,#8
00074a  f8cb0000          STR      r0,[r11,#0]  ; flagF
                  |L3.1870|
;;;405    		}		
;;;406    /*******************************??CC???°§????ßµ?******************************************/	
;;;407    		if (g_tModS.RxBuf[1] == 0x09||flag_ADJ_ALCC==1)			   //?°§?ßµ?
00074e  4960              LDR      r1,|L3.2256|
000750  7848              LDRB     r0,[r1,#1]  ; g_tModS
000752  2809              CMP      r0,#9
000754  d003              BEQ      |L3.1886|
000756  f89b2000          LDRB     r2,[r11,#0]  ; flagF
00075a  06d2              LSLS     r2,r2,#27
00075c  d50a              BPL      |L3.1908|
                  |L3.1886|
;;;408    		{
;;;409    			Modify_A_READ = Imon_value;//??°§
00075e  4a61              LDR      r2,|L3.2276|
000760  8812              LDRH     r2,[r2,#0]  ; Imon_value
000762  612a              STR      r2,[r5,#0x10]  ; Modify_A_READ
;;;410    			Modify_C_READ = Contr_Current;//???°§
000764  4a60              LDR      r2,|L3.2280|
000766  8812              LDRH     r2,[r2,#0]  ; Contr_Current
000768  616a              STR      r2,[r5,#0x14]  ; Modify_C_READ
;;;411    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
00076a  790a              LDRB     r2,[r1,#4]  ; g_tModS
00076c  78cb              LDRB     r3,[r1,#3]  ; g_tModS
00076e  eb022203          ADD      r2,r2,r3,LSL #8
000772  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
                  |L3.1908|
;;;412    		}
;;;413    
;;;414    		if (g_tModS.RxBuf[1] == 0x0A||flag_ADJ_AHCC==1)			   //?°§?ßµ???
000774  280a              CMP      r0,#0xa
000776  d003              BEQ      |L3.1920|
000778  f89b0000          LDRB     r0,[r11,#0]  ; flagF
00077c  0680              LSLS     r0,r0,#26
00077e  d57c              BPL      |L3.2170|
                  |L3.1920|
;;;415    		{
;;;416    			vu16 var16;
;;;417    			vu32 var32a;
;;;418    			vu32 var32b;
;;;419    			
;;;420    			vu16 var16a;
;;;421    			vu32 var32c;
;;;422    			vu32 var32d;
;;;423    			
;;;424    			Modify_D_READ = Contr_Current;
000780  4859              LDR      r0,|L3.2280|
000782  8800              LDRH     r0,[r0,#0]  ; Contr_Current
000784  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;425    			Modify_B_READ = Imon_value;
000786  4857              LDR      r0,|L3.2276|
000788  8800              LDRH     r0,[r0,#0]  ; Imon_value
00078a  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;426    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
00078c  4850              LDR      r0,|L3.2256|
00078e  7901              LDRB     r1,[r0,#4]  ; g_tModS
000790  78c0              LDRB     r0,[r0,#3]  ; g_tModS
000792  eb012000          ADD      r0,r1,r0,LSL #8
000796  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;427    			var32a = Modify_B_ACT;
000798  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00079a  9005              STR      r0,[sp,#0x14]
;;;428    			var32a = var32a - Modify_A_ACT;
00079c  9805              LDR      r0,[sp,#0x14]
00079e  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
0007a0  1a40              SUBS     r0,r0,r1
0007a2  9005              STR      r0,[sp,#0x14]
;;;429    			var32a = var32a << 14;
0007a4  9805              LDR      r0,[sp,#0x14]
0007a6  0380              LSLS     r0,r0,#14
0007a8  9005              STR      r0,[sp,#0x14]
;;;430    			var16 = Modify_B_READ - Modify_A_READ;
0007aa  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
0007ac  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
0007ae  1a40              SUBS     r0,r0,r1
0007b0  9006              STR      r0,[sp,#0x18]
;;;431    			var32a = var32a / var16;
0007b2  f8bd1018          LDRH     r1,[sp,#0x18]
0007b6  9805              LDR      r0,[sp,#0x14]
0007b8  fbb0f0f1          UDIV     r0,r0,r1
0007bc  9005              STR      r0,[sp,#0x14]
;;;432    			REG_POWERA = var32a;
0007be  9805              LDR      r0,[sp,#0x14]
0007c0  f8c90018          STR      r0,[r9,#0x18]  ; Correct_Parametet
;;;433    			var32a = Modify_B_ACT;
0007c4  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0007c6  9005              STR      r0,[sp,#0x14]
;;;434    			var32a = var32a << 14;
0007c8  9805              LDR      r0,[sp,#0x14]
0007ca  0380              LSLS     r0,r0,#14
0007cc  9005              STR      r0,[sp,#0x14]
;;;435    			var32b = Modify_B_READ;
0007ce  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
0007d0  9004              STR      r0,[sp,#0x10]
;;;436    			var32b = var32b * REG_POWERA;
0007d2  f8d90018          LDR      r0,[r9,#0x18]  ; Correct_Parametet
0007d6  9904              LDR      r1,[sp,#0x10]
0007d8  4348              MULS     r0,r1,r0
0007da  9004              STR      r0,[sp,#0x10]
;;;437    			if (var32a < var32b)
0007dc  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0007e0  4281              CMP      r1,r0
0007e2  d20a              BCS      |L3.2042|
;;;438    			{
;;;439    				var32b = var32b - var32a;
0007e4  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0007e8  1a40              SUBS     r0,r0,r1
0007ea  9004              STR      r0,[sp,#0x10]
;;;440    				REG_POWERA_Offset = var32b;
0007ec  9804              LDR      r0,[sp,#0x10]
0007ee  61b0              STR      r0,[r6,#0x18]  ; Correct_Strong
;;;441    				Polar4 |= 0x01;
0007f0  7920              LDRB     r0,[r4,#4]  ; correct_por
0007f2  f0400001          ORR      r0,r0,#1
0007f6  7120              STRB     r0,[r4,#4]
0007f8  e009              B        |L3.2062|
                  |L3.2042|
;;;442    			}
;;;443    			else 
;;;444    			{
;;;445    				var32a = var32a - var32b;
0007fa  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0007fe  1a40              SUBS     r0,r0,r1
000800  9005              STR      r0,[sp,#0x14]
;;;446    				REG_POWERA_Offset = var32a;
000802  9805              LDR      r0,[sp,#0x14]
000804  61b0              STR      r0,[r6,#0x18]  ; Correct_Strong
;;;447    				Polar4 &= ~0x01;					//?°§????°Í?ßµ???
000806  7920              LDRB     r0,[r4,#4]  ; correct_por
000808  f0200001          BIC      r0,r0,#1
00080c  7120              STRB     r0,[r4,#4]
                  |L3.2062|
;;;448    			}
;;;449    	//---------------------------------------------------------------------------------//
;;;450    			var32c = Modify_B_ACT; //???°§ßµ?
00080e  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000810  9002              STR      r0,[sp,#8]
;;;451    			var32c = var32c - Modify_A_ACT;
000812  9802              LDR      r0,[sp,#8]
000814  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000816  1a40              SUBS     r0,r0,r1
000818  9002              STR      r0,[sp,#8]
;;;452    			var32c = var32c << 14;
00081a  9802              LDR      r0,[sp,#8]
00081c  0380              LSLS     r0,r0,#14
00081e  9002              STR      r0,[sp,#8]
;;;453    			var16a=Modify_D_READ-Modify_C_READ;
000820  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
000822  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000824  1a40              SUBS     r0,r0,r1
000826  9003              STR      r0,[sp,#0xc]
;;;454    			var16a=var16a*2;
000828  f8bd100c          LDRH     r1,[sp,#0xc]
00082c  f64f70ff          MOV      r0,#0xffff
000830  ea000041          AND      r0,r0,r1,LSL #1
000834  9003              STR      r0,[sp,#0xc]
;;;455    			var32c=var32c/var16a;
000836  f8bd100c          LDRH     r1,[sp,#0xc]
00083a  9802              LDR      r0,[sp,#8]
00083c  fbb0f0f1          UDIV     r0,r0,r1
000840  9002              STR      r0,[sp,#8]
;;;456    			SET_POWERA = var32c;
000842  9802              LDR      r0,[sp,#8]
000844  f8c9001c          STR      r0,[r9,#0x1c]  ; Correct_Parametet
;;;457    			var32c = Modify_B_ACT;
000848  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00084a  9002              STR      r0,[sp,#8]
;;;458    			var32c = var32c << 14;
00084c  9802              LDR      r0,[sp,#8]
00084e  0380              LSLS     r0,r0,#14
000850  9002              STR      r0,[sp,#8]
;;;459    			var32d = SET_POWERA;
000852  f8d9001c          LDR      r0,[r9,#0x1c]  ; Correct_Parametet
000856  9001              STR      r0,[sp,#4]
;;;460    			var32d = var32d * (Modify_D_READ*2);
000858  9801              LDR      r0,[sp,#4]
00085a  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
00085c  4348              MULS     r0,r1,r0
00085e  0040              LSLS     r0,r0,#1
000860  9001              STR      r0,[sp,#4]
;;;461    			if (var32c < var32d)
000862  e9dd1001          LDRD     r1,r0,[sp,#4]
000866  4288              CMP      r0,r1
000868  d20c              BCS      |L3.2180|
;;;462    			{
;;;463    				var32d = var32d - var32c;
00086a  e9dd0101          LDRD     r0,r1,[sp,#4]
00086e  1a40              SUBS     r0,r0,r1
000870  9001              STR      r0,[sp,#4]
;;;464    				SET_POWERA_Offset = var32d;
000872  9801              LDR      r0,[sp,#4]
000874  61f0              STR      r0,[r6,#0x1c]  ; Correct_Strong
;;;465    				Polar4 |= 0x04;
000876  7920              LDRB     r0,[r4,#4]  ; correct_por
000878  e000              B        |L3.2172|
                  |L3.2170|
00087a  e013              B        |L3.2212|
                  |L3.2172|
00087c  f0400004          ORR      r0,r0,#4
000880  7120              STRB     r0,[r4,#4]
000882  e009              B        |L3.2200|
                  |L3.2180|
;;;466    			}
;;;467    			else 
;;;468    			{
;;;469    				var32c = var32c - var32d;
000884  e9dd1001          LDRD     r1,r0,[sp,#4]
000888  1a40              SUBS     r0,r0,r1
00088a  9002              STR      r0,[sp,#8]
;;;470    				SET_POWERA_Offset = var32c;
00088c  9802              LDR      r0,[sp,#8]
00088e  61f0              STR      r0,[r6,#0x1c]  ; Correct_Strong
;;;471    				Polar4 &= ~0x04;
000890  7920              LDRB     r0,[r4,#4]  ; correct_por
000892  f0200004          BIC      r0,r0,#4
000896  7120              STRB     r0,[r4,#4]
                  |L3.2200|
;;;472    			}
;;;473    			Flash_Write_all ();	
000898  f7fffffe          BL       Flash_Write_all
;;;474    			Flag_DAC_OFF=0;
00089c  6838              LDR      r0,[r7,#0]  ; flagB
00089e  f0200008          BIC      r0,r0,#8
0008a2  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.2212|
;;;475    		}
;;;476    /*******************************????????ßµ?******************************************/	
;;;477    		if (g_tModS.RxBuf[1] == 0x0B)			   //?°§?ßµ?
0008a4  490a              LDR      r1,|L3.2256|
0008a6  7848              LDRB     r0,[r1,#1]  ; g_tModS
0008a8  280b              CMP      r0,#0xb
0008aa  d10a              BNE      |L3.2242|
;;;478    		{
;;;479    			Modify_A_READ = Vmon_value;//??d
0008ac  4a0f              LDR      r2,|L3.2284|
0008ae  8812              LDRH     r2,[r2,#0]  ; Vmon_value
0008b0  612a              STR      r2,[r5,#0x10]  ; Modify_A_READ
;;;480    			Modify_C_READ = Contr_Voltage;//???d
0008b2  4a0f              LDR      r2,|L3.2288|
0008b4  8812              LDRH     r2,[r2,#0]  ; Contr_Voltage
0008b6  616a              STR      r2,[r5,#0x14]  ; Modify_C_READ
;;;481    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
0008b8  790a              LDRB     r2,[r1,#4]  ; g_tModS
0008ba  78cb              LDRB     r3,[r1,#3]  ; g_tModS
0008bc  eb022203          ADD      r2,r2,r3,LSL #8
0008c0  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
                  |L3.2242|
;;;482    		}
;;;483    
;;;484    		if (g_tModS.RxBuf[1] == 0x0C)			   //?°§?ßµ???
0008c2  280c              CMP      r0,#0xc
0008c4  d17e              BNE      |L3.2500|
;;;485    		{
;;;486    			vu16 var16;
;;;487    			vu32 var32a;
;;;488    			vu32 var32b;
;;;489    			
;;;490    			vu16 var16a;
;;;491    			vu32 var32c;
;;;492    			vu32 var32d;
;;;493    			
;;;494    			Modify_D_READ = Contr_Voltage;
0008c6  480a              LDR      r0,|L3.2288|
0008c8  8800              LDRH     r0,[r0,#0]  ; Contr_Voltage
0008ca  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;495    			Modify_B_READ = Vmon_value;
0008cc  4807              LDR      r0,|L3.2284|
0008ce  e011              B        |L3.2292|
                  |L3.2256|
                          DCD      g_tModS
                  |L3.2260|
                          DCD      Vmon1_value
                  |L3.2264|
                          DCD      Rmon_value
                  |L3.2268|
                          DCD      flagG
                  |L3.2272|
                          DCD      r_raly
                  |L3.2276|
                          DCD      Imon_value
                  |L3.2280|
                          DCD      Contr_Current
                  |L3.2284|
                          DCD      Vmon_value
                  |L3.2288|
                          DCD      Contr_Voltage
                  |L3.2292|
0008f4  8800              LDRH     r0,[r0,#0]  ; Vmon_value
0008f6  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;496    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
0008f8  48fe              LDR      r0,|L3.3316|
0008fa  7901              LDRB     r1,[r0,#4]  ; g_tModS
0008fc  78c0              LDRB     r0,[r0,#3]  ; g_tModS
0008fe  eb012000          ADD      r0,r1,r0,LSL #8
000902  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;497    			var32a = Modify_B_ACT;
000904  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000906  9005              STR      r0,[sp,#0x14]
;;;498    			var32a = var32a - Modify_A_ACT;
000908  9805              LDR      r0,[sp,#0x14]
00090a  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
00090c  1a40              SUBS     r0,r0,r1
00090e  9005              STR      r0,[sp,#0x14]
;;;499    			var32a = var32a << 14;
000910  9805              LDR      r0,[sp,#0x14]
000912  0380              LSLS     r0,r0,#14
000914  9005              STR      r0,[sp,#0x14]
;;;500    			var16 = Modify_B_READ - Modify_A_READ;
000916  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000918  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
00091a  1a40              SUBS     r0,r0,r1
00091c  9006              STR      r0,[sp,#0x18]
;;;501    			var32a = var32a / var16;
00091e  f8bd1018          LDRH     r1,[sp,#0x18]
000922  9805              LDR      r0,[sp,#0x14]
000924  fbb0f0f1          UDIV     r0,r0,r1
000928  9005              STR      r0,[sp,#0x14]
;;;502    			REG_POWERV = var32a;
00092a  9805              LDR      r0,[sp,#0x14]
00092c  f8c90020          STR      r0,[r9,#0x20]  ; Correct_Parametet
;;;503    			var32a = Modify_B_ACT;
000930  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000932  9005              STR      r0,[sp,#0x14]
;;;504    			var32a = var32a << 14;
000934  9805              LDR      r0,[sp,#0x14]
000936  0380              LSLS     r0,r0,#14
000938  9005              STR      r0,[sp,#0x14]
;;;505    			var32b = Modify_B_READ;
00093a  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
00093c  9004              STR      r0,[sp,#0x10]
;;;506    			var32b = var32b * REG_POWERV;
00093e  f8d90020          LDR      r0,[r9,#0x20]  ; Correct_Parametet
000942  9904              LDR      r1,[sp,#0x10]
000944  4348              MULS     r0,r1,r0
000946  9004              STR      r0,[sp,#0x10]
;;;507    			if (var32a < var32b)
000948  e9dd1004          LDRD     r1,r0,[sp,#0x10]
00094c  4288              CMP      r0,r1
00094e  d20a              BCS      |L3.2406|
;;;508    			{
;;;509    				var32b = var32b - var32a;
000950  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000954  1a40              SUBS     r0,r0,r1
000956  9004              STR      r0,[sp,#0x10]
;;;510    				REG_POWERV_Offset = var32b;
000958  9804              LDR      r0,[sp,#0x10]
00095a  6230              STR      r0,[r6,#0x20]  ; Correct_Strong
;;;511    				Polar5 |= 0x01;
00095c  7960              LDRB     r0,[r4,#5]  ; correct_por
00095e  f0400001          ORR      r0,r0,#1
000962  7160              STRB     r0,[r4,#5]
000964  e009              B        |L3.2426|
                  |L3.2406|
;;;512    			}
;;;513    			else 
;;;514    			{
;;;515    				var32a = var32a - var32b;
000966  e9dd1004          LDRD     r1,r0,[sp,#0x10]
00096a  1a40              SUBS     r0,r0,r1
00096c  9005              STR      r0,[sp,#0x14]
;;;516    				REG_POWERV_Offset = var32a;
00096e  9805              LDR      r0,[sp,#0x14]
000970  6230              STR      r0,[r6,#0x20]  ; Correct_Strong
;;;517    				Polar5 &= ~0x01;					
000972  7960              LDRB     r0,[r4,#5]  ; correct_por
000974  f0200001          BIC      r0,r0,#1
000978  7160              STRB     r0,[r4,#5]
                  |L3.2426|
;;;518    			}
;;;519    	//---------------------------------------------------------------------------------//
;;;520    			var32c = Modify_B_ACT; //????ßµ?
00097a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
00097c  9002              STR      r0,[sp,#8]
;;;521    			var32c = var32c - Modify_A_ACT;
00097e  9802              LDR      r0,[sp,#8]
000980  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000982  1a40              SUBS     r0,r0,r1
000984  9002              STR      r0,[sp,#8]
;;;522    			var32c = var32c << 14;
000986  9802              LDR      r0,[sp,#8]
000988  0380              LSLS     r0,r0,#14
00098a  9002              STR      r0,[sp,#8]
;;;523    			var16a=Modify_D_READ-Modify_C_READ;
00098c  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
00098e  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000990  1a40              SUBS     r0,r0,r1
000992  9003              STR      r0,[sp,#0xc]
;;;524    			var16a=var16a*2;
000994  f8bd100c          LDRH     r1,[sp,#0xc]
000998  f64f70ff          MOV      r0,#0xffff
00099c  ea000041          AND      r0,r0,r1,LSL #1
0009a0  9003              STR      r0,[sp,#0xc]
;;;525    			var32c=var32c/var16a;
0009a2  f8bd100c          LDRH     r1,[sp,#0xc]
0009a6  9802              LDR      r0,[sp,#8]
0009a8  fbb0f0f1          UDIV     r0,r0,r1
0009ac  9002              STR      r0,[sp,#8]
;;;526    			SET_POWERV = var32c;
0009ae  9802              LDR      r0,[sp,#8]
0009b0  f8c90024          STR      r0,[r9,#0x24]  ; Correct_Parametet
;;;527    			var32c = Modify_B_ACT;
0009b4  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0009b6  9002              STR      r0,[sp,#8]
;;;528    			var32c = var32c << 14;
0009b8  9802              LDR      r0,[sp,#8]
0009ba  0380              LSLS     r0,r0,#14
0009bc  9002              STR      r0,[sp,#8]
;;;529    			var32d = SET_POWERV;
0009be  f8d90024          LDR      r0,[r9,#0x24]  ; Correct_Parametet
0009c2  e000              B        |L3.2502|
                  |L3.2500|
0009c4  e024              B        |L3.2576|
                  |L3.2502|
0009c6  9001              STR      r0,[sp,#4]
;;;530    			var32d = var32d * (Modify_D_READ*2);
0009c8  9801              LDR      r0,[sp,#4]
0009ca  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
0009cc  4348              MULS     r0,r1,r0
0009ce  0040              LSLS     r0,r0,#1
0009d0  9001              STR      r0,[sp,#4]
;;;531    			if (var32c < var32d)
0009d2  e9dd0101          LDRD     r0,r1,[sp,#4]
0009d6  4281              CMP      r1,r0
0009d8  d20a              BCS      |L3.2544|
;;;532    			{
;;;533    				var32d = var32d - var32c;
0009da  e9dd0101          LDRD     r0,r1,[sp,#4]
0009de  1a40              SUBS     r0,r0,r1
0009e0  9001              STR      r0,[sp,#4]
;;;534    				SET_POWERV_Offset = var32d;
0009e2  9801              LDR      r0,[sp,#4]
0009e4  6270              STR      r0,[r6,#0x24]  ; Correct_Strong
;;;535    				Polar5 |= 0x04;
0009e6  7960              LDRB     r0,[r4,#5]  ; correct_por
0009e8  f0400004          ORR      r0,r0,#4
0009ec  7160              STRB     r0,[r4,#5]
0009ee  e009              B        |L3.2564|
                  |L3.2544|
;;;536    			}
;;;537    			else 
;;;538    			{
;;;539    				var32c = var32c - var32d;
0009f0  e9dd1001          LDRD     r1,r0,[sp,#4]
0009f4  1a40              SUBS     r0,r0,r1
0009f6  9002              STR      r0,[sp,#8]
;;;540    				SET_POWERV_Offset = var32c;
0009f8  9802              LDR      r0,[sp,#8]
0009fa  6270              STR      r0,[r6,#0x24]  ; Correct_Strong
;;;541    				Polar5 &= ~0x04;
0009fc  7960              LDRB     r0,[r4,#5]  ; correct_por
0009fe  f0200004          BIC      r0,r0,#4
000a02  7160              STRB     r0,[r4,#5]
                  |L3.2564|
;;;542    			}
;;;543    			Flash_Write_all ();	
000a04  f7fffffe          BL       Flash_Write_all
;;;544    			Flag_DAC_OFF=0;
000a08  6838              LDR      r0,[r7,#0]  ; flagB
000a0a  f0200008          BIC      r0,r0,#8
000a0e  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.2576|
;;;545    		}
;;;546    /*******************************????????ßµ?******************************************/	
;;;547    		if (g_tModS.RxBuf[1] == 0x22)			   //?°§?ßµ?
000a10  49b8              LDR      r1,|L3.3316|
000a12  7848              LDRB     r0,[r1,#1]  ; g_tModS
000a14  2822              CMP      r0,#0x22
000a16  d10a              BNE      |L3.2606|
;;;548    		{
;;;549    			Modify_A_READ = Vmon_value;//??d
000a18  4ab7              LDR      r2,|L3.3320|
000a1a  8812              LDRH     r2,[r2,#0]  ; Vmon_value
000a1c  612a              STR      r2,[r5,#0x10]  ; Modify_A_READ
;;;550    			Modify_C_READ = Contr_Voltage;//???d
000a1e  4ab7              LDR      r2,|L3.3324|
000a20  8812              LDRH     r2,[r2,#0]  ; Contr_Voltage
000a22  616a              STR      r2,[r5,#0x14]  ; Modify_C_READ
;;;551    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000a24  790a              LDRB     r2,[r1,#4]  ; g_tModS
000a26  78cb              LDRB     r3,[r1,#3]  ; g_tModS
000a28  eb022203          ADD      r2,r2,r3,LSL #8
000a2c  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
                  |L3.2606|
;;;552    		}
;;;553    
;;;554    		if (g_tModS.RxBuf[1] == 0x23)			   //?°§?ßµ???
000a2e  2823              CMP      r0,#0x23
000a30  d17e              BNE      |L3.2864|
;;;555    		{
;;;556    			vu16 var16;
;;;557    			vu32 var32a;
;;;558    			vu32 var32b;
;;;559    			
;;;560    			vu16 var16a;
;;;561    			vu32 var32c;
;;;562    			vu32 var32d;
;;;563    			
;;;564    			Modify_D_READ = Contr_Voltage;
000a32  48b2              LDR      r0,|L3.3324|
000a34  8800              LDRH     r0,[r0,#0]  ; Contr_Voltage
000a36  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;565    			Modify_B_READ = Vmon_value;
000a38  48af              LDR      r0,|L3.3320|
000a3a  8800              LDRH     r0,[r0,#0]  ; Vmon_value
000a3c  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;566    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000a3e  48ad              LDR      r0,|L3.3316|
000a40  7901              LDRB     r1,[r0,#4]  ; g_tModS
000a42  78c0              LDRB     r0,[r0,#3]  ; g_tModS
000a44  eb012000          ADD      r0,r1,r0,LSL #8
000a48  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;567    			var32a = Modify_B_ACT;
000a4a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000a4c  9005              STR      r0,[sp,#0x14]
;;;568    			var32a = var32a - Modify_A_ACT;
000a4e  9805              LDR      r0,[sp,#0x14]
000a50  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000a52  1a40              SUBS     r0,r0,r1
000a54  9005              STR      r0,[sp,#0x14]
;;;569    			var32a = var32a << 14;
000a56  9805              LDR      r0,[sp,#0x14]
000a58  0380              LSLS     r0,r0,#14
000a5a  9005              STR      r0,[sp,#0x14]
;;;570    			var16 = Modify_B_READ - Modify_A_READ;
000a5c  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000a5e  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
000a60  1a40              SUBS     r0,r0,r1
000a62  9006              STR      r0,[sp,#0x18]
;;;571    			var32a = var32a / var16;
000a64  f8bd1018          LDRH     r1,[sp,#0x18]
000a68  9805              LDR      r0,[sp,#0x14]
000a6a  fbb0f0f1          UDIV     r0,r0,r1
000a6e  9005              STR      r0,[sp,#0x14]
;;;572    			REG_POWERV1 = var32a;
000a70  9805              LDR      r0,[sp,#0x14]
000a72  f8c9003c          STR      r0,[r9,#0x3c]  ; Correct_Parametet
;;;573    			var32a = Modify_B_ACT;
000a76  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000a78  9005              STR      r0,[sp,#0x14]
;;;574    			var32a = var32a << 14;
000a7a  9805              LDR      r0,[sp,#0x14]
000a7c  0380              LSLS     r0,r0,#14
000a7e  9005              STR      r0,[sp,#0x14]
;;;575    			var32b = Modify_B_READ;
000a80  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000a82  9004              STR      r0,[sp,#0x10]
;;;576    			var32b = var32b * REG_POWERV1;
000a84  f8d9003c          LDR      r0,[r9,#0x3c]  ; Correct_Parametet
000a88  9904              LDR      r1,[sp,#0x10]
000a8a  4348              MULS     r0,r1,r0
000a8c  9004              STR      r0,[sp,#0x10]
;;;577    			if (var32a < var32b)
000a8e  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000a92  4288              CMP      r0,r1
000a94  d20a              BCS      |L3.2732|
;;;578    			{
;;;579    				var32b = var32b - var32a;
000a96  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000a9a  1a40              SUBS     r0,r0,r1
000a9c  9004              STR      r0,[sp,#0x10]
;;;580    				REG_POWERV_Offset1 = var32b;
000a9e  9804              LDR      r0,[sp,#0x10]
000aa0  63f0              STR      r0,[r6,#0x3c]  ; Correct_Strong
;;;581    				Polar5 |= 0x01;
000aa2  7960              LDRB     r0,[r4,#5]  ; correct_por
000aa4  f0400001          ORR      r0,r0,#1
000aa8  7160              STRB     r0,[r4,#5]
000aaa  e009              B        |L3.2752|
                  |L3.2732|
;;;582    			}
;;;583    			else 
;;;584    			{
;;;585    				var32a = var32a - var32b;
000aac  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000ab0  1a40              SUBS     r0,r0,r1
000ab2  9005              STR      r0,[sp,#0x14]
;;;586    				REG_POWERV_Offset1 = var32a;
000ab4  9805              LDR      r0,[sp,#0x14]
000ab6  63f0              STR      r0,[r6,#0x3c]  ; Correct_Strong
;;;587    				Polar5 &= ~0x01;					
000ab8  7960              LDRB     r0,[r4,#5]  ; correct_por
000aba  f0200001          BIC      r0,r0,#1
000abe  7160              STRB     r0,[r4,#5]
                  |L3.2752|
;;;588    			}
;;;589    	//---------------------------------------------------------------------------------//
;;;590    			var32c = Modify_B_ACT; //????ßµ?
000ac0  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000ac2  9002              STR      r0,[sp,#8]
;;;591    			var32c = var32c - Modify_A_ACT;
000ac4  9802              LDR      r0,[sp,#8]
000ac6  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000ac8  1a40              SUBS     r0,r0,r1
000aca  9002              STR      r0,[sp,#8]
;;;592    			var32c = var32c << 14;
000acc  9802              LDR      r0,[sp,#8]
000ace  0380              LSLS     r0,r0,#14
000ad0  9002              STR      r0,[sp,#8]
;;;593    			var16a=Modify_D_READ-Modify_C_READ;
000ad2  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
000ad4  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000ad6  1a40              SUBS     r0,r0,r1
000ad8  9003              STR      r0,[sp,#0xc]
;;;594    			var16a=var16a*2;
000ada  f8bd100c          LDRH     r1,[sp,#0xc]
000ade  f64f70ff          MOV      r0,#0xffff
000ae2  ea000041          AND      r0,r0,r1,LSL #1
000ae6  9003              STR      r0,[sp,#0xc]
;;;595    			var32c=var32c/var16a;
000ae8  f8bd100c          LDRH     r1,[sp,#0xc]
000aec  9802              LDR      r0,[sp,#8]
000aee  fbb0f0f1          UDIV     r0,r0,r1
000af2  9002              STR      r0,[sp,#8]
;;;596    			SET_POWERV1 = var32c;
000af4  9802              LDR      r0,[sp,#8]
000af6  f8c9004c          STR      r0,[r9,#0x4c]  ; Correct_Parametet
;;;597    			var32c = Modify_B_ACT;
000afa  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000afc  9002              STR      r0,[sp,#8]
;;;598    			var32c = var32c << 14;
000afe  9802              LDR      r0,[sp,#8]
000b00  0380              LSLS     r0,r0,#14
000b02  9002              STR      r0,[sp,#8]
;;;599    			var32d = SET_POWERV1;
000b04  f8d9004c          LDR      r0,[r9,#0x4c]  ; Correct_Parametet
000b08  9001              STR      r0,[sp,#4]
;;;600    			var32d = var32d * (Modify_D_READ*2);
000b0a  9801              LDR      r0,[sp,#4]
000b0c  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
000b0e  4348              MULS     r0,r1,r0
000b10  0040              LSLS     r0,r0,#1
000b12  9001              STR      r0,[sp,#4]
;;;601    			if (var32c < var32d)
000b14  e9dd1001          LDRD     r1,r0,[sp,#4]
000b18  4288              CMP      r0,r1
000b1a  d20c              BCS      |L3.2870|
;;;602    			{
;;;603    				var32d = var32d - var32c;
000b1c  e9dd0101          LDRD     r0,r1,[sp,#4]
000b20  1a40              SUBS     r0,r0,r1
000b22  9001              STR      r0,[sp,#4]
;;;604    				SET_POWERV_Offset1 = var32d;
000b24  9801              LDR      r0,[sp,#4]
000b26  64f0              STR      r0,[r6,#0x4c]  ; Correct_Strong
;;;605    				Polar5 |= 0x04;
000b28  7960              LDRB     r0,[r4,#5]  ; correct_por
000b2a  f0400004          ORR      r0,r0,#4
000b2e  e000              B        |L3.2866|
                  |L3.2864|
000b30  e011              B        |L3.2902|
                  |L3.2866|
000b32  7160              STRB     r0,[r4,#5]
000b34  e009              B        |L3.2890|
                  |L3.2870|
;;;606    			}
;;;607    			else 
;;;608    			{
;;;609    				var32c = var32c - var32d;
000b36  e9dd1001          LDRD     r1,r0,[sp,#4]
000b3a  1a40              SUBS     r0,r0,r1
000b3c  9002              STR      r0,[sp,#8]
;;;610    				SET_POWERV_Offset1 = var32c;
000b3e  9802              LDR      r0,[sp,#8]
000b40  64f0              STR      r0,[r6,#0x4c]  ; Correct_Strong
;;;611    				Polar5 &= ~0x04;
000b42  7960              LDRB     r0,[r4,#5]  ; correct_por
000b44  f0200004          BIC      r0,r0,#4
000b48  7160              STRB     r0,[r4,#5]
                  |L3.2890|
;;;612    			}
;;;613    			Flash_Write_all ();	
000b4a  f7fffffe          BL       Flash_Write_all
;;;614    			Flag_DAC_OFF=0;
000b4e  6838              LDR      r0,[r7,#0]  ; flagB
000b50  f0200008          BIC      r0,r0,#8
000b54  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.2902|
;;;615    		}
;;;616    /*******************************????????ßµ?******************************************/	
;;;617    		if (g_tModS.RxBuf[1] == 0x24)			   //?°§?ßµ?
000b56  4967              LDR      r1,|L3.3316|
000b58  7848              LDRB     r0,[r1,#1]  ; g_tModS
000b5a  2824              CMP      r0,#0x24
000b5c  d10a              BNE      |L3.2932|
;;;618    		{
;;;619    			Modify_A_READ = Vmon_value;//??d
000b5e  4a66              LDR      r2,|L3.3320|
000b60  8812              LDRH     r2,[r2,#0]  ; Vmon_value
000b62  612a              STR      r2,[r5,#0x10]  ; Modify_A_READ
;;;620    			Modify_C_READ = Contr_Voltage;//???d
000b64  4a65              LDR      r2,|L3.3324|
000b66  8812              LDRH     r2,[r2,#0]  ; Contr_Voltage
000b68  616a              STR      r2,[r5,#0x14]  ; Modify_C_READ
;;;621    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000b6a  790a              LDRB     r2,[r1,#4]  ; g_tModS
000b6c  78cb              LDRB     r3,[r1,#3]  ; g_tModS
000b6e  eb022203          ADD      r2,r2,r3,LSL #8
000b72  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
                  |L3.2932|
;;;622    		}
;;;623    
;;;624    		if (g_tModS.RxBuf[1] == 0x25)			   //?°§?ßµ???
000b74  2825              CMP      r0,#0x25
000b76  d17d              BNE      |L3.3188|
;;;625    		{
;;;626    			vu16 var16;
;;;627    			vu32 var32a;
;;;628    			vu32 var32b;
;;;629    			
;;;630    			vu16 var16a;
;;;631    			vu32 var32c;
;;;632    			vu32 var32d;
;;;633    			
;;;634    			Modify_D_READ = Contr_Voltage;
000b78  4860              LDR      r0,|L3.3324|
000b7a  8800              LDRH     r0,[r0,#0]  ; Contr_Voltage
000b7c  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;635    			Modify_B_READ = Vmon_value;
000b7e  485e              LDR      r0,|L3.3320|
000b80  8800              LDRH     r0,[r0,#0]  ; Vmon_value
000b82  e000              B        |L3.2950|
                  |L3.2948|
000b84  e3fe              B        |L3.4996|
                  |L3.2950|
000b86  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;636    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000b88  485a              LDR      r0,|L3.3316|
000b8a  7901              LDRB     r1,[r0,#4]  ; g_tModS
000b8c  78c0              LDRB     r0,[r0,#3]  ; g_tModS
000b8e  eb012000          ADD      r0,r1,r0,LSL #8
000b92  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;637    			var32a = Modify_B_ACT;
000b94  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000b96  9005              STR      r0,[sp,#0x14]
;;;638    			var32a = var32a - Modify_A_ACT;
000b98  9805              LDR      r0,[sp,#0x14]
000b9a  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000b9c  1a40              SUBS     r0,r0,r1
000b9e  9005              STR      r0,[sp,#0x14]
;;;639    			var32a = var32a << 14;
000ba0  9805              LDR      r0,[sp,#0x14]
000ba2  0380              LSLS     r0,r0,#14
000ba4  9005              STR      r0,[sp,#0x14]
;;;640    			var16 = Modify_B_READ - Modify_A_READ;
000ba6  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000ba8  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
000baa  1a40              SUBS     r0,r0,r1
000bac  9006              STR      r0,[sp,#0x18]
;;;641    			var32a = var32a / var16;
000bae  f8bd1018          LDRH     r1,[sp,#0x18]
000bb2  9805              LDR      r0,[sp,#0x14]
000bb4  fbb0f0f1          UDIV     r0,r0,r1
000bb8  9005              STR      r0,[sp,#0x14]
;;;642    			REG_POWERV2 = var32a;
000bba  9805              LDR      r0,[sp,#0x14]
000bbc  f8c90040          STR      r0,[r9,#0x40]  ; Correct_Parametet
;;;643    			var32a = Modify_B_ACT;
000bc0  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000bc2  9005              STR      r0,[sp,#0x14]
;;;644    			var32a = var32a << 14;
000bc4  9805              LDR      r0,[sp,#0x14]
000bc6  0380              LSLS     r0,r0,#14
000bc8  9005              STR      r0,[sp,#0x14]
;;;645    			var32b = Modify_B_READ;
000bca  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000bcc  9004              STR      r0,[sp,#0x10]
;;;646    			var32b = var32b * REG_POWERV2;
000bce  f8d90040          LDR      r0,[r9,#0x40]  ; Correct_Parametet
000bd2  9904              LDR      r1,[sp,#0x10]
000bd4  4348              MULS     r0,r1,r0
000bd6  9004              STR      r0,[sp,#0x10]
;;;647    			if (var32a < var32b)
000bd8  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000bdc  4288              CMP      r0,r1
000bde  d20a              BCS      |L3.3062|
;;;648    			{
;;;649    				var32b = var32b - var32a;
000be0  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000be4  1a40              SUBS     r0,r0,r1
000be6  9004              STR      r0,[sp,#0x10]
;;;650    				REG_POWERV_Offset2 = var32b;
000be8  9804              LDR      r0,[sp,#0x10]
000bea  6430              STR      r0,[r6,#0x40]  ; Correct_Strong
;;;651    				Polar5 |= 0x01;
000bec  7960              LDRB     r0,[r4,#5]  ; correct_por
000bee  f0400001          ORR      r0,r0,#1
000bf2  7160              STRB     r0,[r4,#5]
000bf4  e009              B        |L3.3082|
                  |L3.3062|
;;;652    			}
;;;653    			else 
;;;654    			{
;;;655    				var32a = var32a - var32b;
000bf6  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000bfa  1a40              SUBS     r0,r0,r1
000bfc  9005              STR      r0,[sp,#0x14]
;;;656    				REG_POWERV_Offset2 = var32a;
000bfe  9805              LDR      r0,[sp,#0x14]
000c00  6430              STR      r0,[r6,#0x40]  ; Correct_Strong
;;;657    				Polar5 &= ~0x01;					
000c02  7960              LDRB     r0,[r4,#5]  ; correct_por
000c04  f0200001          BIC      r0,r0,#1
000c08  7160              STRB     r0,[r4,#5]
                  |L3.3082|
;;;658    			}
;;;659    	//---------------------------------------------------------------------------------//
;;;660    			var32c = Modify_B_ACT; //????ßµ?
000c0a  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000c0c  9002              STR      r0,[sp,#8]
;;;661    			var32c = var32c - Modify_A_ACT;
000c0e  9802              LDR      r0,[sp,#8]
000c10  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000c12  1a40              SUBS     r0,r0,r1
000c14  9002              STR      r0,[sp,#8]
;;;662    			var32c = var32c << 14;
000c16  9802              LDR      r0,[sp,#8]
000c18  0380              LSLS     r0,r0,#14
000c1a  9002              STR      r0,[sp,#8]
;;;663    			var16a=Modify_D_READ-Modify_C_READ;
000c1c  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
000c1e  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000c20  1a40              SUBS     r0,r0,r1
000c22  9003              STR      r0,[sp,#0xc]
;;;664    			var16a=var16a*2;
000c24  f8bd100c          LDRH     r1,[sp,#0xc]
000c28  f64f70ff          MOV      r0,#0xffff
000c2c  ea000041          AND      r0,r0,r1,LSL #1
000c30  9003              STR      r0,[sp,#0xc]
;;;665    			var32c=var32c/var16a;
000c32  f8bd100c          LDRH     r1,[sp,#0xc]
000c36  9802              LDR      r0,[sp,#8]
000c38  fbb0f0f1          UDIV     r0,r0,r1
000c3c  9002              STR      r0,[sp,#8]
;;;666    			SET_POWERV2 = var32c;
000c3e  9802              LDR      r0,[sp,#8]
000c40  f8c90050          STR      r0,[r9,#0x50]  ; Correct_Parametet
;;;667    			var32c = Modify_B_ACT;
000c44  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000c46  9002              STR      r0,[sp,#8]
;;;668    			var32c = var32c << 14;
000c48  9802              LDR      r0,[sp,#8]
000c4a  0380              LSLS     r0,r0,#14
000c4c  9002              STR      r0,[sp,#8]
;;;669    			var32d = SET_POWERV2;
000c4e  f8d90050          LDR      r0,[r9,#0x50]  ; Correct_Parametet
000c52  9001              STR      r0,[sp,#4]
;;;670    			var32d = var32d * (Modify_D_READ*2);
000c54  9801              LDR      r0,[sp,#4]
000c56  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
000c58  4348              MULS     r0,r1,r0
000c5a  0040              LSLS     r0,r0,#1
000c5c  9001              STR      r0,[sp,#4]
;;;671    			if (var32c < var32d)
000c5e  e9dd1001          LDRD     r1,r0,[sp,#4]
000c62  4288              CMP      r0,r1
000c64  d20c              BCS      |L3.3200|
;;;672    			{
;;;673    				var32d = var32d - var32c;
000c66  e9dd0101          LDRD     r0,r1,[sp,#4]
000c6a  1a40              SUBS     r0,r0,r1
000c6c  9001              STR      r0,[sp,#4]
;;;674    				SET_POWERV_Offset2 = var32d;
000c6e  9801              LDR      r0,[sp,#4]
000c70  6530              STR      r0,[r6,#0x50]  ; Correct_Strong
;;;675    				Polar5 |= 0x04;
000c72  e000              B        |L3.3190|
                  |L3.3188|
000c74  e014              B        |L3.3232|
                  |L3.3190|
000c76  7960              LDRB     r0,[r4,#5]  ; correct_por
000c78  f0400004          ORR      r0,r0,#4
000c7c  7160              STRB     r0,[r4,#5]
000c7e  e009              B        |L3.3220|
                  |L3.3200|
;;;676    			}
;;;677    			else 
;;;678    			{
;;;679    				var32c = var32c - var32d;
000c80  e9dd1001          LDRD     r1,r0,[sp,#4]
000c84  1a40              SUBS     r0,r0,r1
000c86  9002              STR      r0,[sp,#8]
;;;680    				SET_POWERV_Offset2 = var32c;
000c88  9802              LDR      r0,[sp,#8]
000c8a  6530              STR      r0,[r6,#0x50]  ; Correct_Strong
;;;681    				Polar5 &= ~0x04;
000c8c  7960              LDRB     r0,[r4,#5]  ; correct_por
000c8e  f0200004          BIC      r0,r0,#4
000c92  7160              STRB     r0,[r4,#5]
                  |L3.3220|
;;;682    			}
;;;683    			Flash_Write_all ();	
000c94  f7fffffe          BL       Flash_Write_all
;;;684    			Flag_DAC_OFF=0;
000c98  6838              LDR      r0,[r7,#0]  ; flagB
000c9a  f0200008          BIC      r0,r0,#8
000c9e  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.3232|
;;;685    		}
;;;686    /****************???°§?ßµ?**********************************/
;;;687    
;;;688    		if (g_tModS.RxBuf[1] == 0x0D)			  
000ca0  4914              LDR      r1,|L3.3316|
000ca2  7848              LDRB     r0,[r1,#1]  ; g_tModS
000ca4  280d              CMP      r0,#0xd
000ca6  d107              BNE      |L3.3256|
;;;689    		{ 
;;;690    			Modify_A_READ = Imon_value;
000ca8  4a15              LDR      r2,|L3.3328|
000caa  8812              LDRH     r2,[r2,#0]  ; Imon_value
000cac  612a              STR      r2,[r5,#0x10]  ; Modify_A_READ
;;;691    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000cae  790a              LDRB     r2,[r1,#4]  ; g_tModS
000cb0  78cb              LDRB     r3,[r1,#3]  ; g_tModS
000cb2  eb022203          ADD      r2,r2,r3,LSL #8
000cb6  61aa              STR      r2,[r5,#0x18]  ; Modify_A_ACT
                  |L3.3256|
;;;692    		}
;;;693    
;;;694    		if (g_tModS.RxBuf[1] == 0x0E)			   
000cb8  280e              CMP      r0,#0xe
000cba  d152              BNE      |L3.3426|
;;;695    		{
;;;696    			vu16 var16;
;;;697    			vu32 var32a;
;;;698    			vu32 var32b;
;;;699    			
;;;700    			vu16 var16a;
;;;701    			vu32 var32c;
;;;702    			vu32 var32d;
;;;703    			
;;;704    			Modify_B_READ = Imon_value;
000cbc  4810              LDR      r0,|L3.3328|
000cbe  8800              LDRH     r0,[r0,#0]  ; Imon_value
000cc0  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;705    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000cc2  480c              LDR      r0,|L3.3316|
000cc4  7901              LDRB     r1,[r0,#4]  ; g_tModS
000cc6  78c0              LDRB     r0,[r0,#3]  ; g_tModS
000cc8  eb012000          ADD      r0,r1,r0,LSL #8
000ccc  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;706    			var32a = Modify_B_ACT;
000cce  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000cd0  9005              STR      r0,[sp,#0x14]
;;;707    			var32a = var32a - Modify_A_ACT;
000cd2  9805              LDR      r0,[sp,#0x14]
000cd4  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000cd6  1a40              SUBS     r0,r0,r1
000cd8  9005              STR      r0,[sp,#0x14]
;;;708    			var32a = var32a << 14;
000cda  9805              LDR      r0,[sp,#0x14]
000cdc  0380              LSLS     r0,r0,#14
000cde  9005              STR      r0,[sp,#0x14]
;;;709    			var16 = Modify_B_READ - Modify_A_READ;
000ce0  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000ce2  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
000ce4  1a40              SUBS     r0,r0,r1
000ce6  9006              STR      r0,[sp,#0x18]
;;;710    			var32a = var32a / var16;
000ce8  f8bd1018          LDRH     r1,[sp,#0x18]
000cec  9805              LDR      r0,[sp,#0x14]
000cee  fbb0f0f1          UDIV     r0,r0,r1
000cf2  e007              B        |L3.3332|
                  |L3.3316|
                          DCD      g_tModS
                  |L3.3320|
                          DCD      Vmon_value
                  |L3.3324|
                          DCD      Contr_Voltage
                  |L3.3328|
                          DCD      Imon_value
                  |L3.3332|
000d04  9005              STR      r0,[sp,#0x14]
;;;711    			CON_POWERA = var32a;
000d06  9805              LDR      r0,[sp,#0x14]
000d08  f8c90028          STR      r0,[r9,#0x28]  ; Correct_Parametet
;;;712    			var32a = Modify_B_ACT;
000d0c  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000d0e  9005              STR      r0,[sp,#0x14]
;;;713    			var32a = var32a << 14;
000d10  9805              LDR      r0,[sp,#0x14]
000d12  0380              LSLS     r0,r0,#14
000d14  9005              STR      r0,[sp,#0x14]
;;;714    			var32b = Modify_B_READ;
000d16  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000d18  9004              STR      r0,[sp,#0x10]
;;;715    			var32b = var32b * CON_POWERA;
000d1a  f8d90028          LDR      r0,[r9,#0x28]  ; Correct_Parametet
000d1e  9904              LDR      r1,[sp,#0x10]
000d20  4348              MULS     r0,r1,r0
000d22  9004              STR      r0,[sp,#0x10]
;;;716    			if (var32a < var32b)
000d24  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000d28  4288              CMP      r0,r1
000d2a  d20a              BCS      |L3.3394|
;;;717    			{
;;;718    				var32b = var32b - var32a;
000d2c  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000d30  1a40              SUBS     r0,r0,r1
000d32  9004              STR      r0,[sp,#0x10]
;;;719    				CON_POWERA_Offset = var32b;
000d34  9804              LDR      r0,[sp,#0x10]
000d36  62b0              STR      r0,[r6,#0x28]  ; Correct_Strong
;;;720    				Polar3 |= 0x04;
000d38  78e0              LDRB     r0,[r4,#3]  ; correct_por
000d3a  f0400004          ORR      r0,r0,#4
000d3e  70e0              STRB     r0,[r4,#3]
000d40  e009              B        |L3.3414|
                  |L3.3394|
;;;721    			}
;;;722    			else 
;;;723    			{
;;;724    				var32a = var32a - var32b;
000d42  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000d46  1a40              SUBS     r0,r0,r1
000d48  9005              STR      r0,[sp,#0x14]
;;;725    				CON_POWERA_Offset = var32a;
000d4a  9805              LDR      r0,[sp,#0x14]
000d4c  62b0              STR      r0,[r6,#0x28]  ; Correct_Strong
;;;726    				Polar3 &= ~0x04;					
000d4e  78e0              LDRB     r0,[r4,#3]  ; correct_por
000d50  f0200004          BIC      r0,r0,#4
000d54  70e0              STRB     r0,[r4,#3]
                  |L3.3414|
;;;727    			}
;;;728    			Flash_Write_all ();	
000d56  f7fffffe          BL       Flash_Write_all
;;;729    			Flag_DAC_OFF=0;
000d5a  6838              LDR      r0,[r7,#0]  ; flagB
000d5c  f0200008          BIC      r0,r0,#8
000d60  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.3426|
;;;730    		}
;;;731    /************************************Ë¥üËΩΩÁîµÊµÅ‰ΩéÊ°£‰ΩçÈ´ò1-3*****************************************************************/
;;;732    		if (g_tModS.RxBuf[1] == 0x26)			   //CC??«µ?
000d62  f8df9424          LDR      r9,|L3.4488|
000d66  f8990001          LDRB     r0,[r9,#1]  ; g_tModS
000d6a  2826              CMP      r0,#0x26
000d6c  d110              BNE      |L3.3472|
;;;733    		{
;;;734    			Modify_A_READ = Imon1_value;//
000d6e  f8da1000          LDR      r1,[r10,#0]  ; Imon1_value
000d72  6129              STR      r1,[r5,#0x10]  ; Modify_A_READ
;;;735    			Modify_C_READ = Contr_Laod;//
000d74  f8b81000          LDRH     r1,[r8,#0]  ; Contr_Laod
000d78  6169              STR      r1,[r5,#0x14]  ; Modify_C_READ
;;;736    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000d7a  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
000d7e  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
000d82  eb012102          ADD      r1,r1,r2,LSL #8
000d86  61a9              STR      r1,[r5,#0x18]  ; Modify_A_ACT
;;;737    			Flag_DAC_OFF=1;//
000d88  6839              LDR      r1,[r7,#0]  ; flagB
000d8a  f0410108          ORR      r1,r1,#8
000d8e  6039              STR      r1,[r7,#0]  ; flagB
                  |L3.3472|
;;;738    		}
;;;739    
;;;740    		if (g_tModS.RxBuf[1] == 0x27)			   //
;;;741    		{
;;;742    			vu32 var16;
;;;743    			vu32 var32a;
;;;744    			vu32 var32b;
;;;745    			
;;;746    			vu32 var16a;
;;;747    			vu32 var32c;
;;;748    			vu32 var32d;
;;;749    			
;;;750    			Modify_B_READ = Imon1_value;
;;;751    			Modify_D_READ = Contr_Laod;
;;;752    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
;;;753    			
;;;754    			var32a = Modify_B_ACT;
;;;755    			var32a = var32a - Modify_A_ACT;
;;;756    			var32a = var32a << 12;
;;;757    			var16 = Modify_B_READ - Modify_A_READ;
;;;758    			var32a = var32a / var16;
;;;759    			REG_Load_A1 = var32a;
000d90  4efe              LDR      r6,|L3.4492|
000d92  2827              CMP      r0,#0x27              ;740
000d94  d174              BNE      |L3.3712|
000d96  f8da0000          LDR      r0,[r10,#0]           ;750  ; Imon1_value
000d9a  61e8              STR      r0,[r5,#0x1c]         ;750  ; Modify_B_READ
000d9c  f8b80000          LDRH     r0,[r8,#0]            ;751  ; Contr_Laod
000da0  6228              STR      r0,[r5,#0x20]         ;751  ; Modify_D_READ
000da2  f8990004          LDRB     r0,[r9,#4]            ;752  ; g_tModS
000da6  f8991003          LDRB     r1,[r9,#3]            ;752  ; g_tModS
000daa  eb002001          ADD      r0,r0,r1,LSL #8       ;752
000dae  6268              STR      r0,[r5,#0x24]         ;752  ; Modify_B_ACT
000db0  6a68              LDR      r0,[r5,#0x24]         ;754  ; Modify_B_ACT
000db2  9005              STR      r0,[sp,#0x14]         ;754
000db4  9805              LDR      r0,[sp,#0x14]         ;755
000db6  69a9              LDR      r1,[r5,#0x18]         ;755  ; Modify_A_ACT
000db8  1a40              SUBS     r0,r0,r1              ;755
000dba  9005              STR      r0,[sp,#0x14]         ;755
000dbc  9805              LDR      r0,[sp,#0x14]         ;756
000dbe  0300              LSLS     r0,r0,#12             ;756
000dc0  9005              STR      r0,[sp,#0x14]         ;756
000dc2  69e8              LDR      r0,[r5,#0x1c]         ;757  ; Modify_B_READ
000dc4  6929              LDR      r1,[r5,#0x10]         ;757  ; Modify_A_READ
000dc6  1a40              SUBS     r0,r0,r1              ;757
000dc8  9006              STR      r0,[sp,#0x18]         ;757
000dca  e9dd0105          LDRD     r0,r1,[sp,#0x14]      ;758
000dce  fbb0f0f1          UDIV     r0,r0,r1              ;758
000dd2  9005              STR      r0,[sp,#0x14]         ;758
000dd4  9805              LDR      r0,[sp,#0x14]
000dd6  61b0              STR      r0,[r6,#0x18]  ; InFlashSave
;;;760    			var32a = Modify_B_ACT;
000dd8  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
000dda  9105              STR      r1,[sp,#0x14]
;;;761    			var32a = var32a << 12;
000ddc  9905              LDR      r1,[sp,#0x14]
000dde  0309              LSLS     r1,r1,#12
000de0  9105              STR      r1,[sp,#0x14]
;;;762    			var32b = Modify_B_READ;
000de2  69e9              LDR      r1,[r5,#0x1c]  ; Modify_B_READ
000de4  9104              STR      r1,[sp,#0x10]
;;;763    			var32b = var32b * REG_Load_A1;
000de6  9904              LDR      r1,[sp,#0x10]
000de8  4348              MULS     r0,r1,r0
000dea  9004              STR      r0,[sp,#0x10]
;;;764    			if (var32a < var32b)
000dec  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000df0  4281              CMP      r1,r0
000df2  d20a              BCS      |L3.3594|
;;;765    			{
;;;766    				var32b = var32b - var32a;
000df4  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000df8  1a08              SUBS     r0,r1,r0
000dfa  9004              STR      r0,[sp,#0x10]
;;;767    				REG_LoadA_Offset1 = var32b;
000dfc  9804              LDR      r0,[sp,#0x10]
000dfe  6230              STR      r0,[r6,#0x20]  ; InFlashSave
;;;768    				Polar1 |= 0x01;
000e00  7860              LDRB     r0,[r4,#1]  ; correct_por
000e02  f0400001          ORR      r0,r0,#1
000e06  7060              STRB     r0,[r4,#1]
000e08  e009              B        |L3.3614|
                  |L3.3594|
;;;769    			}
;;;770    			else 
;;;771    			{
;;;772    				var32a = var32a - var32b;
000e0a  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000e0e  1a40              SUBS     r0,r0,r1
000e10  9005              STR      r0,[sp,#0x14]
;;;773    				REG_LoadA_Offset1 = var32a;
000e12  9805              LDR      r0,[sp,#0x14]
000e14  6230              STR      r0,[r6,#0x20]  ; InFlashSave
;;;774    				Polar1 &= ~0x01;					
000e16  7860              LDRB     r0,[r4,#1]  ; correct_por
000e18  f0200001          BIC      r0,r0,#1
000e1c  7060              STRB     r0,[r4,#1]
                  |L3.3614|
;;;775    			}
;;;776    //---------------------------------------------------------------------------------//
;;;777    			var32c = Modify_B_ACT; 
000e1e  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000e20  9002              STR      r0,[sp,#8]
;;;778    			var32c = var32c - Modify_A_ACT;
000e22  9802              LDR      r0,[sp,#8]
000e24  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000e26  1a40              SUBS     r0,r0,r1
000e28  9002              STR      r0,[sp,#8]
;;;779    			var32c = var32c << 12;
000e2a  9802              LDR      r0,[sp,#8]
000e2c  0300              LSLS     r0,r0,#12
000e2e  9002              STR      r0,[sp,#8]
;;;780    			var16a=Modify_D_READ-Modify_C_READ;
000e30  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
000e32  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000e34  1a40              SUBS     r0,r0,r1
000e36  9003              STR      r0,[sp,#0xc]
;;;781    			var16a=var16a*2;
000e38  9803              LDR      r0,[sp,#0xc]
000e3a  0040              LSLS     r0,r0,#1
000e3c  9003              STR      r0,[sp,#0xc]
;;;782    			var32c=var32c/var16a;
000e3e  e9dd0102          LDRD     r0,r1,[sp,#8]
000e42  fbb0f0f1          UDIV     r0,r0,r1
000e46  9002              STR      r0,[sp,#8]
;;;783    			SET_LoadA1 = var32c;
000e48  9802              LDR      r0,[sp,#8]
000e4a  61f0              STR      r0,[r6,#0x1c]  ; InFlashSave
;;;784    			var32c = Modify_B_ACT;
000e4c  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
000e4e  9102              STR      r1,[sp,#8]
;;;785    			var32c = var32c << 12;
000e50  9902              LDR      r1,[sp,#8]
000e52  0309              LSLS     r1,r1,#12
000e54  9102              STR      r1,[sp,#8]
;;;786    			var32d = SET_LoadA1;
000e56  9001              STR      r0,[sp,#4]
;;;787    			var32d = var32d * (Modify_D_READ*2);
000e58  9801              LDR      r0,[sp,#4]
000e5a  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
000e5c  4348              MULS     r0,r1,r0
000e5e  0040              LSLS     r0,r0,#1
000e60  9001              STR      r0,[sp,#4]
;;;788    			if (var32c < var32d)
000e62  e9dd1001          LDRD     r1,r0,[sp,#4]
000e66  4288              CMP      r0,r1
000e68  d20b              BCS      |L3.3714|
;;;789    			{
;;;790    				var32d = var32d - var32c;
000e6a  e9dd0101          LDRD     r0,r1,[sp,#4]
000e6e  1a40              SUBS     r0,r0,r1
000e70  9001              STR      r0,[sp,#4]
;;;791    				SET_LoadA_Offset1 = var32d;
000e72  9801              LDR      r0,[sp,#4]
000e74  6270              STR      r0,[r6,#0x24]  ; InFlashSave
;;;792    				Polar1 |= 0x04;
000e76  7860              LDRB     r0,[r4,#1]  ; correct_por
000e78  f0400004          ORR      r0,r0,#4
000e7c  7060              STRB     r0,[r4,#1]
000e7e  e00a              B        |L3.3734|
                  |L3.3712|
000e80  e012              B        |L3.3752|
                  |L3.3714|
;;;793    			}
;;;794    			else 
;;;795    			{
;;;796    				var32c = var32c - var32d;
000e82  e9dd1001          LDRD     r1,r0,[sp,#4]
000e86  1a40              SUBS     r0,r0,r1
000e88  9002              STR      r0,[sp,#8]
;;;797    				SET_LoadA_Offset1 = var32c;
000e8a  9802              LDR      r0,[sp,#8]
000e8c  6270              STR      r0,[r6,#0x24]  ; InFlashSave
;;;798    				Polar1 &= ~0x04;
000e8e  7860              LDRB     r0,[r4,#1]  ; correct_por
000e90  f0200004          BIC      r0,r0,#4
000e94  7060              STRB     r0,[r4,#1]
                  |L3.3734|
;;;799    			}
;;;800    			Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
000e96  4abd              LDR      r2,|L3.4492|
000e98  2128              MOVS     r1,#0x28
000e9a  48bd              LDR      r0,|L3.4496|
000e9c  f7fffffe          BL       Flash_Write32BitDatas
;;;801    //			Flash_Write_all ();	
;;;802    			Flag_DAC_OFF =0;
000ea0  6838              LDR      r0,[r7,#0]  ; flagB
000ea2  f0200008          BIC      r0,r0,#8
000ea6  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.3752|
;;;803    		}
;;;804    /************************************Ë¥üËΩΩÁîµÊµÅ‰ΩéÊ°£‰ΩçÈ´ò1-3*****************************************************************/
;;;805    		if (g_tModS.RxBuf[1] == 0x28)			   //CC??«µ?
000ea8  f8990001          LDRB     r0,[r9,#1]  ; g_tModS
000eac  2828              CMP      r0,#0x28
000eae  d110              BNE      |L3.3794|
;;;806    		{
;;;807    			Modify_A_READ = Imon1_value;//
000eb0  f8da1000          LDR      r1,[r10,#0]  ; Imon1_value
000eb4  6129              STR      r1,[r5,#0x10]  ; Modify_A_READ
;;;808    			Modify_C_READ = Contr_Laod;//
000eb6  f8b81000          LDRH     r1,[r8,#0]  ; Contr_Laod
000eba  6169              STR      r1,[r5,#0x14]  ; Modify_C_READ
;;;809    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000ebc  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
000ec0  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
000ec4  eb012102          ADD      r1,r1,r2,LSL #8
000ec8  61a9              STR      r1,[r5,#0x18]  ; Modify_A_ACT
;;;810    			Flag_DAC_OFF=1;//
000eca  6839              LDR      r1,[r7,#0]  ; flagB
000ecc  f0410108          ORR      r1,r1,#8
000ed0  6039              STR      r1,[r7,#0]  ; flagB
                  |L3.3794|
;;;811    		}
;;;812    
;;;813    		if (g_tModS.RxBuf[1] == 0x29)			   //
000ed2  2829              CMP      r0,#0x29
000ed4  d174              BNE      |L3.4032|
;;;814    		{
;;;815    			vu32 var16;
;;;816    			vu32 var32a;
;;;817    			vu32 var32b;
;;;818    			
;;;819    			vu32 var16a;
;;;820    			vu32 var32c;
;;;821    			vu32 var32d;
;;;822    			
;;;823    			Modify_B_READ = Imon1_value;
000ed6  f8da0000          LDR      r0,[r10,#0]  ; Imon1_value
000eda  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;824    			Modify_D_READ = Contr_Laod;
000edc  f8b80000          LDRH     r0,[r8,#0]  ; Contr_Laod
000ee0  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;825    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000ee2  f8990004          LDRB     r0,[r9,#4]  ; g_tModS
000ee6  f8991003          LDRB     r1,[r9,#3]  ; g_tModS
000eea  eb002001          ADD      r0,r0,r1,LSL #8
000eee  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;826    			
;;;827    			var32a = Modify_B_ACT;
000ef0  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000ef2  9005              STR      r0,[sp,#0x14]
;;;828    			var32a = var32a - Modify_A_ACT;
000ef4  9805              LDR      r0,[sp,#0x14]
000ef6  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000ef8  1a40              SUBS     r0,r0,r1
000efa  9005              STR      r0,[sp,#0x14]
;;;829    			var32a = var32a << 12;
000efc  9805              LDR      r0,[sp,#0x14]
000efe  0300              LSLS     r0,r0,#12
000f00  9005              STR      r0,[sp,#0x14]
;;;830    			var16 = Modify_B_READ - Modify_A_READ;
000f02  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
000f04  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
000f06  1a40              SUBS     r0,r0,r1
000f08  9006              STR      r0,[sp,#0x18]
;;;831    			var32a = var32a / var16;
000f0a  e9dd0105          LDRD     r0,r1,[sp,#0x14]
000f0e  fbb0f0f1          UDIV     r0,r0,r1
000f12  9005              STR      r0,[sp,#0x14]
;;;832    			REG_Load_A2 = var32a;
000f14  9805              LDR      r0,[sp,#0x14]
000f16  62b0              STR      r0,[r6,#0x28]  ; InFlashSave
;;;833    			var32a = Modify_B_ACT;
000f18  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
000f1a  9105              STR      r1,[sp,#0x14]
;;;834    			var32a = var32a << 12;
000f1c  9905              LDR      r1,[sp,#0x14]
000f1e  0309              LSLS     r1,r1,#12
000f20  9105              STR      r1,[sp,#0x14]
;;;835    			var32b = Modify_B_READ;
000f22  69e9              LDR      r1,[r5,#0x1c]  ; Modify_B_READ
000f24  9104              STR      r1,[sp,#0x10]
;;;836    			var32b = var32b * REG_Load_A2;
000f26  9904              LDR      r1,[sp,#0x10]
000f28  4348              MULS     r0,r1,r0
000f2a  9004              STR      r0,[sp,#0x10]
;;;837    			if (var32a < var32b)
000f2c  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000f30  4288              CMP      r0,r1
000f32  d20a              BCS      |L3.3914|
;;;838    			{
;;;839    				var32b = var32b - var32a;
000f34  e9dd0104          LDRD     r0,r1,[sp,#0x10]
000f38  1a40              SUBS     r0,r0,r1
000f3a  9004              STR      r0,[sp,#0x10]
;;;840    				REG_LoadA_Offset2 = var32b;
000f3c  9804              LDR      r0,[sp,#0x10]
000f3e  6330              STR      r0,[r6,#0x30]  ; InFlashSave
;;;841    				Polar1 |= 0x01;
000f40  7860              LDRB     r0,[r4,#1]  ; correct_por
000f42  f0400001          ORR      r0,r0,#1
000f46  7060              STRB     r0,[r4,#1]
000f48  e009              B        |L3.3934|
                  |L3.3914|
;;;842    			}
;;;843    			else 
;;;844    			{
;;;845    				var32a = var32a - var32b;
000f4a  e9dd1004          LDRD     r1,r0,[sp,#0x10]
000f4e  1a40              SUBS     r0,r0,r1
000f50  9005              STR      r0,[sp,#0x14]
;;;846    				REG_LoadA_Offset2 = var32a;
000f52  9805              LDR      r0,[sp,#0x14]
000f54  6330              STR      r0,[r6,#0x30]  ; InFlashSave
;;;847    				Polar1 &= ~0x01;					
000f56  7860              LDRB     r0,[r4,#1]  ; correct_por
000f58  f0200001          BIC      r0,r0,#1
000f5c  7060              STRB     r0,[r4,#1]
                  |L3.3934|
;;;848    			}
;;;849    //---------------------------------------------------------------------------------//
;;;850    			var32c = Modify_B_ACT; 
000f5e  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
000f60  9002              STR      r0,[sp,#8]
;;;851    			var32c = var32c - Modify_A_ACT;
000f62  9802              LDR      r0,[sp,#8]
000f64  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
000f66  1a40              SUBS     r0,r0,r1
000f68  9002              STR      r0,[sp,#8]
;;;852    			var32c = var32c << 12;
000f6a  9802              LDR      r0,[sp,#8]
000f6c  0300              LSLS     r0,r0,#12
000f6e  9002              STR      r0,[sp,#8]
;;;853    			var16a=Modify_D_READ-Modify_C_READ;
000f70  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
000f72  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
000f74  1a40              SUBS     r0,r0,r1
000f76  9003              STR      r0,[sp,#0xc]
;;;854    			var16a=var16a*2;
000f78  9803              LDR      r0,[sp,#0xc]
000f7a  0040              LSLS     r0,r0,#1
000f7c  9003              STR      r0,[sp,#0xc]
;;;855    			var32c=var32c/var16a;
000f7e  e9dd0102          LDRD     r0,r1,[sp,#8]
000f82  fbb0f0f1          UDIV     r0,r0,r1
000f86  9002              STR      r0,[sp,#8]
;;;856    			SET_LoadA2 = var32c;
000f88  9802              LDR      r0,[sp,#8]
000f8a  62f0              STR      r0,[r6,#0x2c]  ; InFlashSave
;;;857    			var32c = Modify_B_ACT;
000f8c  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
000f8e  9102              STR      r1,[sp,#8]
;;;858    			var32c = var32c << 12;
000f90  9902              LDR      r1,[sp,#8]
000f92  0309              LSLS     r1,r1,#12
000f94  9102              STR      r1,[sp,#8]
;;;859    			var32d = SET_LoadA2;
000f96  9001              STR      r0,[sp,#4]
;;;860    			var32d = var32d * (Modify_D_READ*2);
000f98  9801              LDR      r0,[sp,#4]
000f9a  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
000f9c  4348              MULS     r0,r1,r0
000f9e  0040              LSLS     r0,r0,#1
000fa0  9001              STR      r0,[sp,#4]
;;;861    			if (var32c < var32d)
000fa2  e9dd1001          LDRD     r1,r0,[sp,#4]
000fa6  4288              CMP      r0,r1
000fa8  d20b              BCS      |L3.4034|
;;;862    			{
;;;863    				var32d = var32d - var32c;
000faa  e9dd0101          LDRD     r0,r1,[sp,#4]
000fae  1a40              SUBS     r0,r0,r1
000fb0  9001              STR      r0,[sp,#4]
;;;864    				SET_LoadA_Offset2 = var32d;
000fb2  9801              LDR      r0,[sp,#4]
000fb4  6370              STR      r0,[r6,#0x34]  ; InFlashSave
;;;865    				Polar1 |= 0x04;
000fb6  7860              LDRB     r0,[r4,#1]  ; correct_por
000fb8  f0400004          ORR      r0,r0,#4
000fbc  7060              STRB     r0,[r4,#1]
000fbe  e00a              B        |L3.4054|
                  |L3.4032|
000fc0  e012              B        |L3.4072|
                  |L3.4034|
;;;866    			}
;;;867    			else 
;;;868    			{
;;;869    				var32c = var32c - var32d;
000fc2  e9dd1001          LDRD     r1,r0,[sp,#4]
000fc6  1a40              SUBS     r0,r0,r1
000fc8  9002              STR      r0,[sp,#8]
;;;870    				SET_LoadA_Offset2 = var32c;
000fca  9802              LDR      r0,[sp,#8]
000fcc  6370              STR      r0,[r6,#0x34]  ; InFlashSave
;;;871    				Polar1 &= ~0x04;
000fce  7860              LDRB     r0,[r4,#1]  ; correct_por
000fd0  f0200004          BIC      r0,r0,#4
000fd4  7060              STRB     r0,[r4,#1]
                  |L3.4054|
;;;872    			}
;;;873    			Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
000fd6  4a6d              LDR      r2,|L3.4492|
000fd8  2128              MOVS     r1,#0x28
000fda  486d              LDR      r0,|L3.4496|
000fdc  f7fffffe          BL       Flash_Write32BitDatas
;;;874    //			Flash_Write_all ();	
;;;875    			Flag_DAC_OFF =0;
000fe0  6838              LDR      r0,[r7,#0]  ; flagB
000fe2  f0200008          BIC      r0,r0,#8
000fe6  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.4072|
;;;876    		}
;;;877    /************************************Ë¥üËΩΩÁîµÊµÅ‰ΩéÊ°£‰ΩçÈ´ò1-3*****************************************************************/
;;;878    		if (g_tModS.RxBuf[1] == 0x2A)			   //CC??«µ?
000fe8  f8990001          LDRB     r0,[r9,#1]  ; g_tModS
000fec  282a              CMP      r0,#0x2a
000fee  d110              BNE      |L3.4114|
;;;879    		{
;;;880    			Modify_A_READ = Imon1_value;//
000ff0  f8da1000          LDR      r1,[r10,#0]  ; Imon1_value
000ff4  6129              STR      r1,[r5,#0x10]  ; Modify_A_READ
;;;881    			Modify_C_READ = Contr_Laod;//
000ff6  f8b81000          LDRH     r1,[r8,#0]  ; Contr_Laod
000ffa  6169              STR      r1,[r5,#0x14]  ; Modify_C_READ
;;;882    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
000ffc  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
001000  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
001004  eb012102          ADD      r1,r1,r2,LSL #8
001008  61a9              STR      r1,[r5,#0x18]  ; Modify_A_ACT
;;;883    			Flag_DAC_OFF=1;//
00100a  6839              LDR      r1,[r7,#0]  ; flagB
00100c  f0410108          ORR      r1,r1,#8
001010  6039              STR      r1,[r7,#0]  ; flagB
                  |L3.4114|
;;;884    		}
;;;885    
;;;886    		if (g_tModS.RxBuf[1] == 0x2B)			   //
001012  282b              CMP      r0,#0x2b
001014  d174              BNE      |L3.4352|
;;;887    		{
;;;888    			vu32 var16;
;;;889    			vu32 var32a;
;;;890    			vu32 var32b;
;;;891    			
;;;892    			vu32 var16a;
;;;893    			vu32 var32c;
;;;894    			vu32 var32d;
;;;895    			
;;;896    			Modify_B_READ = Imon1_value;
001016  f8da0000          LDR      r0,[r10,#0]  ; Imon1_value
00101a  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;897    			Modify_D_READ = Contr_Laod;
00101c  f8b80000          LDRH     r0,[r8,#0]  ; Contr_Laod
001020  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;898    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
001022  f8990004          LDRB     r0,[r9,#4]  ; g_tModS
001026  f8991003          LDRB     r1,[r9,#3]  ; g_tModS
00102a  eb002001          ADD      r0,r0,r1,LSL #8
00102e  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;899    			
;;;900    			var32a = Modify_B_ACT;
001030  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
001032  9005              STR      r0,[sp,#0x14]
;;;901    			var32a = var32a - Modify_A_ACT;
001034  9805              LDR      r0,[sp,#0x14]
001036  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
001038  1a40              SUBS     r0,r0,r1
00103a  9005              STR      r0,[sp,#0x14]
;;;902    			var32a = var32a << 12;
00103c  9805              LDR      r0,[sp,#0x14]
00103e  0300              LSLS     r0,r0,#12
001040  9005              STR      r0,[sp,#0x14]
;;;903    			var16 = Modify_B_READ - Modify_A_READ;
001042  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
001044  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
001046  1a40              SUBS     r0,r0,r1
001048  9006              STR      r0,[sp,#0x18]
;;;904    			var32a = var32a / var16;
00104a  e9dd0105          LDRD     r0,r1,[sp,#0x14]
00104e  fbb0f0f1          UDIV     r0,r0,r1
001052  9005              STR      r0,[sp,#0x14]
;;;905    			REG_Load_AH = var32a;
001054  9805              LDR      r0,[sp,#0x14]
001056  63b0              STR      r0,[r6,#0x38]  ; InFlashSave
;;;906    			var32a = Modify_B_ACT;
001058  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
00105a  9105              STR      r1,[sp,#0x14]
;;;907    			var32a = var32a << 12;
00105c  9905              LDR      r1,[sp,#0x14]
00105e  0309              LSLS     r1,r1,#12
001060  9105              STR      r1,[sp,#0x14]
;;;908    			var32b = Modify_B_READ;
001062  69e9              LDR      r1,[r5,#0x1c]  ; Modify_B_READ
001064  9104              STR      r1,[sp,#0x10]
;;;909    			var32b = var32b * REG_Load_AH;
001066  9904              LDR      r1,[sp,#0x10]
001068  4348              MULS     r0,r1,r0
00106a  9004              STR      r0,[sp,#0x10]
;;;910    			if (var32a < var32b)
00106c  e9dd0104          LDRD     r0,r1,[sp,#0x10]
001070  4281              CMP      r1,r0
001072  d20a              BCS      |L3.4234|
;;;911    			{
;;;912    				var32b = var32b - var32a;
001074  e9dd0104          LDRD     r0,r1,[sp,#0x10]
001078  1a40              SUBS     r0,r0,r1
00107a  9004              STR      r0,[sp,#0x10]
;;;913    				REG_LoadA_OffsetH = var32b;
00107c  9804              LDR      r0,[sp,#0x10]
00107e  6430              STR      r0,[r6,#0x40]  ; InFlashSave
;;;914    				Polar1 |= 0x01;
001080  7860              LDRB     r0,[r4,#1]  ; correct_por
001082  f0400001          ORR      r0,r0,#1
001086  7060              STRB     r0,[r4,#1]
001088  e009              B        |L3.4254|
                  |L3.4234|
;;;915    			}
;;;916    			else 
;;;917    			{
;;;918    				var32a = var32a - var32b;
00108a  e9dd0104          LDRD     r0,r1,[sp,#0x10]
00108e  1a08              SUBS     r0,r1,r0
001090  9005              STR      r0,[sp,#0x14]
;;;919    				REG_LoadA_OffsetH = var32a;
001092  9805              LDR      r0,[sp,#0x14]
001094  6430              STR      r0,[r6,#0x40]  ; InFlashSave
;;;920    				Polar1 &= ~0x01;					
001096  7860              LDRB     r0,[r4,#1]  ; correct_por
001098  f0200001          BIC      r0,r0,#1
00109c  7060              STRB     r0,[r4,#1]
                  |L3.4254|
;;;921    			}
;;;922    //---------------------------------------------------------------------------------//
;;;923    			var32c = Modify_B_ACT; 
00109e  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0010a0  9002              STR      r0,[sp,#8]
;;;924    			var32c = var32c - Modify_A_ACT;
0010a2  9802              LDR      r0,[sp,#8]
0010a4  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
0010a6  1a40              SUBS     r0,r0,r1
0010a8  9002              STR      r0,[sp,#8]
;;;925    			var32c = var32c << 12;
0010aa  9802              LDR      r0,[sp,#8]
0010ac  0300              LSLS     r0,r0,#12
0010ae  9002              STR      r0,[sp,#8]
;;;926    			var16a=Modify_D_READ-Modify_C_READ;
0010b0  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
0010b2  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
0010b4  1a40              SUBS     r0,r0,r1
0010b6  9003              STR      r0,[sp,#0xc]
;;;927    			var16a=var16a*2;
0010b8  9803              LDR      r0,[sp,#0xc]
0010ba  0040              LSLS     r0,r0,#1
0010bc  9003              STR      r0,[sp,#0xc]
;;;928    			var32c=var32c/var16a;
0010be  e9dd0102          LDRD     r0,r1,[sp,#8]
0010c2  fbb0f0f1          UDIV     r0,r0,r1
0010c6  9002              STR      r0,[sp,#8]
;;;929    			SET_LoadAH = var32c;
0010c8  9802              LDR      r0,[sp,#8]
0010ca  63f0              STR      r0,[r6,#0x3c]  ; InFlashSave
;;;930    			var32c = Modify_B_ACT;
0010cc  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
0010ce  9102              STR      r1,[sp,#8]
;;;931    			var32c = var32c << 12;
0010d0  9902              LDR      r1,[sp,#8]
0010d2  0309              LSLS     r1,r1,#12
0010d4  9102              STR      r1,[sp,#8]
;;;932    			var32d = SET_LoadAH;
0010d6  9001              STR      r0,[sp,#4]
;;;933    			var32d = var32d * (Modify_D_READ*2);
0010d8  9801              LDR      r0,[sp,#4]
0010da  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
0010dc  4348              MULS     r0,r1,r0
0010de  0040              LSLS     r0,r0,#1
0010e0  9001              STR      r0,[sp,#4]
;;;934    			if (var32c < var32d)
0010e2  e9dd1001          LDRD     r1,r0,[sp,#4]
0010e6  4288              CMP      r0,r1
0010e8  d20b              BCS      |L3.4354|
;;;935    			{
;;;936    				var32d = var32d - var32c;
0010ea  e9dd0101          LDRD     r0,r1,[sp,#4]
0010ee  1a40              SUBS     r0,r0,r1
0010f0  9001              STR      r0,[sp,#4]
;;;937    				SET_LoadA_OffsetH = var32d;
0010f2  9801              LDR      r0,[sp,#4]
0010f4  6470              STR      r0,[r6,#0x44]  ; InFlashSave
;;;938    				Polar1 |= 0x04;
0010f6  7860              LDRB     r0,[r4,#1]  ; correct_por
0010f8  f0400004          ORR      r0,r0,#4
0010fc  7060              STRB     r0,[r4,#1]
0010fe  e00a              B        |L3.4374|
                  |L3.4352|
001100  e012              B        |L3.4392|
                  |L3.4354|
;;;939    			}
;;;940    			else 
;;;941    			{
;;;942    				var32c = var32c - var32d;
001102  e9dd1001          LDRD     r1,r0,[sp,#4]
001106  1a40              SUBS     r0,r0,r1
001108  9002              STR      r0,[sp,#8]
;;;943    				SET_LoadA_OffsetH = var32c;
00110a  9802              LDR      r0,[sp,#8]
00110c  6470              STR      r0,[r6,#0x44]  ; InFlashSave
;;;944    				Polar1 &= ~0x04;
00110e  7860              LDRB     r0,[r4,#1]  ; correct_por
001110  f0200004          BIC      r0,r0,#4
001114  7060              STRB     r0,[r4,#1]
                  |L3.4374|
;;;945    			}
;;;946    			Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
001116  4a1d              LDR      r2,|L3.4492|
001118  2128              MOVS     r1,#0x28
00111a  481d              LDR      r0,|L3.4496|
00111c  f7fffffe          BL       Flash_Write32BitDatas
;;;947    //			Flash_Write_all ();	
;;;948    			Flag_DAC_OFF =0;
001120  6838              LDR      r0,[r7,#0]  ; flagB
001122  f0200008          BIC      r0,r0,#8
001126  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.4392|
;;;949    		}
;;;950    /************************************Ë¥üËΩΩÁîµÊµÅ‰ΩéÊ°£‰ΩçÈ´ò1-3*****************************************************************/
;;;951    		if (g_tModS.RxBuf[1] == 0x2C)			   //CC??«µ?
001128  f8990001          LDRB     r0,[r9,#1]  ; g_tModS
00112c  282c              CMP      r0,#0x2c
00112e  d110              BNE      |L3.4434|
;;;952    		{
;;;953    			Modify_A_READ = Imon1_value;//
001130  f8da1000          LDR      r1,[r10,#0]  ; Imon1_value
001134  6129              STR      r1,[r5,#0x10]  ; Modify_A_READ
;;;954    			Modify_C_READ = Contr_Laod;//
001136  f8b81000          LDRH     r1,[r8,#0]  ; Contr_Laod
00113a  6169              STR      r1,[r5,#0x14]  ; Modify_C_READ
;;;955    			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
00113c  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
001140  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
001144  eb012102          ADD      r1,r1,r2,LSL #8
001148  61a9              STR      r1,[r5,#0x18]  ; Modify_A_ACT
;;;956    			Flag_DAC_OFF=1;//
00114a  6839              LDR      r1,[r7,#0]  ; flagB
00114c  f0410108          ORR      r1,r1,#8
001150  6039              STR      r1,[r7,#0]  ; flagB
                  |L3.4434|
;;;957    		}
;;;958    
;;;959    		if (g_tModS.RxBuf[1] == 0x2D)			   //
001152  282d              CMP      r0,#0x2d
001154  d17b              BNE      |L3.4686|
;;;960    		{
;;;961    			vu32 var16;
;;;962    			vu32 var32a;
;;;963    			vu32 var32b;
;;;964    			
;;;965    			vu32 var16a;
;;;966    			vu32 var32c;
;;;967    			vu32 var32d;
;;;968    			
;;;969    			Modify_B_READ = Imon1_value;
001156  f8da0000          LDR      r0,[r10,#0]  ; Imon1_value
00115a  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;970    			Modify_D_READ = Contr_Laod;
00115c  f8b80000          LDRH     r0,[r8,#0]  ; Contr_Laod
001160  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;971    			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
001162  f8990004          LDRB     r0,[r9,#4]  ; g_tModS
001166  f8991003          LDRB     r1,[r9,#3]  ; g_tModS
00116a  eb002001          ADD      r0,r0,r1,LSL #8
00116e  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;972    			
;;;973    			var32a = Modify_B_ACT;
001170  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
001172  9005              STR      r0,[sp,#0x14]
;;;974    			var32a = var32a - Modify_A_ACT;
001174  9805              LDR      r0,[sp,#0x14]
001176  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
001178  1a40              SUBS     r0,r0,r1
00117a  9005              STR      r0,[sp,#0x14]
;;;975    			var32a = var32a << 12;
00117c  9805              LDR      r0,[sp,#0x14]
00117e  0300              LSLS     r0,r0,#12
001180  9005              STR      r0,[sp,#0x14]
;;;976    			var16 = Modify_B_READ - Modify_A_READ;
001182  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
001184  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
001186  e005              B        |L3.4500|
                  |L3.4488|
                          DCD      g_tModS
                  |L3.4492|
                          DCD      InFlashSave
                  |L3.4496|
                          DCD      0x080e0000
                  |L3.4500|
001194  1a40              SUBS     r0,r0,r1
001196  9006              STR      r0,[sp,#0x18]
;;;977    			var32a = var32a / var16;
001198  e9dd0105          LDRD     r0,r1,[sp,#0x14]
00119c  fbb0f0f1          UDIV     r0,r0,r1
0011a0  9005              STR      r0,[sp,#0x14]
;;;978    			REG_Load_AH1 = var32a;
0011a2  9805              LDR      r0,[sp,#0x14]
0011a4  64b0              STR      r0,[r6,#0x48]  ; InFlashSave
;;;979    			var32a = Modify_B_ACT;
0011a6  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
0011a8  9105              STR      r1,[sp,#0x14]
;;;980    			var32a = var32a << 12;
0011aa  9905              LDR      r1,[sp,#0x14]
0011ac  0309              LSLS     r1,r1,#12
0011ae  9105              STR      r1,[sp,#0x14]
;;;981    			var32b = Modify_B_READ;
0011b0  69e9              LDR      r1,[r5,#0x1c]  ; Modify_B_READ
0011b2  9104              STR      r1,[sp,#0x10]
;;;982    			var32b = var32b * REG_Load_AH1;
0011b4  9904              LDR      r1,[sp,#0x10]
0011b6  4348              MULS     r0,r1,r0
0011b8  9004              STR      r0,[sp,#0x10]
;;;983    			if (var32a < var32b)
0011ba  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0011be  4288              CMP      r0,r1
0011c0  d20a              BCS      |L3.4568|
;;;984    			{
;;;985    				var32b = var32b - var32a;
0011c2  e9dd0104          LDRD     r0,r1,[sp,#0x10]
0011c6  1a40              SUBS     r0,r0,r1
0011c8  9004              STR      r0,[sp,#0x10]
;;;986    				REG_LoadA_OffsetH1 = var32b;
0011ca  9804              LDR      r0,[sp,#0x10]
0011cc  6530              STR      r0,[r6,#0x50]  ; InFlashSave
;;;987    				Polar1 |= 0x01;
0011ce  7860              LDRB     r0,[r4,#1]  ; correct_por
0011d0  f0400001          ORR      r0,r0,#1
0011d4  7060              STRB     r0,[r4,#1]
0011d6  e009              B        |L3.4588|
                  |L3.4568|
;;;988    			}
;;;989    			else 
;;;990    			{
;;;991    				var32a = var32a - var32b;
0011d8  e9dd1004          LDRD     r1,r0,[sp,#0x10]
0011dc  1a40              SUBS     r0,r0,r1
0011de  9005              STR      r0,[sp,#0x14]
;;;992    				REG_LoadA_OffsetH1 = var32a;
0011e0  9805              LDR      r0,[sp,#0x14]
0011e2  6530              STR      r0,[r6,#0x50]  ; InFlashSave
;;;993    				Polar1 &= ~0x01;					
0011e4  7860              LDRB     r0,[r4,#1]  ; correct_por
0011e6  f0200001          BIC      r0,r0,#1
0011ea  7060              STRB     r0,[r4,#1]
                  |L3.4588|
;;;994    			}
;;;995    //---------------------------------------------------------------------------------//
;;;996    			var32c = Modify_B_ACT; 
0011ec  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0011ee  9002              STR      r0,[sp,#8]
;;;997    			var32c = var32c - Modify_A_ACT;
0011f0  9802              LDR      r0,[sp,#8]
0011f2  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
0011f4  1a40              SUBS     r0,r0,r1
0011f6  9002              STR      r0,[sp,#8]
;;;998    			var32c = var32c << 12;
0011f8  9802              LDR      r0,[sp,#8]
0011fa  0300              LSLS     r0,r0,#12
0011fc  9002              STR      r0,[sp,#8]
;;;999    			var16a=Modify_D_READ-Modify_C_READ;
0011fe  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
001200  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
001202  1a40              SUBS     r0,r0,r1
001204  9003              STR      r0,[sp,#0xc]
;;;1000   			var16a=var16a*2;
001206  9803              LDR      r0,[sp,#0xc]
001208  0040              LSLS     r0,r0,#1
00120a  9003              STR      r0,[sp,#0xc]
;;;1001   			var32c=var32c/var16a;
00120c  e9dd0102          LDRD     r0,r1,[sp,#8]
001210  fbb0f0f1          UDIV     r0,r0,r1
001214  9002              STR      r0,[sp,#8]
;;;1002   			SET_LoadAH1 = var32c;
001216  9802              LDR      r0,[sp,#8]
001218  64f0              STR      r0,[r6,#0x4c]  ; InFlashSave
;;;1003   			var32c = Modify_B_ACT;
00121a  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
00121c  9102              STR      r1,[sp,#8]
;;;1004   			var32c = var32c << 12;
00121e  9902              LDR      r1,[sp,#8]
001220  0309              LSLS     r1,r1,#12
001222  9102              STR      r1,[sp,#8]
;;;1005   			var32d = SET_LoadAH1;
001224  9001              STR      r0,[sp,#4]
;;;1006   			var32d = var32d * (Modify_D_READ*2);
001226  9801              LDR      r0,[sp,#4]
001228  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
00122a  4348              MULS     r0,r1,r0
00122c  0040              LSLS     r0,r0,#1
00122e  9001              STR      r0,[sp,#4]
;;;1007   			if (var32c < var32d)
001230  e9dd0101          LDRD     r0,r1,[sp,#4]
001234  4281              CMP      r1,r0
001236  d20b              BCS      |L3.4688|
;;;1008   			{
;;;1009   				var32d = var32d - var32c;
001238  e9dd0101          LDRD     r0,r1,[sp,#4]
00123c  1a40              SUBS     r0,r0,r1
00123e  9001              STR      r0,[sp,#4]
;;;1010   				SET_LoadA_OffsetH1 = var32d;
001240  9801              LDR      r0,[sp,#4]
001242  6570              STR      r0,[r6,#0x54]  ; InFlashSave
;;;1011   				Polar1 |= 0x04;
001244  7860              LDRB     r0,[r4,#1]  ; correct_por
001246  f0400004          ORR      r0,r0,#4
00124a  7060              STRB     r0,[r4,#1]
00124c  e00a              B        |L3.4708|
                  |L3.4686|
00124e  e012              B        |L3.4726|
                  |L3.4688|
;;;1012   			}
;;;1013   			else 
;;;1014   			{
;;;1015   				var32c = var32c - var32d;
001250  e9dd1001          LDRD     r1,r0,[sp,#4]
001254  1a40              SUBS     r0,r0,r1
001256  9002              STR      r0,[sp,#8]
;;;1016   				SET_LoadA_OffsetH1 = var32c;
001258  9802              LDR      r0,[sp,#8]
00125a  6570              STR      r0,[r6,#0x54]  ; InFlashSave
;;;1017   				Polar1 &= ~0x04;
00125c  7860              LDRB     r0,[r4,#1]  ; correct_por
00125e  f0200004          BIC      r0,r0,#4
001262  7060              STRB     r0,[r4,#1]
                  |L3.4708|
;;;1018   			}
;;;1019   			Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
001264  4a71              LDR      r2,|L3.5164|
001266  2128              MOVS     r1,#0x28
001268  4871              LDR      r0,|L3.5168|
00126a  f7fffffe          BL       Flash_Write32BitDatas
;;;1020   //			Flash_Write_all ();	
;;;1021   			Flag_DAC_OFF =0;
00126e  6838              LDR      r0,[r7,#0]  ; flagB
001270  f0200008          BIC      r0,r0,#8
001274  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.4726|
;;;1022   		}
;;;1023   /*******************************??CC???°§????ßµ?******************************************/	
;;;1024   		if (g_tModS.RxBuf[1] == 0x2E||flag_ADJ_ALCC==1)			   //?°§?ßµ?
001276  f8990001          LDRB     r0,[r9,#1]  ; g_tModS
00127a  282e              CMP      r0,#0x2e
00127c  d003              BEQ      |L3.4742|
00127e  f89b1000          LDRB     r1,[r11,#0]  ; flagF
001282  06c9              LSLS     r1,r1,#27
001284  d50c              BPL      |L3.4768|
                  |L3.4742|
;;;1025   		{
;;;1026   			Modify_A_READ = Imon_value;//??°§
001286  496b              LDR      r1,|L3.5172|
001288  8809              LDRH     r1,[r1,#0]  ; Imon_value
00128a  6129              STR      r1,[r5,#0x10]  ; Modify_A_READ
;;;1027   			Modify_C_READ = Contr_Current;//???°§
00128c  496a              LDR      r1,|L3.5176|
00128e  8809              LDRH     r1,[r1,#0]  ; Contr_Current
001290  6169              STR      r1,[r5,#0x14]  ; Modify_C_READ
;;;1028   			Modify_A_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
001292  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
001296  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
00129a  eb012102          ADD      r1,r1,r2,LSL #8
00129e  61a9              STR      r1,[r5,#0x18]  ; Modify_A_ACT
                  |L3.4768|
;;;1029   		}
;;;1030   
;;;1031   		if (g_tModS.RxBuf[1] == 0x2F||flag_ADJ_AHCC==1)			   //?°§?ßµ???
0012a0  282f              CMP      r0,#0x2f
0012a2  d003              BEQ      |L3.4780|
0012a4  f89b0000          LDRB     r0,[r11,#0]  ; flagF
0012a8  0680              LSLS     r0,r0,#26
0012aa  d56c              BPL      |L3.4998|
                  |L3.4780|
;;;1032   		{
;;;1033   			vu16 var16;
;;;1034   			vu32 var32a;
;;;1035   			vu32 var32b;
;;;1036   			
;;;1037   			vu16 var16a;
;;;1038   			vu32 var32c;
;;;1039   			vu32 var32d;
;;;1040   			
;;;1041   			Modify_D_READ = Contr_Current;
0012ac  4862              LDR      r0,|L3.5176|
0012ae  8800              LDRH     r0,[r0,#0]  ; Contr_Current
0012b0  6228              STR      r0,[r5,#0x20]  ; Modify_D_READ
;;;1042   			Modify_B_READ = Imon_value;
0012b2  4860              LDR      r0,|L3.5172|
0012b4  8800              LDRH     r0,[r0,#0]  ; Imon_value
0012b6  61e8              STR      r0,[r5,#0x1c]  ; Modify_B_READ
;;;1043   			Modify_B_ACT = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
0012b8  f8990004          LDRB     r0,[r9,#4]  ; g_tModS
0012bc  f8991003          LDRB     r1,[r9,#3]  ; g_tModS
0012c0  eb002001          ADD      r0,r0,r1,LSL #8
0012c4  6268              STR      r0,[r5,#0x24]  ; Modify_B_ACT
;;;1044   			var32a = Modify_B_ACT;
0012c6  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
0012c8  9005              STR      r0,[sp,#0x14]
;;;1045   			var32a = var32a - Modify_A_ACT;
0012ca  9805              LDR      r0,[sp,#0x14]
0012cc  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
0012ce  1a40              SUBS     r0,r0,r1
0012d0  9005              STR      r0,[sp,#0x14]
;;;1046   			var32a = var32a << 14;
0012d2  9805              LDR      r0,[sp,#0x14]
0012d4  0380              LSLS     r0,r0,#14
0012d6  9005              STR      r0,[sp,#0x14]
;;;1047   			var16 = Modify_B_READ - Modify_A_READ;
0012d8  69e8              LDR      r0,[r5,#0x1c]  ; Modify_B_READ
0012da  6929              LDR      r1,[r5,#0x10]  ; Modify_A_READ
0012dc  1a40              SUBS     r0,r0,r1
0012de  9006              STR      r0,[sp,#0x18]
;;;1048   			var32a = var32a / var16;
0012e0  f8bd1018          LDRH     r1,[sp,#0x18]
0012e4  9805              LDR      r0,[sp,#0x14]
0012e6  fbb0f0f1          UDIV     r0,r0,r1
0012ea  9005              STR      r0,[sp,#0x14]
;;;1049   			REG_POWERA1 = var32a;
0012ec  9805              LDR      r0,[sp,#0x14]
0012ee  65b0              STR      r0,[r6,#0x58]  ; InFlashSave
;;;1050   			var32a = Modify_B_ACT;
0012f0  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
0012f2  9105              STR      r1,[sp,#0x14]
;;;1051   			var32a = var32a << 14;
0012f4  9905              LDR      r1,[sp,#0x14]
0012f6  0389              LSLS     r1,r1,#14
0012f8  9105              STR      r1,[sp,#0x14]
;;;1052   			var32b = Modify_B_READ;
0012fa  69e9              LDR      r1,[r5,#0x1c]  ; Modify_B_READ
0012fc  9104              STR      r1,[sp,#0x10]
;;;1053   			var32b = var32b * REG_POWERA1;
0012fe  9904              LDR      r1,[sp,#0x10]
001300  4348              MULS     r0,r1,r0
001302  9004              STR      r0,[sp,#0x10]
;;;1054   			if (var32a < var32b)
001304  e9dd1004          LDRD     r1,r0,[sp,#0x10]
001308  4288              CMP      r0,r1
00130a  d20a              BCS      |L3.4898|
;;;1055   			{
;;;1056   				var32b = var32b - var32a;
00130c  e9dd0104          LDRD     r0,r1,[sp,#0x10]
001310  1a40              SUBS     r0,r0,r1
001312  9004              STR      r0,[sp,#0x10]
;;;1057   				REG_POWERA_Offset1 = var32b;
001314  9804              LDR      r0,[sp,#0x10]
001316  6630              STR      r0,[r6,#0x60]  ; InFlashSave
;;;1058   				Polar4 |= 0x01;
001318  7920              LDRB     r0,[r4,#4]  ; correct_por
00131a  f0400001          ORR      r0,r0,#1
00131e  7120              STRB     r0,[r4,#4]
001320  e009              B        |L3.4918|
                  |L3.4898|
;;;1059   			}
;;;1060   			else 
;;;1061   			{
;;;1062   				var32a = var32a - var32b;
001322  e9dd1004          LDRD     r1,r0,[sp,#0x10]
001326  1a40              SUBS     r0,r0,r1
001328  9005              STR      r0,[sp,#0x14]
;;;1063   				REG_POWERA_Offset1 = var32a;
00132a  9805              LDR      r0,[sp,#0x14]
00132c  6630              STR      r0,[r6,#0x60]  ; InFlashSave
;;;1064   				Polar4 &= ~0x01;					//?°§????°Í?ßµ???
00132e  7920              LDRB     r0,[r4,#4]  ; correct_por
001330  f0200001          BIC      r0,r0,#1
001334  7120              STRB     r0,[r4,#4]
                  |L3.4918|
;;;1065   			}
;;;1066   	//---------------------------------------------------------------------------------//
;;;1067   			var32c = Modify_B_ACT; //???°§ßµ?
001336  6a68              LDR      r0,[r5,#0x24]  ; Modify_B_ACT
001338  9002              STR      r0,[sp,#8]
;;;1068   			var32c = var32c - Modify_A_ACT;
00133a  9802              LDR      r0,[sp,#8]
00133c  69a9              LDR      r1,[r5,#0x18]  ; Modify_A_ACT
00133e  1a40              SUBS     r0,r0,r1
001340  9002              STR      r0,[sp,#8]
;;;1069   			var32c = var32c << 14;
001342  9802              LDR      r0,[sp,#8]
001344  0380              LSLS     r0,r0,#14
001346  9002              STR      r0,[sp,#8]
;;;1070   			var16a=Modify_D_READ-Modify_C_READ;
001348  6a28              LDR      r0,[r5,#0x20]  ; Modify_D_READ
00134a  6969              LDR      r1,[r5,#0x14]  ; Modify_C_READ
00134c  1a40              SUBS     r0,r0,r1
00134e  9003              STR      r0,[sp,#0xc]
;;;1071   			var16a=var16a*2;
001350  f8bd100c          LDRH     r1,[sp,#0xc]
001354  f64f70ff          MOV      r0,#0xffff
001358  ea000041          AND      r0,r0,r1,LSL #1
00135c  9003              STR      r0,[sp,#0xc]
;;;1072   			var32c=var32c/var16a;
00135e  f8bd000c          LDRH     r0,[sp,#0xc]
001362  9902              LDR      r1,[sp,#8]
001364  fbb1f0f0          UDIV     r0,r1,r0
001368  9002              STR      r0,[sp,#8]
;;;1073   			SET_POWERA1 = var32c;
00136a  9802              LDR      r0,[sp,#8]
00136c  65f0              STR      r0,[r6,#0x5c]  ; InFlashSave
;;;1074   			var32c = Modify_B_ACT;
00136e  6a69              LDR      r1,[r5,#0x24]  ; Modify_B_ACT
001370  9102              STR      r1,[sp,#8]
;;;1075   			var32c = var32c << 14;
001372  9902              LDR      r1,[sp,#8]
001374  0389              LSLS     r1,r1,#14
001376  9102              STR      r1,[sp,#8]
;;;1076   			var32d = SET_POWERA1;
001378  9001              STR      r0,[sp,#4]
;;;1077   			var32d = var32d * (Modify_D_READ*2);
00137a  9801              LDR      r0,[sp,#4]
00137c  6a29              LDR      r1,[r5,#0x20]  ; Modify_D_READ
00137e  4348              MULS     r0,r1,r0
001380  0040              LSLS     r0,r0,#1
001382  e001              B        |L3.5000|
                  |L3.4996|
001384  e04f              B        |L3.5158|
                  |L3.4998|
001386  e022              B        |L3.5070|
                  |L3.5000|
001388  9001              STR      r0,[sp,#4]
;;;1078   			if (var32c < var32d)
00138a  e9dd1001          LDRD     r1,r0,[sp,#4]
00138e  4288              CMP      r0,r1
001390  d20a              BCS      |L3.5032|
;;;1079   			{
;;;1080   				var32d = var32d - var32c;
001392  e9dd0101          LDRD     r0,r1,[sp,#4]
001396  1a40              SUBS     r0,r0,r1
001398  9001              STR      r0,[sp,#4]
;;;1081   				SET_POWERA_Offset1 = var32d;
00139a  9801              LDR      r0,[sp,#4]
00139c  6670              STR      r0,[r6,#0x64]  ; InFlashSave
;;;1082   				Polar4 |= 0x04;
00139e  7920              LDRB     r0,[r4,#4]  ; correct_por
0013a0  f0400004          ORR      r0,r0,#4
0013a4  7120              STRB     r0,[r4,#4]
0013a6  e009              B        |L3.5052|
                  |L3.5032|
;;;1083   			}
;;;1084   			else 
;;;1085   			{
;;;1086   				var32c = var32c - var32d;
0013a8  e9dd1001          LDRD     r1,r0,[sp,#4]
0013ac  1a40              SUBS     r0,r0,r1
0013ae  9002              STR      r0,[sp,#8]
;;;1087   				SET_POWERA_Offset1 = var32c;
0013b0  9802              LDR      r0,[sp,#8]
0013b2  6670              STR      r0,[r6,#0x64]  ; InFlashSave
;;;1088   				Polar4 &= ~0x04;
0013b4  7920              LDRB     r0,[r4,#4]  ; correct_por
0013b6  f0200004          BIC      r0,r0,#4
0013ba  7120              STRB     r0,[r4,#4]
                  |L3.5052|
;;;1089   			}
;;;1090   			Flash_Write32BitDatas(FLASH_USER_START_ADDR,40, InFlashSave);
0013bc  4a1b              LDR      r2,|L3.5164|
0013be  2128              MOVS     r1,#0x28
0013c0  481b              LDR      r0,|L3.5168|
0013c2  f7fffffe          BL       Flash_Write32BitDatas
;;;1091   //			Flash_Write_all ();	
;;;1092   			Flag_DAC_OFF=0;
0013c6  6838              LDR      r0,[r7,#0]  ; flagB
0013c8  f0200008          BIC      r0,r0,#8
0013cc  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.5070|
;;;1093   		}
;;;1094   /***********??DAC*******************************************/
;;;1095   		if (g_tModS.RxBuf[1] == 0x0F)			   
0013ce  f8990001          LDRB     r0,[r9,#1]  ; g_tModS
0013d2  280f              CMP      r0,#0xf
0013d4  d10b              BNE      |L3.5102|
;;;1096   		{
;;;1097   			Contr_Laod = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
0013d6  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
0013da  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
0013de  eb012102          ADD      r1,r1,r2,LSL #8
0013e2  f8a81000          STRH     r1,[r8,#0]
;;;1098   			Flag_DAC_OFF=1;
0013e6  6839              LDR      r1,[r7,#0]  ; flagB
0013e8  f0410108          ORR      r1,r1,#8
0013ec  6039              STR      r1,[r7,#0]  ; flagB
                  |L3.5102|
;;;1099   		}
;;;1100   		if (g_tModS.RxBuf[1] == 0x20)			   
0013ee  2820              CMP      r0,#0x20
0013f0  d10b              BNE      |L3.5130|
;;;1101   		{
;;;1102   			Contr_Voltage = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
0013f2  f8991004          LDRB     r1,[r9,#4]  ; g_tModS
0013f6  f8992003          LDRB     r2,[r9,#3]  ; g_tModS
0013fa  eb012102          ADD      r1,r1,r2,LSL #8
0013fe  4a0f              LDR      r2,|L3.5180|
001400  8011              STRH     r1,[r2,#0]
;;;1103   			Flag_DAC_OFF=1;
001402  6839              LDR      r1,[r7,#0]  ; flagB
001404  f0410108          ORR      r1,r1,#8
001408  6039              STR      r1,[r7,#0]  ; flagB
                  |L3.5130|
;;;1104   		}
;;;1105   		if (g_tModS.RxBuf[1] == 0x21)			   
00140a  2821              CMP      r0,#0x21
00140c  d10b              BNE      |L3.5158|
;;;1106   		{
;;;1107   			Contr_Current = (g_tModS.RxBuf[3] << 8) + g_tModS.RxBuf[4];
00140e  f8990004          LDRB     r0,[r9,#4]  ; g_tModS
001412  f8991003          LDRB     r1,[r9,#3]  ; g_tModS
001416  eb002001          ADD      r0,r0,r1,LSL #8
00141a  4907              LDR      r1,|L3.5176|
00141c  8008              STRH     r0,[r1,#0]
;;;1108   			Flag_DAC_OFF=1;
00141e  6838              LDR      r0,[r7,#0]  ; flagB
001420  f0400008          ORR      r0,r0,#8
001424  6038              STR      r0,[r7,#0]  ; flagB
                  |L3.5158|
;;;1109   		}
;;;1110   	}
;;;1111   //===================================================================================
;;;1112   }
001426  b007              ADD      sp,sp,#0x1c
001428  e8bd8ff0          POP      {r4-r11,pc}
;;;1113   //===============================AD÷µ◊™ªª≥…≤‚¡ø÷µ============================================//
                          ENDP

                  |L3.5164|
                          DCD      InFlashSave
                  |L3.5168|
                          DCD      0x080e0000
                  |L3.5172|
                          DCD      Imon_value
                  |L3.5176|
                          DCD      Contr_Current
                  |L3.5180|
                          DCD      Contr_Voltage

                          AREA ||.bss||, DATA, NOINIT, ALIGN=2

                  Correct_Parametet
                          %        84
                  Correct_Strong
                          %        84
                  Run_Control
                          %        196

                          AREA ||.data||, DATA, ALIGN=2

                  DAC_Flag
000000  00                DCB      0x00
                  ADDR
000001  00                DCB      0x00
                  i
000002  0000              DCB      0x00,0x00
                  count
000004  0000              DCB      0x00,0x00
                  countr
000006  0000              DCB      0x00,0x00
                  sumv
                          DCD      0x00000000
                  sumr
                          DCD      0x00000000
                  Modify_A_READ
                          DCD      0x00000000
                  Modify_C_READ
                          DCD      0x00000000
                  Modify_A_ACT
                          DCD      0x00000000
                  Modify_B_READ
                          DCD      0x00000000
                  Modify_D_READ
                          DCD      0x00000000
                  Modify_B_ACT
                          DCD      0x00000000
                  correct_por
                          DCD      0x00000000
00002c  0000              DCB      0x00,0x00

                          AREA ||area_number.8||, DATA, ALIGN=1

                          EXPORTAS ||area_number.8||, ||.data||
                  ADJ_Write
000000  0000              DCB      0x00,0x00

;*** Start embedded assembler ***

#line 1 "..\\drive\\modbus.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_modbus_c_bae18981____REV16|
#line 129 "D:\\Keil_v5\\ARM\\CMSIS\\Include\\core_cmInstr.h"
|__asm___8_modbus_c_bae18981____REV16| PROC
#line 130

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_modbus_c_bae18981____REVSH|
#line 144
|__asm___8_modbus_c_bae18981____REVSH| PROC
#line 145

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
